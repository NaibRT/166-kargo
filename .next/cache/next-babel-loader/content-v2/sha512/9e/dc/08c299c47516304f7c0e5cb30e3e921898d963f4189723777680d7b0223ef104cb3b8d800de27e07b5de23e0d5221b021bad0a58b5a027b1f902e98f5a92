{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport { useRouter } from \"next/router\";\nimport React, { memo, useState } from 'react';\nimport 'react-day-picker/lib/style.css';\nimport { useForm } from \"react-hook-form\";\nimport { useIntl } from 'react-intl';\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport AsideMenu from \"../components/aside-menu/index\";\nimport Aside from '../components/aside/aside';\nimport ButtonComponent from \"../components/button/index\";\nimport Card from \"../components/card/card\";\nimport FromGroup from \"../components/form-group/form-group\";\nimport Input from \"../components/input/input\";\nimport Main from '../components/main/main';\nimport Page from \"../components/page/page\";\nimport Redirect from \"../components/redirect/redirect\";\nimport Selectbox from \"../components/selectbox/selectbox\";\nconst telData = [{\n  id: 15,\n  name: 'Türkiyə'\n}, {\n  id: 16,\n  name: 'Türkiyə'\n}, {\n  id: 17,\n  name: 'Türkiyə'\n}];\nconst curData = [{\n  id: 'try',\n  name: 'Türkiyə Lirəsi'\n}, {\n  id: 'azn',\n  name: 'Azərbaycan Manatı'\n}, {\n  id: 'eur',\n  name: 'Avro'\n}, {\n  id: 'usd',\n  name: 'ABŞ dolları'\n}, {\n  id: 'bla',\n  name: 'bla dolları'\n}];\n\nfunction Decleration(props) {\n  var _errors$country, _errors$track_number, _errors$shop_name, _errors$main_group, _errors$sub_category, _props$mainCategories, _errors$price, _errors$invoice, _errors$note;\n\n  const {\n    formatMessage: f\n  } = useIntl();\n\n  if (!props.entry.isLoged) {\n    return /*#__PURE__*/_jsx(Redirect, {});\n  }\n\n  const {\n    0: checkSerial,\n    1: setCheckSerial\n  } = useState('AA');\n  const {\n    locale\n  } = useRouter();\n  const {\n    register,\n    errors,\n    handleSubmit,\n    watch,\n    setError\n  } = useForm();\n  const {\n    0: subCategories,\n    1: setSubCategories\n  } = useState('AA');\n  const {\n    0: fileName,\n    1: setFileName\n  } = useState(null);\n\n  const handleChange = ev => {\n    let {\n      name,\n      value\n    } = ev.target;\n    setUser(_objectSpread(_objectSpread({}, user), {}, {\n      [name]: value\n    }));\n  };\n\n  const submit = data => {\n    let newFormData = new FormData();\n\n    for (let key in data) {\n      if (key === 'invoice') newFormData.append(key, data[key][0]);else newFormData.append(key, data[key]);\n    }\n\n    newFormData.append('_method', 'POST');\n    axios.post(`${process.env.NEXT_PUBLIC_API_URL}batches?lan=${locale}`, newFormData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Accepts': 'application/json',\n        'Authorization': `Bearer ${props.entry.user.accessToken}`\n      }\n    }).then(res => {\n      Swal.fire({\n        title: res.message,\n        icon: 'success'\n      });\n    }).catch(err => {\n      for (let key in err.response.data.errors) {\n        setError(key, {\n          message: err.response.data.errors[key].join('\\n')\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(Page, {\n    className: \"user-profile-page bg-bg pt-lg pb-lg\",\n    children: [/*#__PURE__*/_jsx(Aside, {\n      className: \"mr-sm\",\n      children: /*#__PURE__*/_jsx(AsideMenu, {})\n    }), /*#__PURE__*/_jsx(Main, {\n      className: \"p-none\",\n      children: /*#__PURE__*/_jsxs(Card, {\n        className: \"bg-white p-sm br-lg\",\n        children: [/*#__PURE__*/_jsx(Card.Header, {\n          text: f({\n            id: \"decleration\"\n          })\n        }), /*#__PURE__*/_jsxs(\"form\", {\n          onSubmit: handleSubmit(submit),\n          children: [/*#__PURE__*/_jsx(Card.Body, {\n            className: \"bg-bg\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"declaration__flex\",\n              children: [/*#__PURE__*/_jsx(FromGroup, {\n                label: f({\n                  id: \"chooseone\"\n                }),\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_errors$country = errors.country) === null || _errors$country === void 0 ? void 0 : _errors$country.message,\n                children: /*#__PURE__*/_jsx(Selectbox, {\n                  className: \"bg-white w-100\",\n                  data: [{\n                    id: 15,\n                    name: f({\n                      id: 'turkey'\n                    })\n                  }, {\n                    id: 16,\n                    name: f({\n                      id: 'usa'\n                    })\n                  }, {\n                    id: 17,\n                    name: f({\n                      id: 'ukraina'\n                    })\n                  }],\n                  name: \"country\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'country type is required'\n                    }\n                  }) //  onChange={handleChange}\n\n                })\n              }), /*#__PURE__*/_jsx(FromGroup, {\n                label: \"Track \\u0130D\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_errors$track_number = errors.track_number) === null || _errors$track_number === void 0 ? void 0 : _errors$track_number.message,\n                children: /*#__PURE__*/_jsx(Input, {\n                  type: \"text\",\n                  name: \"track_number\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'track number is required'\n                    }\n                  }) //  onChange={handleChange}\n\n                })\n              }), /*#__PURE__*/_jsx(FromGroup, {\n                label: f({\n                  id: \"shopname\"\n                }),\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_errors$shop_name = errors.shop_name) === null || _errors$shop_name === void 0 ? void 0 : _errors$shop_name.message,\n                children: /*#__PURE__*/_jsx(Input, {\n                  type: \"text\",\n                  name: \"shop_name\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'shop name is required'\n                    }\n                  }) //  onChange={handleChange}\n\n                })\n              }), /*#__PURE__*/_jsx(FromGroup, {\n                label: f({\n                  id: \"main-g\"\n                }),\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_errors$main_group = errors.main_group) === null || _errors$main_group === void 0 ? void 0 : _errors$main_group.message,\n                children: /*#__PURE__*/_jsx(Selectbox, {\n                  className: \"bg-white w-100 \",\n                  data: props.mainCategories,\n                  name: \"main_group\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'main_group type is required'\n                    }\n                  }),\n                  onChange: ev => {\n                    setSubCategories(ev.target.value);\n                  }\n                })\n              }), /*#__PURE__*/_jsx(FromGroup, {\n                label: f({\n                  id: \"sub-g\"\n                }),\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_errors$sub_category = errors.sub_category) === null || _errors$sub_category === void 0 ? void 0 : _errors$sub_category.message,\n                children: /*#__PURE__*/_jsx(Selectbox, {\n                  className: \"bg-white w-100\",\n                  data: subCategories && ((_props$mainCategories = props.mainCategories.find(x => x.id === +subCategories)) === null || _props$mainCategories === void 0 ? void 0 : _props$mainCategories.sub_categories),\n                  name: \"sub_category\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'sub category type is required'\n                    }\n                  })\n                })\n              }), /*#__PURE__*/_jsx(FromGroup, {\n                label: f({\n                  id: \"price-inv\"\n                }),\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_errors$price = errors.price) === null || _errors$price === void 0 ? void 0 : _errors$price.message,\n                children: /*#__PURE__*/_jsx(Input, {\n                  type: \"number\",\n                  name: \"price\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'price is required'\n                    }\n                  })\n                })\n              }), /*#__PURE__*/_jsx(FromGroup, {\n                label: f({\n                  id: \"upload\"\n                }),\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                bodyStyle: {\n                  height: '150px'\n                },\n                error: (_errors$invoice = errors.invoice) === null || _errors$invoice === void 0 ? void 0 : _errors$invoice.message,\n                children: /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"file-uploade\",\n                  children: [/*#__PURE__*/_jsx(Input, {\n                    className: \"w-100\",\n                    type: \"file\",\n                    title: \" \",\n                    name: \"invoice\",\n                    Ref: register({\n                      required: {\n                        value: true,\n                        message: 'invoice is required'\n                      }\n                    }),\n                    onChange: e => {\n                      console.log(e.target.files[0]);\n                      setFileName(e.target.files[0].name);\n                    }\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"over-layer\",\n                    children: [/*#__PURE__*/_jsx(\"img\", {\n                      src: \"/assets/icons/upload.png\"\n                    }), /*#__PURE__*/_jsxs(\"p\", {\n                      children: [\"S\\xFCr\\xFCkl\\u0259yib bura at\\u0131n \", /*#__PURE__*/_jsx(\"br\", {}), \"v\\u0259 ya \", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"span\", {\n                        children: \"fayl\\u0131 se\\xE7in\"\n                      }), \" \", /*#__PURE__*/_jsx(\"br\", {}), fileName && /*#__PURE__*/_jsx(\"strong\", {\n                        children: fileName\n                      })]\n                    })]\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(FromGroup, {\n                label: f({\n                  id: \"note\"\n                }),\n                bodyClass: \"bg-white\",\n                bodyStyle: {\n                  height: '150px'\n                },\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_errors$note = errors.note) === null || _errors$note === void 0 ? void 0 : _errors$note.message,\n                children: /*#__PURE__*/_jsx(\"textarea\", {\n                  className: \"p-xs w-100 h-100\",\n                  style: {\n                    outline: 'none',\n                    border: 'none'\n                  },\n                  placeholder: \"qeydiniz varsa daxil edin\",\n                  name: \"note\",\n                  ref: register({\n                    required: {\n                      value: true,\n                      message: 'note is required'\n                    }\n                  })\n                })\n              })]\n            })\n          }), /*#__PURE__*/_jsx(Card.Footer, {\n            className: \"mt-sm\",\n            style: {\n              justifyContent: 'flex-end'\n            },\n            children: /*#__PURE__*/_jsx(ButtonComponent, {\n              className: \"mt-sm\",\n              label: f({\n                id: \"declare-inadvance\"\n              })\n            })\n          })]\n        })]\n      })\n    })]\n  });\n}\n\nconst mapStateToProps = state => ({\n  entry: state.entry\n});\n\nconst mapDispatchToProps = {};\nexport async function getStaticProps({\n  locale\n}) {\n  let categories = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}categories/main?lan=${locale}`);\n  return {\n    props: {\n      mainCategories: categories.data\n    }\n  };\n}\nexport default connect(mapStateToProps)( /*#__PURE__*/memo(Decleration));","map":null,"metadata":{},"sourceType":"module"}