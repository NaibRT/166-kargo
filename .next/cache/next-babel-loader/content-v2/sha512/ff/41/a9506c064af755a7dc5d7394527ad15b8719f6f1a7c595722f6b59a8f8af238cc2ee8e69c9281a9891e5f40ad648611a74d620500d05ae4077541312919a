{"ast":null,"code":"import _regeneratorRuntime from \"/Users/naibtahmazli/Documents/166kargo/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/naibtahmazli/Documents/166kargo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport router from \"next/router\";\nimport Swal from \"sweetalert2\";\nimport { login, logout, register, updateUser } from \"./actions\";\nexport var Login = function Login(url, data) {\n  var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return function (dispatch) {\n    console.log(url);\n    axios.post(\"\".concat(process.env.NEXT_PUBLIC_API_URL).concat(url), data, {\n      headers: headers\n    }).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(res) {\n        var _data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(res.statusText !== 'OK')) {\n                  _context.next = 5;\n                  break;\n                }\n\n                console.log('loginerror', res.data);\n                dispatch(login({\n                  isError: true,\n                  errors: res.data\n                }));\n                _context.next = 9;\n                break;\n\n              case 5:\n                _context.next = 7;\n                return res.data;\n\n              case 7:\n                _data = _context.sent;\n                dispatch(login(_data));\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }())[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var UserRegister = function UserRegister(url, data) {\n  var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return function (dispatch) {\n    console.log(url);\n    axios.post(\"\".concat(process.env.NEXT_PUBLIC_API_URL).concat(url), data, {\n      headers: headers\n    }).then( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(res) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                Swal.fire({\n                  title: 'Success!',\n                  text: 'Əməliyyat uğurla tamamlandı',\n                  icon: 'success',\n                  confirmButtonText: 'OK'\n                }).then(function (res) {\n                  if (res.isConfirmed) {\n                    router.push('/');\n                  }\n                });\n                _context2.next = 3;\n                return res.data;\n\n              case 3:\n                data = _context2.sent;\n                dispatch(register(data));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }())[\"catch\"](function (errors) {\n      console.log(errors); // dispatch(login({isError:true,errors:errors}))\n    });\n  };\n};\nexport var LogOut = function LogOut() {\n  return function (dispatch) {\n    dispatch(logout());\n  };\n};\nexport var UpdateUser = function UpdateUser(data) {\n  return function (dispatch) {\n    dispatch(updateUser(data));\n  };\n};","map":{"version":3,"sources":["/Users/naibtahmazli/Documents/166kargo/redux/entry/entryActions.js"],"names":["axios","router","Swal","login","logout","register","updateUser","Login","url","data","headers","dispatch","console","log","post","process","env","NEXT_PUBLIC_API_URL","then","res","statusText","isError","errors","err","UserRegister","fire","title","text","icon","confirmButtonText","isConfirmed","push","LogOut","UpdateUser"],"mappings":"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","sourcesContent":["\nimport axios from \"axios\";\nimport router from \"next/router\";\nimport Swal from \"sweetalert2\";\nimport { login, logout, register, updateUser } from \"./actions\";\n\nexport const Login = (url,data,headers = {}) => dispatch => {\n    console.log(url)\n    axios.post(`${process.env.NEXT_PUBLIC_API_URL}${url}`,data,{\n        headers:headers,\n      })\n      .then(async res => {\n        if(res.statusText!== 'OK'){\n          console.log('loginerror',res.data)\n          dispatch(login({isError:true,errors:res.data}))\n        }else{\n          let data = await res.data;\n          dispatch(login(data))\n        }\n      }).catch(err => console.log(err))\n}\n\nexport const UserRegister = (url,data,headers = {}) => dispatch => {\n  console.log(url)\n  axios.post(`${process.env.NEXT_PUBLIC_API_URL}${url}`,data,{\n      headers:headers,\n    })\n    .then(async res => {\n      Swal.fire({\n        title: 'Success!',\n        text: 'Əməliyyat uğurla tamamlandı',\n        icon: 'success',\n        confirmButtonText: 'OK',\n      }).then(res => {\n        if(res.isConfirmed){\n          router.push('/')\n        }\n      })\n      let data = await res.data;\n      dispatch(register(data))\n    }).catch(errors => {\n      console.log(errors)\n      // dispatch(login({isError:true,errors:errors}))\n    })\n}\n\nexport const LogOut = () => dispatch => {\n    dispatch(logout())\n}\n\nexport const UpdateUser = (data) => dispatch => {\n  dispatch(updateUser(data))\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}