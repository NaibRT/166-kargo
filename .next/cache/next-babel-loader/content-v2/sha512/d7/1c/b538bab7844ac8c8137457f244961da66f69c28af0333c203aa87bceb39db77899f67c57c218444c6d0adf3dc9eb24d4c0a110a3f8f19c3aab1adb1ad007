{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport React, { memo, useLayoutEffect, useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useIntl } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport AsideMenu from \"../components/aside-menu/index\";\nimport Aside from \"../components/aside/aside\";\nimport ButtonComponent from \"../components/button\";\nimport Card from \"../components/card/card\";\nimport Checkbox from \"../components/checkbox/checkbox\";\nimport FromGroup from \"../components/form-group/form-group\";\nimport Input from \"../components/input/input\";\nimport Main from \"../components/main/main\";\nimport PackageItem from \"../components/package_item/package-item\";\nimport Page from \"../components/page/page\";\nimport Redirect from \"../components/redirect/redirect\";\nimport Tabel from \"../components/tabel/tabel\";\nimport { PayByBalanceAction } from '../redux/entry/entryActions';\n\nfunction Packages(props) {\n  var _errors$promocode;\n\n  if (!props.entry.isLoged) {\n    return /*#__PURE__*/_jsx(Redirect, {});\n  }\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setError\n  } = useForm();\n  const {\n    formatMessage: f\n  } = useIntl();\n  const {\n    0: packages,\n    1: setPackages\n  } = useState([]);\n  const {\n    0: filteredPacks,\n    1: setFilteredPacks\n  } = useState([]);\n  const {\n    0: status,\n    1: setStatus\n  } = useState([]);\n  const {\n    0: selectedPackages,\n    1: setSelectedPackages\n  } = useState({\n    packages: [],\n    total: 0,\n    discountTotal: 0,\n    code: \"\",\n    isAccepted: false,\n    status: 0\n  });\n  const {\n    locale\n  } = useRouter();\n  const mainCheckRef = useRef();\n  const checkRefs = useRef([]);\n  checkRefs.current = [];\n  const tabRefs = useRef([]);\n  tabRefs.current = [];\n\n  const submit = data => {\n    console.log(data);\n    axios.post(`${process.env.NEXT_PUBLIC_API_URL}promocode?promocode=${data.promocode}&status=${selectedPackages.status}`, {}, {\n      headers: {\n        \"content-type\": \"application/json\",\n        authorization: `Bearer ${props.entry.user.accessToken}`\n      }\n    }).then(res => {\n      console.log(res.data.batches);\n      setPackages(res.data.batches);\n      setFilteredPacks(res.data.batches);\n    }).catch(err => {\n      setError(\"promocode\", {\n        message: err.response.data.error\n      });\n    });\n  };\n\n  const PromisAll = async () => {\n    let batchesData = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}batches?lan=${locale}`, {\n      headers: {\n        authorization: `Bearer ${props.entry.user.accessToken}`\n      }\n    });\n    let statusData = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}status?lan=${locale}`, {\n      headers: {\n        authorization: `Bearer ${props.entry.user.accessToken}`\n      }\n    });\n    return {\n      batchesData: batchesData.data,\n      statusData: statusData.data\n    };\n  };\n\n  useLayoutEffect(() => {\n    PromisAll().then(res => {\n      setPackages(res.batchesData);\n      setFilteredPacks(res.batchesData);\n      setStatus(res.statusData);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const addTabRefs = ref => {\n    if (ref && !tabRefs.current.includes(ref)) {\n      tabRefs.current.push(ref);\n    }\n  };\n\n  const toggleTabRefs = async ev => {\n    tabRefs.current.forEach(x => x.classList.remove(\"pack-active\"));\n    ev.target.classList.add(\"pack-active\");\n  };\n\n  const getBatchesByStatausId = async id => {\n    axios.get(`${process.env.NEXT_PUBLIC_API_URL}batches?status=${id}&lan=${locale}`, {\n      headers: {\n        authorization: `Bearer ${props.entry.user.accessToken}`\n      }\n    }).then(res => {\n      setPackages(res.data);\n      setFilteredPacks(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const tabButtonClick = ev => {\n    let id = ev.target.getAttribute(\"data-id\");\n    toggleTabRefs(ev);\n    getBatchesByStatausId(id);\n\n    if (id != 0) {\n      let newPackages = packages.filter(x => x.status.id == id);\n      setFilteredPacks([...newPackages]);\n    } else {\n      setFilteredPacks([...packages]);\n    }\n\n    setSelectedPackages({\n      discountTotal: 0,\n      packages: [],\n      total: 0,\n      code: \"\",\n      isAccepted: false,\n      status: id\n    });\n  };\n\n  const addCheckRefs = ref => {\n    if (ref && !checkRefs.current.includes(ref)) {\n      checkRefs.current.push(ref);\n    }\n  };\n\n  const checkHandler = ev => {\n    let {\n      value,\n      checked\n    } = ev.target;\n    let price = ev.target.getAttribute(\"data-price\");\n    let dataDiscount = ev.target.getAttribute(\"data-discount\");\n    let total = 0;\n    let disc = 0;\n    console.log('dis', dataDiscount);\n\n    if (checked) {\n      selectedPackages.packages.push(value);\n\n      if (dataDiscount != 0) {\n        setSelectedPackages(_objectSpread(_objectSpread({}, selectedPackages), {}, {\n          total: selectedPackages.total + parseFloat(price),\n          discountTotal: selectedPackages.discountTotal + parseFloat(dataDiscount),\n          packages: [...selectedPackages.packages]\n        }));\n      } else {\n        setSelectedPackages(_objectSpread(_objectSpread({}, selectedPackages), {}, {\n          discountTotal: selectedPackages.discountTotal + parseFloat(price),\n          total: selectedPackages.total + parseFloat(price),\n          packages: [...selectedPackages.packages]\n        }));\n      }\n    } else {\n      let newPackages = selectedPackages.packages.filter(x => x !== value);\n\n      if (dataDiscount != 0) {\n        setSelectedPackages(_objectSpread(_objectSpread({}, selectedPackages), {}, {\n          total: selectedPackages.total >= 0 && selectedPackages.total - parseFloat(price),\n          discountTotal: selectedPackages.discountTotal >= 0 && selectedPackages.discountTotal - parseFloat(dataDiscount),\n          packages: newPackages\n        }));\n      } else {\n        setSelectedPackages(_objectSpread(_objectSpread({}, selectedPackages), {}, {\n          discountTotal: selectedPackages.discountTotal >= 0 && selectedPackages.discountTotal - parseFloat(price),\n          total: selectedPackages.total >= 0 && selectedPackages.total - parseFloat(price),\n          packages: newPackages\n        }));\n      }\n    }\n\n    !selectedPackages.packages.some(x => x) ? mainCheckRef.current.checked = false : null;\n  };\n\n  const selectAll = e => {\n    let total = 0;\n    let discountTotal = 0;\n    let packages = [];\n    checkRefs.current.forEach(x => {\n      x.checked = e.target.checked;\n\n      if (e.target.checked && !packages.includes(x.value)) {\n        packages.push(x.value);\n        total += +x.getAttribute(\"data-price\");\n        discountTotal += +x.getAttribute(\"data-discount\");\n      } else {\n        packages = packages.filter(p => p !== x.value);\n        total -= total >= 0 && +x.getAttribute(\"data-price\");\n        discountTotal -= discountTotal >= 0 && +x.getAttribute(\"data-discount\");\n      }\n    });\n    setSelectedPackages(_objectSpread(_objectSpread({}, selectedPackages), {}, {\n      total: selectedPackages.total - total,\n      packages: packages\n    }));\n  };\n\n  const PaybyCard = (data = {}) => {\n    axios.post(`${process.env.NEXT_PUBLIC_API_URL}payment`, data, {\n      headers: {\n        authorization: `Bearer ${props.entry.user.accessToken}`\n      }\n    }).then(res => {\n      console.log('red', res.data.url);\n      window.location.href = res.data.url;\n    }).catch(err => console.log(err));\n  };\n\n  const PaybyBalance = () => {\n    if (props.entry.user.user.balance >= 0) {\n      props.PayByBalanceAction('payment', {\n        price: selectedPackages.discountTotal,\n        sourcetype: 3,\n        batches: selectedPackages.packages\n      }, {\n        'authorization': `Bearer ${props.entry.user.accessToken}`\n      });\n    } else {\n      Swal.fire({\n        text: 'Balansda kifayət qədər məbləğ yoxdur',\n        icon: 'info',\n        confirmButtonText: 'OK'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(Page, {\n    className: \"bg-bg pt-lg pb-lg\",\n    children: [/*#__PURE__*/_jsx(Aside, {\n      className: \"mr-sm\",\n      children: /*#__PURE__*/_jsx(AsideMenu, {})\n    }), /*#__PURE__*/_jsxs(Main, {\n      className: \"bg-c p-none\",\n      children: [/*#__PURE__*/_jsxs(Card, {\n        className: \"bg-bg pb-sm mgm_ss p-sm\",\n        children: [/*#__PURE__*/_jsx(Card.Header, {\n          text: f({\n            id: \"active-pac\"\n          }),\n          endElelment: /*#__PURE__*/_jsx(Checkbox, {\n            text: f({\n              id: \"choose-all\"\n            }),\n            Ref: ref => mainCheckRef.current = ref,\n            onClick: selectAll,\n            className: \"bg-white border-subtitle\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          class: \"ssc\",\n          style: {\n            overflowX: \"scroll\"\n          },\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \" pl-none\",\n            style: {\n              display: \"flex\",\n              marginBottom: \"20px\",\n              width: \"max-content\"\n            },\n            children: [/*#__PURE__*/_jsx(ButtonComponent, {\n              label: `Hamsı (${packages.length})`,\n              className: \"mr-xs p-sm bg-bg pack-active\",\n              \"data-id\": 0,\n              Ref: addTabRefs,\n              onClick: tabButtonClick\n            }), status.map(x => /*#__PURE__*/_jsx(ButtonComponent, {\n              label: `${x.name} (${x.count})`,\n              className: \" p-xs bg-bg \",\n              \"data-id\": x.id,\n              Ref: addTabRefs,\n              onClick: tabButtonClick\n            }))]\n          })\n        }), /*#__PURE__*/_jsx(Card.Body, {\n          className: \"p-none\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"packages__fr\",\n            children: filteredPacks.filter(x => x.status.id !== 6).map(p => /*#__PURE__*/_jsx(PackageItem, {\n              checkRef: addCheckRefs,\n              item: p,\n              onCheck: checkHandler\n            }, p.id))\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"footer__pck\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"package-total\",\n            children: [/*#__PURE__*/_jsxs(\"small\", {\n              children: [selectedPackages.packages.length, \" \", f({\n                id: \"chosed\"\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"space-between\"\n              },\n              children: [/*#__PURE__*/_jsxs(\"b\", {\n                children: [f({\n                  id: \"total\"\n                }), \":\"]\n              }), /*#__PURE__*/_jsx(\"div\", {\n                style: {\n                  display: \"flex\",\n                  flexDirection: \"column\"\n                },\n                children: selectedPackages.discountTotal > 0 ? /*#__PURE__*/_jsxs(_Fragment, {\n                  children: [/*#__PURE__*/_jsxs(\"del\", {\n                    style: {\n                      textDecorationColor: \"red\"\n                    },\n                    children: [parseFloat(selectedPackages.total).toFixed(2), \" AZN\"]\n                  }), /*#__PURE__*/_jsxs(\"b\", {\n                    children: [parseFloat(selectedPackages.discountTotal).toFixed(2), \" AZN\"]\n                  })]\n                }) : /*#__PURE__*/_jsxs(\"b\", {\n                  children: [parseFloat(selectedPackages.discountTotal).toFixed(2), \" AZN\"]\n                })\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"package__btns\",\n            children: [/*#__PURE__*/_jsx(\"form\", {\n              children: /*#__PURE__*/_jsxs(FromGroup, {\n                bodyClass: \"bg-white pl-xs\",\n                bodyStyle: {\n                  height: \"44px\",\n                  width: \"200px\"\n                },\n                className: \"mr-xs chng__bodystyle\",\n                style: {\n                  marginBottom: \"0px\"\n                },\n                error: (_errors$promocode = errors.promocode) === null || _errors$promocode === void 0 ? void 0 : _errors$promocode.message,\n                children: [/*#__PURE__*/_jsx(Input, {\n                  placeholder: f({\n                    id: \"addcode\"\n                  }),\n                  name: \"promocode\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: f({\n                        id: \"promo-requir\"\n                      })\n                    }\n                  }),\n                  onChange: e => setSelectedPackages(_objectSpread(_objectSpread({}, selectedPackages), {}, {\n                    code: e.target.value\n                  }))\n                }), selectedPackages.isAccepted ? /*#__PURE__*/_jsx(ButtonComponent, {\n                  className: \"bg-white w-50\",\n                  style: {\n                    textDecorationLine: \"underline\",\n                    color: \"darkblue\",\n                    padding: \"0px 10px\"\n                  },\n                  label: \"L\\u0259\\u011Fv et\",\n                  onClick: () => {\n                    setSelectedPackages(_objectSpread(_objectSpread({}, selectedPackages), {}, {\n                      isAccepted: false\n                    }));\n                  }\n                }) : /*#__PURE__*/_jsx(ButtonComponent, {\n                  disabled: !selectedPackages.code ? true : false,\n                  style: {\n                    padding: \"0 10px\"\n                  },\n                  className: \"color-white bg-success\",\n                  label: f({\n                    id: \"confirm\"\n                  }),\n                  type: \"submit\",\n                  onClick: handleSubmit(submit) //  onClick={() =>{\n                  //     //  setSelectedPackages({\n                  //     //    ...selectedPackages,\n                  //     //    isAccepted:true\n                  //     //  });\n                  //    }}\n\n                })]\n              })\n            }), /*#__PURE__*/_jsx(ButtonComponent, {\n              style: {\n                padding: \"0 20px\"\n              },\n              className: \"color-white bg-success mr-xs desk\",\n              label: f({\n                id: \"paybycard\"\n              }),\n              endElement: /*#__PURE__*/_jsx(\"span\", {\n                className: \"color-white pl-sm\",\n                children: \"\\u2192\"\n              }),\n              onClick: () => PaybyCard({\n                price: selectedPackages.discountTotal,\n                sourcetype: 2,\n                batches: selectedPackages.packages\n              })\n            }), /*#__PURE__*/_jsx(ButtonComponent, {\n              style: {\n                padding: \"0 10px\"\n              },\n              className: \"desk\",\n              label: f({\n                id: \"paybybalance\"\n              }),\n              endElement: /*#__PURE__*/_jsx(\"span\", {\n                className: \"color-black mr-xs pl-sm \",\n                children: \"\\u2192\"\n              }),\n              onClick: PaybyBalance\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"btn__fkl\",\n              children: [/*#__PURE__*/_jsx(ButtonComponent, {\n                style: {\n                  padding: \"0 10px\"\n                },\n                className: \"color-white bg-success mr-xs\",\n                label: f({\n                  id: \"paybycard\"\n                }),\n                endElement: /*#__PURE__*/_jsx(\"span\", {\n                  className: \"color-white pl-sm\",\n                  children: \"\\u2192\"\n                }),\n                onClick: () => PaybyCard({\n                  price: selectedPackages.discountTotal,\n                  sourcetype: 2,\n                  batches: selectedPackages.packages\n                })\n              }), /*#__PURE__*/_jsx(ButtonComponent, {\n                style: {\n                  padding: \"0 10px\"\n                },\n                label: f({\n                  id: \"paybybalance\"\n                }),\n                endElement: /*#__PURE__*/_jsx(\"span\", {\n                  className: \"color-black mr-xs pl-sm\",\n                  children: \"\\u2192\"\n                }),\n                onClick: PaybyBalance\n              })]\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(Card, {\n        className: \"p-sm bg-white\",\n        children: [/*#__PURE__*/_jsx(Card.Header, {\n          text: f({\n            id: \"order-history\"\n          })\n        }), /*#__PURE__*/_jsx(Card.Body, {\n          className: \"p-none overflow__package\",\n          children: /*#__PURE__*/_jsx(Tabel, {\n            th: [f({\n              id: \"tracking\"\n            }), f({\n              id: \"shop\"\n            }), f({\n              id: \"category\"\n            }), f({\n              id: \"amount\"\n            }), f({\n              id: \"weight\"\n            }), f({\n              id: \"delivery\"\n            }), f({\n              id: \"status\"\n            })],\n            data: packages.map(x => {\n              if (x.status.id == 6) {\n                return {\n                  track_number: x.track_number,\n                  shop: x.shop,\n                  category: x.category,\n                  price: `${x.price} ${x.currency}`,\n                  weight: `${parseFloat(x.weight).toFixed(2) || 0} kq`,\n                  delivery_price: parseFloat(x.delivery_price).toFixed(2) || 0,\n                  status: `${x.status.name}\\n ${x.date}`\n                };\n              }\n            }) || [],\n            renderBody: (x, i) => {\n              return /*#__PURE__*/_jsx(\"td\", {\n                children: x\n              }, i++);\n            }\n          })\n        })]\n      })]\n    })]\n  });\n}\n\nconst mapStateToProps = state => ({\n  entry: state.entry\n});\n\nconst mapDispatchToProps = {\n  PayByBalanceAction\n};\nexport default connect(mapStateToProps, mapDispatchToProps)( /*#__PURE__*/memo(Packages));","map":null,"metadata":{},"sourceType":"module"}