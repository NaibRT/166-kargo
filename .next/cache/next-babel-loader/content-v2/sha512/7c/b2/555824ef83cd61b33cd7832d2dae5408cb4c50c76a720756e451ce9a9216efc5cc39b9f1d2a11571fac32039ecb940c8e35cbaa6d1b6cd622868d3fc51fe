{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport axios from \"axios\";\nimport Link from 'next/link';\nimport { useRouter } from \"next/router\";\nimport React, { memo, useLayoutEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { connect } from \"react-redux\";\nimport AddressItem from '../components/address-item';\nimport AsideMenu from '../components/aside-menu';\nimport Aside from '../components/aside/aside';\nimport ButtonComponent from '../components/button/index';\nimport Card from '../components/card/card';\nimport Main from '../components/main/main';\nimport Page from '../components/page/page';\nimport Redirect from \"../components/redirect/redirect\";\n\nfunction Test(props) {\n  if (!props.entry.isLoged) {\n    return /*#__PURE__*/_jsx(Redirect, {});\n  }\n\n  const {\n    formatMessage: f\n  } = useIntl();\n  const {\n    locale\n  } = useRouter();\n  const {\n    0: addresses,\n    1: setAddresses\n  } = useState({\n    data: [],\n    isLoaded: false\n  });\n  useLayoutEffect(() => {\n    axios.get(`${process.env.NEXT_PUBLIC_API_URL}addresses?lan=${locale}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accepts': 'application/json',\n        'Authorization': `Bearer ${props.entry.user.accessToken}`\n      }\n    }).then(res => {\n      setAddresses({\n        data: [...res.data.map(x => ({\n          id: x.id,\n          address: JSON.parse(x.address),\n          name: x.name,\n          abbr: x.abbr,\n          currency: x.currency\n        }))],\n        isLoaded: true\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsxs(Page, {\n      className: \"bg-bg pt-lg pb-lg\",\n      children: [/*#__PURE__*/_jsx(Aside, {\n        className: \"mr-sm\",\n        children: /*#__PURE__*/_jsx(AsideMenu, {})\n      }), /*#__PURE__*/_jsx(Main, {\n        className: \"bg-white p-none\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"mobile__bt pb-lg bg-bg\",\n            children: [/*#__PURE__*/_jsx(Link, {\n              href: \"/balance\",\n              children: /*#__PURE__*/_jsx(\"a\", {\n                children: /*#__PURE__*/_jsx(ButtonComponent, {\n                  style: {\n                    padding: '0 25px'\n                  },\n                  className: \"w-100\",\n                  label: \"Balans\\u0131 art\\u0131r\",\n                  startElement: /*#__PURE__*/_jsx(\"img\", {\n                    className: \"mr-xs\",\n                    src: \"/assets/icons/el2.svg\"\n                  })\n                })\n              })\n            }), /*#__PURE__*/_jsx(Link, {\n              href: \"/new-order\",\n              children: /*#__PURE__*/_jsx(\"a\", {\n                children: /*#__PURE__*/_jsx(ButtonComponent, {\n                  style: {\n                    padding: '0 35px'\n                  },\n                  className: \"w-100\",\n                  label: \"Sifari\\u015F et\",\n                  startElement: /*#__PURE__*/_jsx(\"img\", {\n                    className: \"mr-xs\",\n                    src: \"/assets/icons/el.svg\"\n                  })\n                })\n              })\n            })]\n          }), addresses.isLoaded && addresses.data.map((a, i) => /*#__PURE__*/_jsxs(Card, {\n            className: \"p-sm  bg-white br-lg  \",\n            children: [/*#__PURE__*/_jsx(Card.Header, {\n              style: {\n                justifyContent: 'flex-start'\n              },\n              startElement: /*#__PURE__*/_jsx(\"img\", {\n                src: `/assets/icons/${a.id}.svg`,\n                className: \"fl\"\n              }),\n              text: `${a.name} ${f({\n                id: 'address'\n              })}`\n            }), /*#__PURE__*/_jsx(Card.Body, {\n              className: \"bg-bg lg\",\n              children: /*#__PURE__*/_jsx(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexWrap: 'wrap'\n                },\n                children: Object.keys(a.address).map((key, index) => {\n                  if (index === 0) {\n                    return /*#__PURE__*/_jsx(AddressItem, {\n                      style: {\n                        flex: '1 1 30%'\n                      },\n                      title: key,\n                      label: `${props.entry.user.user.firstname} ${props.entry.user.user.lastname}`\n                    }, index);\n                  } else if (index === 1) {\n                    return /*#__PURE__*/_jsx(AddressItem, {\n                      style: {\n                        flex: '1 1 30%'\n                      },\n                      title: key,\n                      label: a.address[key].replace('CUSTOMER_ID', `${props.entry.user.user.customer_number}`).replace('USER', `${props.entry.user.user.firstname} ${props.entry.user.user.lastname}`)\n                    }, index);\n                  } else if (index === Object.entries(a.address).length - 1) {\n                    return /*#__PURE__*/_jsx(AddressItem, {\n                      style: {\n                        flex: '1 1 30%'\n                      },\n                      title: key,\n                      label: a.address[key].replace('CUSTOMER_ID', `${props.entry.user.user.customer_number}`)\n                    }, index);\n                  } else {\n                    return /*#__PURE__*/_jsx(AddressItem, {\n                      style: {\n                        flex: '1 1 30%'\n                      },\n                      title: key,\n                      label: a.address[key]\n                    }, index);\n                  }\n                })\n              })\n            })]\n          }, i))]\n        })\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"bg-white\"\n    })]\n  });\n}\n\nconst mapStateToProps = state => ({\n  entry: state.entry\n});\n\nexport default connect(mapStateToProps)( /*#__PURE__*/memo(Test));","map":null,"metadata":{},"sourceType":"module"}