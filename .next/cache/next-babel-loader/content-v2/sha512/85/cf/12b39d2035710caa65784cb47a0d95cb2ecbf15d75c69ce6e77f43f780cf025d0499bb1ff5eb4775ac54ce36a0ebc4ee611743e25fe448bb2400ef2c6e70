{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/naibtahmazli/Documents/166kargo/pages/myaddresses.js\";\nimport axios from \"axios\";\nimport router, { useRouter } from \"next/router\";\nimport React, { memo, useLayoutEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport AddressItem from '../components/address-item';\nimport AsideMenu from '../components/aside-menu';\nimport Aside from '../components/aside/aside';\nimport Card from '../components/card/card';\nimport Main from '../components/main/main';\nimport Page from '../components/page/page';\n\nfunction Test(props) {\n  if (!props.entry.isLoged) {\n    router.push('/register');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n  const {\n    locale\n  } = useRouter();\n  const {\n    0: addresses,\n    1: setAddresses\n  } = useState({\n    data: [],\n    isLoaded: false\n  });\n  useLayoutEffect(() => {\n    axios.get(`${process.env.NEXT_PUBLIC_API_URL}addresses?lan=${locale}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accepts': 'application/json',\n        'Authorization': `Bearer ${props.entry.user.accessToken}`\n      }\n    }).then(res => {\n      setAddresses({\n        data: [...res.data],\n        isLoaded: true\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-bg\",\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      children: [/*#__PURE__*/_jsxDEV(Aside, {\n        style: {\n          marginTop: '40px'\n        },\n        children: /*#__PURE__*/_jsxDEV(AsideMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        style: {\n          background: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: addresses.isLoaded && addresses.data.map(a => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"p-md bg-white br-lg\",\n            style: {\n              margin: '40px 0 40px 40px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              style: {\n                justifyContent: 'flex-start'\n              },\n              startElement: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: '/assets/icons/turkish.svg',\n                className: \"fl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 43\n              }, this),\n              text: `${a.name} Ünvanı`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"bg-bg lg\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexWrap: 'wrap'\n                },\n                children: Object.keys(a.address).map((key, index) => {\n                  if (index === 0) {\n                    return /*#__PURE__*/_jsxDEV(AddressItem, {\n                      style: {\n                        flex: '1 1 30%'\n                      },\n                      title: key,\n                      label: `${props.entry.user.user.firstname} ${props.entry.user.user.lastname}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 49\n                    }, this);\n                  } else {\n                    return /*#__PURE__*/_jsxDEV(AddressItem, {\n                      style: {\n                        flex: '1 1 30%'\n                      },\n                      title: key,\n                      label: a.address[key]\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 49\n                    }, this);\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\nconst mapStateToProps = state => ({\n  entry: state.entry\n});\n\nexport default connect(mapStateToProps)( /*#__PURE__*/memo(Test));","map":{"version":3,"sources":["/Users/naibtahmazli/Documents/166kargo/pages/myaddresses.js"],"names":["axios","router","useRouter","React","memo","useLayoutEffect","useState","connect","AddressItem","AsideMenu","Aside","Card","Main","Page","Test","props","entry","isLoged","push","height","locale","addresses","setAddresses","data","isLoaded","get","process","env","NEXT_PUBLIC_API_URL","headers","user","accessToken","then","res","catch","err","console","log","marginTop","background","map","a","margin","justifyContent","name","display","flexWrap","Object","keys","address","key","index","flex","firstname","lastname","mapStateToProps","state"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport router, { useRouter } from \"next/router\"\nimport React, { memo, useLayoutEffect, useState } from 'react'\nimport { connect } from \"react-redux\"\nimport AddressItem from '../components/address-item'\nimport AsideMenu from '../components/aside-menu'\nimport Aside from '../components/aside/aside'\nimport Card from '../components/card/card'\nimport Main from '../components/main/main'\nimport Page from '../components/page/page'\n\nfunction Test(props) {\n\n\n    if (!props.entry.isLoged) {\n\n        router.push('/register');\n\n        return (\n            <div style={{ height: '100vh' }}></div>\n        )\n    }\n    const {locale} = useRouter()\n    const [addresses,setAddresses] = useState({\n        data:[],\n        isLoaded:false\n    })\n    useLayoutEffect(() => {\n        axios.get(`${process.env.NEXT_PUBLIC_API_URL}addresses?lan=${locale}`,{\n            headers: {\n                       'Content-Type': 'application/json',\n                       'Accepts':'application/json',\n                       'Authorization':`Bearer ${props.entry.user.accessToken}`\n                     }\n          }).then(res => {\n            setAddresses({\n                data:[...res.data],\n                isLoaded:true\n            })\n          }).catch(err => {\n              console.log(err)\n          })\n    })\n\n\n    return (\n        <div className='bg-bg'>\n            <Page>\n                <Aside style={{ marginTop: '40px' }}>\n                    <AsideMenu />\n                </Aside>\n                <Main style={{background:'none'}}>\n                <div>\n                    {\n                      addresses.isLoaded && addresses.data.map(a => (\n                            <Card className='p-md bg-white br-lg' style={{ margin: '40px 0 40px 40px' }}>\n                        <Card.Header style={{ justifyContent: 'flex-start' }}\n                            startElement={<img src={'/assets/icons/turkish.svg'} className='fl' />}\n                            text={`${a.name} Ünvanı`}\n                        />\n\n                        <Card.Body className='bg-bg lg'>\n                            <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n                                {\n                                    Object.keys(a.address).map((key, index) => {\n                                        if(index === 0){\n                                            return (\n                                                <AddressItem style={{ flex: '1 1 30%' }} title={key} label={`${props.entry.user.user.firstname} ${props.entry.user.user.lastname}`} />\n                                            )\n                                        }else{\n                                            return (\n                                                <AddressItem style={{ flex: '1 1 30%' }} title={key} label={a.address[key]} key={index} />\n                                             )\n                                        }\n                                    }\n                                    )\n                                }\n                            </div>\n                        </Card.Body>\n                       </Card>\n                     ))\n                    }\n\n                </div>\n                </Main>\n\n            </Page>\n            <div className='bg-white'></div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    entry: state.entry\n});\nexport default connect(mapStateToProps)(memo(Test))\n"]},"metadata":{},"sourceType":"module"}