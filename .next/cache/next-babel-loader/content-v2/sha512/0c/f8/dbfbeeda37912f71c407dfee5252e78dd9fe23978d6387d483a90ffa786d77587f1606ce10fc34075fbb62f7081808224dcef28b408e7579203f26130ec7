{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/naibtahmazli/Documents/166kargo/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useIntl } from 'react-intl';\nimport { connect } from \"react-redux\";\nimport Button from '../components/button';\nimport Card from '../components/card/card';\nimport FromGroup from '../components/form-group/form-group';\nimport Input from '../components/input/input';\nimport Page from '../components/page/page';\nimport RadioButton from '../components/radio-button/radio-button';\nimport Selectbox from '../components/selectbox/selectbox';\nimport Switch from \"../components/switch/switch\";\nimport { UserRegister } from \"../redux/entry/entryActions\";\nvar telData = [{\n  id: '050',\n  name: '050'\n}, {\n  id: '051',\n  name: '051'\n}, {\n  id: '055',\n  name: '055'\n}, {\n  id: '070',\n  name: '070'\n}, {\n  id: '077',\n  name: '077'\n}];\n\nfunction Register(props) {\n  var _errors$firstname, _errors$lastname, _errors$email, _errors$phone, _errors$birthday, _errors$serial, _errors$fin, _errors$nationality, _errors$address, _errors$tin, _errors$password, _errors$password_conf;\n\n  useEffect(function () {\n    clearErrors();\n\n    for (var key in props.Entry.errorMessages.errors) {\n      setError(key, {\n        message: props.Entry.errorMessages.errors[key].join('\\n')\n      });\n    }\n  }, [props.Entry.errorMessages]);\n\n  var _useIntl = useIntl(),\n      f = _useIntl.formatMessage;\n\n  var _useState = useState(false),\n      isKorporative = _useState[0],\n      setisKorporative = _useState[1];\n\n  var _useState2 = useState('AA'),\n      checkSerial = _useState2[0],\n      setCheckSerial = _useState2[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      reset = _useForm.reset,\n      watch = _useForm.watch,\n      setError = _useForm.setError,\n      clearErrors = _useForm.clearErrors;\n\n  var password = useRef({});\n  var phone = useRef({});\n  phone.current = watch(\"phone_typ\", '');\n  password.current = watch(\"password\", '');\n\n  var submit = function submit(data) {\n    clearErrors();\n\n    var newData = _objectSpread(_objectSpread({}, data), {}, {\n      phone: phone.current + data.phone,\n      birthday: data.birthday.split('-').reverse().join('-')\n    });\n\n    props.UserRegister('auth/register', newData, {\n      'content-type': 'application/json'\n    });\n  }; //  useEffect(() => {\n  //   if(props.Entry.isLoged){\n  //     router.push('/myaddresses');\n  //   }\n  // },[props.Entry.isLoged])\n\n\n  return /*#__PURE__*/_jsx(Page, {\n    className: \"bg-bg register-page fh\",\n    children: /*#__PURE__*/_jsxs(\"main\", {\n      className: \"mt-lg mb-lg\",\n      children: [/*#__PURE__*/_jsxs(Card, {\n        className: \"bg-white br-sm mr-sm p-sm w-50\",\n        children: [/*#__PURE__*/_jsx(Card.Header, {\n          text: f({\n            id: 'register'\n          }),\n          endElelment: /*#__PURE__*/_jsxs(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsx(\"h3\", {\n              className: \"cardHeaderText pr-xs\",\n              style: {\n                fontSize: '1.5rem'\n              },\n              children: f({\n                id: 'corporative'\n              })\n            }), /*#__PURE__*/_jsx(Switch, {\n              value: isKorporative,\n              onClick: function onClick(e) {\n                setisKorporative(e.target.checked);\n              }\n            })]\n          })\n        }), /*#__PURE__*/_jsxs(Card.Body, {\n          className: \"p-none\",\n          children: [/*#__PURE__*/_jsxs(\"form\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap'\n            },\n            children: [/*#__PURE__*/_jsx(FromGroup, {\n              label: f({\n                id: 'name'\n              }),\n              bodyClass: \"bg-bg p-xs\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$firstname = errors.firstname) === null || _errors$firstname === void 0 ? void 0 : _errors$firstname.message,\n              children: /*#__PURE__*/_jsx(Input, {\n                type: \"text\",\n                name: \"firstname\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'name-requir'\n                    })\n                  },\n                  pattern: {\n                    value: '',\n                    message: f({\n                      id: 'name-patter'\n                    })\n                  }\n                })\n              })\n            }), /*#__PURE__*/_jsx(FromGroup, {\n              label: f({\n                id: 'surname'\n              }),\n              bodyClass: \"bg-bg p-xs\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$lastname = errors.lastname) === null || _errors$lastname === void 0 ? void 0 : _errors$lastname.message,\n              children: /*#__PURE__*/_jsx(Input, {\n                type: \"text\",\n                name: \"lastname\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'surname-requir'\n                    })\n                  },\n                  pattern: {\n                    value: '',\n                    message: f({\n                      id: 'surname-patter'\n                    })\n                  }\n                })\n              })\n            }), /*#__PURE__*/_jsx(FromGroup, {\n              label: f({\n                id: 'email'\n              }),\n              bodyClass: \"bg-bg p-xs\",\n              className: \"w-50 pr-xs\",\n              error: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n              children: /*#__PURE__*/_jsx(Input, {\n                type: \"email\",\n                name: \"email\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'email-requir'\n                    })\n                  },\n                  pattern: {\n                    value: /^(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){255,})(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){65,}@)(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22))(?:\\.(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22)))*@(?:(?:(?!.*[^.]{64,})(?:(?:(?:xn--)?[a-z0-9]+(?:-[a-z0-9]+)*\\.){1,126}){1,}(?:(?:[a-z][a-z0-9]*)|(?:(?:xn--)[a-z0-9]+))(?:-[a-z0-9]+)*)|(?:\\[(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){7})|(?:(?!(?:.*[a-f0-9][:\\]]){7,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?)))|(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){5}:)|(?:(?!(?:.*[a-f0-9]:){5,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3}:)?)))?(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))(?:\\.(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))){3}))\\]))$/,\n                    message: f({\n                      id: 'email-patter'\n                    })\n                  }\n                })\n              })\n            }), /*#__PURE__*/_jsxs(FromGroup, {\n              label: f({\n                id: 'phone'\n              }),\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$phone = errors.phone) === null || _errors$phone === void 0 ? void 0 : _errors$phone.message,\n              children: [/*#__PURE__*/_jsx(Selectbox, {\n                className: \"bg-white\",\n                data: telData,\n                name: \"phone_typ\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'phone-requir'\n                    })\n                  }\n                })\n              }), /*#__PURE__*/_jsx(Input, {\n                type: \"tel\",\n                name: \"phone\",\n                maxLength: \"7\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'phone-requir'\n                    })\n                  },\n                  pattern: {\n                    value: /^[0-9]{3}[0-9]{2}[0-9]{2}$/,\n                    message: f({\n                      id: 'phone-patter'\n                    })\n                  },\n                  maxLength: {\n                    value: 7,\n                    message: f({\n                      id: 'phone-len'\n                    })\n                  }\n                })\n              })]\n            }), /*#__PURE__*/_jsxs(FromGroup, {\n              label: f({\n                id: 'gender'\n              }),\n              bodyClass: \"\",\n              className: \"w-50 pr-xs mb-xs\",\n              children: [/*#__PURE__*/_jsx(RadioButton, {\n                text: f({\n                  id: 'men'\n                }),\n                name: \"gender\",\n                id: \"male\",\n                value: \"M\",\n                Ref: register()\n              }), /*#__PURE__*/_jsx(RadioButton, {\n                text: f({\n                  id: 'women'\n                }),\n                name: \"gender\",\n                id: \"female\",\n                value: \"F\",\n                Ref: register()\n              })]\n            }), /*#__PURE__*/_jsx(FromGroup, {\n              label: f({\n                id: 'gender'\n              }),\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$birthday = errors.birthday) === null || _errors$birthday === void 0 ? void 0 : _errors$birthday.message,\n              children: /*#__PURE__*/_jsx(Input, {\n                className: \"\",\n                name: \"birthday\",\n                type: \"date\",\n                format: \"dd/mm/yyyy\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'date-requir'\n                    })\n                  }\n                })\n              })\n            }), /*#__PURE__*/_jsxs(FromGroup, {\n              label: f({\n                id: 'serial'\n              }),\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$serial = errors.serial) === null || _errors$serial === void 0 ? void 0 : _errors$serial.message,\n              children: [/*#__PURE__*/_jsx(Selectbox, {\n                onChange: function onChange(ev) {\n                  setCheckSerial(ev.target.value);\n                },\n                className: \"bg-white\",\n                data: [{\n                  id: 'AA',\n                  name: 'AA'\n                }, {\n                  id: 'AZE',\n                  name: 'AZE'\n                }]\n              }), /*#__PURE__*/_jsx(Input, {\n                type: \"text\",\n                name: \"serial\",\n                maxLength: checkSerial === 'AA' ? '7' : '8',\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'serial-requir'\n                    })\n                  },\n                  maxLength: {\n                    value: checkSerial === 'AA' ? 7 : 8,\n                    message: f({\n                      id: 'serial-len'\n                    })\n                  }\n                })\n              })]\n            }), /*#__PURE__*/_jsx(FromGroup, {\n              label: f({\n                id: 'fin'\n              }),\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$fin = errors.fin) === null || _errors$fin === void 0 ? void 0 : _errors$fin.message,\n              children: /*#__PURE__*/_jsx(Input, {\n                type: \"text\",\n                name: \"fin\",\n                maxLength: \"7\",\n                minLength: \"7\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'fin-requir'\n                    })\n                  },\n                  maxLength: {\n                    value: 7,\n                    message: f({\n                      id: 'fin-min-max'\n                    })\n                  },\n                  minLength: {\n                    value: 7,\n                    message: f({\n                      id: 'fin-min-max'\n                    })\n                  }\n                })\n              })\n            }), /*#__PURE__*/_jsx(FromGroup, {\n              label: f({\n                id: 'nationality'\n              }),\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$nationality = errors.nationality) === null || _errors$nationality === void 0 ? void 0 : _errors$nationality.message,\n              children: /*#__PURE__*/_jsx(Selectbox, {\n                className: \"w-100 m-none\",\n                name: \"nationality\",\n                data: [{\n                  id: 'Azerbaijan',\n                  name: 'Azerbaijan'\n                }, {\n                  id: 'Foreign',\n                  name: 'Foreign'\n                }],\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'nationality-requir'\n                    })\n                  }\n                })\n              })\n            }), /*#__PURE__*/_jsx(FromGroup, {\n              label: f({\n                id: 'address'\n              }),\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$address = errors.address) === null || _errors$address === void 0 ? void 0 : _errors$address.message,\n              children: /*#__PURE__*/_jsx(Input, {\n                name: \"address\",\n                type: \"text\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'address-requir'\n                    })\n                  }\n                })\n              })\n            }), isKorporative && /*#__PURE__*/_jsx(FromGroup, {\n              label: f({\n                id: 'tin'\n              }),\n              bodyClass: \"bg-bg\",\n              className: \"w-100 mb-xs\",\n              error: (_errors$tin = errors.tin) === null || _errors$tin === void 0 ? void 0 : _errors$tin.message,\n              children: /*#__PURE__*/_jsx(Input, {\n                type: \"text\",\n                name: \"tin\",\n                Ref: isKorporative && register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'tin-requir'\n                    })\n                  }\n                })\n              })\n            }), /*#__PURE__*/_jsx(FromGroup, {\n              label: f({\n                id: 'password'\n              }),\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs\",\n              error: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,\n              children: /*#__PURE__*/_jsx(Input, {\n                name: \"password\",\n                type: \"password\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'pass-requir'\n                    })\n                  },\n                  pattern: {\n                    value: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n                    message: f({\n                      id: 'password-pattern'\n                    })\n                  }\n                })\n              })\n            }), /*#__PURE__*/_jsx(FromGroup, {\n              label: f({\n                id: 'repeat-pass'\n              }),\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$password_conf = errors.password_confirmation) === null || _errors$password_conf === void 0 ? void 0 : _errors$password_conf.message,\n              children: /*#__PURE__*/_jsx(Input, {\n                name: \"password_confirmation\",\n                type: \"password\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'repeatpas-requir'\n                    })\n                  },\n                  validate: function validate(value) {\n                    return value === password.current || f({\n                      id: 'repeatpas-valid'\n                    });\n                  }\n                })\n              })\n            })]\n          }), /*#__PURE__*/_jsx(Card.Footer, {\n            className: \"mt-sm\",\n            children: /*#__PURE__*/_jsx(Button, {\n              label: f({\n                id: 'complate-register'\n              }),\n              endElement: /*#__PURE__*/_jsx(\"span\", {\n                className: \"ml-xs\",\n                children: \"\\u2192\"\n              }),\n              className: \"w-100\",\n              onClick: handleSubmit(submit)\n            })\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(Card, {\n        className: \"w-50  mobile\",\n        children: /*#__PURE__*/_jsxs(Card.Body, {\n          className: \"w-100 h-100 p-none\",\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: \"pb-sm\",\n            children: f({\n              id: 'register-hard'\n            })\n          }), /*#__PURE__*/_jsx(\"img\", {\n            className: \"w-100\",\n            src: \"./assets/images/img1.png\"\n          })]\n        })\n      })]\n    })\n  });\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    Entry: state.entry\n  };\n};\n\nvar mapDispatchToProps = {\n  UserRegister: UserRegister\n};\nexport default connect(mapStateToProps, mapDispatchToProps)( /*#__PURE__*/memo(Register));","map":null,"metadata":{},"sourceType":"module"}