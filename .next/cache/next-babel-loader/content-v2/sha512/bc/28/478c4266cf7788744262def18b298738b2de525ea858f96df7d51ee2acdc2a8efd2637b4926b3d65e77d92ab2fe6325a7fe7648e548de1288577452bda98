{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport React, { memo, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useIntl } from 'react-intl';\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport AsideMenu from \"../components/aside-menu\";\nimport Aside from \"../components/aside/aside\";\nimport Button from \"../components/button\";\nimport Card from \"../components/card/card\";\nimport Checkbox from '../components/checkbox/checkbox';\nimport FromGroup from '../components/form-group/form-group';\nimport Input from '../components/input/input';\nimport Main from \"../components/main/main\";\nimport Page from \"../components/page/page\";\nimport Redirect from \"../components/redirect/redirect\";\n\nfunction NewOrder(props) {\n  if (!props.entry.isLoged) {\n    return /*#__PURE__*/_jsx(Redirect, {});\n  }\n\n  const {\n    formatMessage: f\n  } = useIntl();\n  const {\n    locale\n  } = useRouter();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setError,\n    clearErrors\n  } = useForm();\n  const {\n    0: cards,\n    1: setCards\n  } = useState([{\n    url: {\n      value: '',\n      error: ''\n    },\n    price: {\n      value: '',\n      error: ''\n    },\n    notes: {\n      value: '',\n      error: ''\n    },\n    color: {\n      value: '',\n      error: ''\n    },\n    size: {\n      value: '',\n      error: ''\n    },\n    count: {\n      value: '',\n      error: ''\n    }\n  }]);\n  const {\n    0: cardData,\n    1: setCardData\n  } = useState({\n    country: '15',\n    is_fast: 0,\n    ruleAccepted: false\n  });\n\n  const addCard = ev => {\n    ev.preventDefault();\n    cards.push({\n      url: {\n        value: '',\n        error: ''\n      },\n      price: {\n        value: '',\n        error: ''\n      },\n      notes: {\n        value: '',\n        error: ''\n      },\n      color: {\n        value: '',\n        error: ''\n      },\n      size: {\n        value: '',\n        error: ''\n      },\n      count: {\n        value: '',\n        error: ''\n      }\n    });\n    setCards([...cards]);\n  };\n\n  const removeCard = ev => {\n    let id = ev.target.getAttribute('data-id');\n    cards.splice(id, 1);\n    setCards([...cards]);\n  };\n\n  const handleInput = ev => {\n    ev.stopPropagation();\n    let id = ev.target.getAttribute('data-id');\n    let {\n      name,\n      value\n    } = ev.target;\n    cards[id] = _objectSpread(_objectSpread({}, cards[id]), {}, {\n      [name]: _objectSpread(_objectSpread({}, cards[id][name]), {}, {\n        value: value\n      })\n    });\n\n    if (cards[id].count && cards[id].price) {\n      cards[id] = _objectSpread(_objectSpread({}, cards[id]), {}, {\n        total: cardData.is_fast ? cards[id].count.value * cards[id].price.value + props.fastOrderPrice : cards[id].count.value * cards[id].price.value\n      });\n    } else {\n      cards[id] = _objectSpread(_objectSpread({}, cards[id]), {}, {\n        total: ''\n      });\n    }\n\n    setCards([...cards]);\n  };\n\n  const addFastPrize = (isfast, price) => {\n    let newCards = cards;\n    newCards.forEach(x => isfast ? x.total += price : x.total -= price); // setCards([...newCards])\n  };\n\n  const submit = data => {\n    console.log(data);\n\n    if (cardData.ruleAccepted) {\n      let data = _objectSpread(_objectSpread({}, cardData), {}, {\n        items: cards.map(x => {\n          let newObj = {};\n\n          for (let key in x) {\n            newObj[key] = x[key].value;\n          }\n\n          return newObj;\n        })\n      });\n\n      axios.post(`${process.env.NEXT_PUBLIC_API_URL}orders?lan=${locale}`, data, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accepts': 'application/json',\n          'Authorization': `Bearer ${props.entry.user.accessToken}`\n        }\n      }).then(res => {\n        setCards([{\n          url: {\n            value: '',\n            error: ''\n          },\n          price: {\n            value: '',\n            error: ''\n          },\n          notes: {\n            value: '',\n            error: ''\n          },\n          color: {\n            value: '',\n            error: ''\n          },\n          size: {\n            value: '',\n            error: ''\n          },\n          count: {\n            value: '',\n            error: ''\n          }\n        }]);\n        Swal.fire({\n          success: 'success',\n          text: 'emeliyyat ugurlu oldu',\n          icon: 'success'\n        });\n      }).catch(err => {\n        let items = err.response.data.errors.items;\n        items.forEach((x, i) => {\n          for (let key in x) {\n            cards[i] = _objectSpread(_objectSpread({}, cards[i]), {}, {\n              [key]: _objectSpread(_objectSpread({}, cards[i][key]), {}, {\n                error: x[key]\n              })\n            });\n          }\n        });\n        setCards([...cards]);\n      });\n    }\n  };\n\n  console.log(errors);\n  return /*#__PURE__*/_jsxs(Page, {\n    className: \"bg-bg pt-lg\",\n    children: [/*#__PURE__*/_jsx(Aside, {\n      className: \"mr-sm\",\n      children: /*#__PURE__*/_jsx(AsideMenu, {})\n    }), /*#__PURE__*/_jsxs(Main, {\n      className: \"br-sm bg-white br-lg\",\n      children: [/*#__PURE__*/_jsxs(Card, {\n        className: \"p-sm desktop__order\",\n        children: [/*#__PURE__*/_jsx(Card.Header, {\n          text: f({\n            id: 'new-order'\n          })\n        }), /*#__PURE__*/_jsxs(\"form\", {\n          children: [cards.map((x, i) => {\n            var _errors$url, _errors$color, _errors$size, _errors$count, _errors$price;\n\n            return /*#__PURE__*/_jsxs(Card.Body, {\n              className: \"bg-yellow p-sm br-lg mb-xs p-r\",\n              children: [i > 0 ? /*#__PURE__*/_jsx(\"span\", {\n                onClick: removeCard,\n                \"data-id\": i,\n                style: {\n                  color: 'red',\n                  position: 'absolute',\n                  top: '10px',\n                  right: '10px',\n                  cursor: 'pointer'\n                },\n                children: \"\\u2716\"\n              }) : /*#__PURE__*/_jsx(_Fragment, {}), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"from-container\",\n                style: {\n                  display: 'flex'\n                },\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  className: \"w-50 mr-sm fc-col\",\n                  style: {},\n                  children: [/*#__PURE__*/_jsx(FromGroup, {\n                    label: f({\n                      id: \"link\"\n                    }),\n                    className: \"w-100\",\n                    bodyClass: \"bg-white\",\n                    error: (_errors$url = errors.url) === null || _errors$url === void 0 ? void 0 : _errors$url.message,\n                    children: /*#__PURE__*/_jsx(Input, {\n                      type: \"text\",\n                      name: \"url\",\n                      \"data-id\": i,\n                      value: x.url.value,\n                      Ref: register({\n                        required: {\n                          value: true,\n                          message: 'url mməcburidir'\n                        }\n                      }),\n                      onChange: handleInput\n                    })\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    style: {\n                      display: 'flex'\n                    },\n                    children: [/*#__PURE__*/_jsx(FromGroup, {\n                      label: f({\n                        id: \"color\"\n                      }),\n                      className: \"w-50 mr-sm\",\n                      bodyClass: \"bg-white\",\n                      error: ((_errors$color = errors.color) === null || _errors$color === void 0 ? void 0 : _errors$color.message) || x.color.error,\n                      children: /*#__PURE__*/_jsx(Input, {\n                        type: \"text\",\n                        name: \"color\",\n                        \"data-id\": i,\n                        value: x.color.value,\n                        Ref: register({\n                          required: {\n                            value: true,\n                            message: 'color mməcburidir'\n                          }\n                        }),\n                        onChange: handleInput\n                      })\n                    }), /*#__PURE__*/_jsx(FromGroup, {\n                      label: f({\n                        id: 'size'\n                      }),\n                      className: \"w-50\",\n                      bodyClass: \"bg-white\",\n                      error: ((_errors$size = errors.size) === null || _errors$size === void 0 ? void 0 : _errors$size.message) || x.size.error,\n                      children: /*#__PURE__*/_jsx(Input, {\n                        min: 0,\n                        type: \"text\",\n                        name: \"size\",\n                        \"data-id\": i,\n                        value: x.size.value,\n                        Ref: register({\n                          required: {\n                            value: true,\n                            message: 'size mməcburidir'\n                          }\n                        }),\n                        onChange: handleInput\n                      })\n                    })]\n                  })]\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"w-50 fc-col\",\n                  children: [/*#__PURE__*/_jsxs(\"div\", {\n                    className: \"w-100\",\n                    style: {\n                      display: 'flex',\n                      justifyContent: 'space-between'\n                    },\n                    children: [/*#__PURE__*/_jsx(FromGroup, {\n                      label: f({\n                        id: 'count-pro'\n                      }),\n                      className: \"mr-xs\",\n                      bodyClass: \"bg-white\",\n                      error: ((_errors$count = errors.count) === null || _errors$count === void 0 ? void 0 : _errors$count.message) || x.count.error,\n                      children: /*#__PURE__*/_jsx(Input, {\n                        min: 0,\n                        type: \"number\",\n                        name: \"count\",\n                        \"data-id\": i,\n                        value: x.count.value,\n                        Ref: register({\n                          required: {\n                            value: true,\n                            message: 'say mməcburidir'\n                          }\n                        }),\n                        onChange: handleInput\n                      })\n                    }), /*#__PURE__*/_jsx(FromGroup, {\n                      label: f({\n                        id: 'price'\n                      }),\n                      className: \"mr-xs\",\n                      bodyClass: \"bg-white\",\n                      error: ((_errors$price = errors.price) === null || _errors$price === void 0 ? void 0 : _errors$price.message) || x.price.error,\n                      children: /*#__PURE__*/_jsx(Input, {\n                        type: \"number\",\n                        name: \"price\",\n                        \"data-id\": i,\n                        min: 0,\n                        value: x.price.value,\n                        Ref: register({\n                          required: {\n                            value: true,\n                            message: 'qiymət mməcburidir'\n                          }\n                        }),\n                        onChange: handleInput\n                      })\n                    }), /*#__PURE__*/_jsx(FromGroup, {\n                      label: f({\n                        id: \"total\"\n                      }),\n                      className: \"mr-xs\",\n                      bodyClass: \"bg-white\",\n                      children: /*#__PURE__*/_jsx(Input, {\n                        min: 0,\n                        type: \"number\",\n                        name: \"total\",\n                        \"data-id\": i,\n                        value: x.total,\n                        Ref: register(),\n                        disabled: true\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsx(FromGroup, {\n                    label: f({\n                      id: \"note\"\n                    }),\n                    className: \"w-100\",\n                    bodyClass: \"bg-white\",\n                    error: x.notes.error,\n                    children: /*#__PURE__*/_jsx(Input, {\n                      type: \"text\",\n                      name: \"notes\",\n                      \"data-id\": i,\n                      value: x.notes.value,\n                      Ref: register(),\n                      onChange: handleInput\n                    })\n                  })]\n                })]\n              })]\n            }, i);\n          }), /*#__PURE__*/_jsxs(Card.Footer, {\n            className: \"mt-sm\",\n            style: {\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              children: /*#__PURE__*/_jsx(Button, {\n                onClick: addCard,\n                className: \"w-100 p-sm bg-white border-success color-success\",\n                startElement: /*#__PURE__*/_jsx(\"span\", {\n                  className: \"mr-xs color-success\",\n                  children: \"+\"\n                }),\n                label: f({\n                  id: 'addnewproduct'\n                })\n              })\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsx(Checkbox, {\n                text: f({\n                  id: \"isfast\"\n                }),\n                name: \"is_fast\",\n                value: cardData.is_fast,\n                onClick: ev => {\n                  setCardData(_objectSpread(_objectSpread({}, cardData), {}, {\n                    is_fast: +ev.target.checked\n                  }));\n                  addFastPrize(ev.target.checked, props.fastOrderPrice);\n                }\n              }), /*#__PURE__*/_jsx(Checkbox, {\n                onClick: ev => {\n                  setCardData(_objectSpread(_objectSpread({}, cardData), {}, {\n                    ruleAccepted: ev.target.checked\n                  }));\n                },\n                children: /*#__PURE__*/_jsx(Link, {\n                  href: \"/\",\n                  children: /*#__PURE__*/_jsxs(_Fragment, {\n                    children: [/*#__PURE__*/_jsx(\"a\", {\n                      className: \"mr-xs\",\n                      style: {\n                        width: '-webkit-max-content'\n                      }\n                    }), f({\n                      id: \"agreement\"\n                    })]\n                  })\n                })\n              }), /*#__PURE__*/_jsx(Button, {\n                style: {\n                  padding: '0 5px'\n                },\n                label: f({\n                  id: \"ord-pay\"\n                }),\n                endElement: /*#__PURE__*/_jsx(\"span\", {\n                  className: \"ml-xs\",\n                  children: \"\\u203A\"\n                }),\n                className: \" w-100\",\n                disabled: !cardData.ruleAccepted,\n                onClick: handleSubmit(submit)\n              })]\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(Card, {\n        className: \"p-sm mobile__order\",\n        children: [/*#__PURE__*/_jsx(Card.Header, {\n          text: f({\n            id: 'new-order'\n          })\n        }), /*#__PURE__*/_jsxs(\"form\", {\n          onSubmit: handleSubmit(submit),\n          children: [cards.map((x, i) => {\n            return /*#__PURE__*/_jsxs(Card.Body, {\n              className: \"bg-yellow p-sm br-lg mb-xs p-r\",\n              children: [i > 0 ? /*#__PURE__*/_jsx(\"span\", {\n                onClick: removeCard,\n                \"data-id\": i,\n                style: {\n                  color: 'red',\n                  position: 'absolute',\n                  top: '10px',\n                  right: '10px',\n                  cursor: 'pointer'\n                },\n                children: \"\\u2716\"\n              }) : /*#__PURE__*/_jsx(_Fragment, {}), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"\",\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  children: [/*#__PURE__*/_jsx(FromGroup, {\n                    label: f({\n                      id: \"link\"\n                    }),\n                    className: \"w-100\",\n                    bodyClass: \"bg-white\",\n                    error: x.url.error,\n                    children: /*#__PURE__*/_jsx(Input, {\n                      type: \"text\",\n                      name: \"url\",\n                      \"data-id\": i,\n                      value: x.url.value,\n                      Ref: register({\n                        required: true\n                      }),\n                      onChange: handleInput\n                    })\n                  }), /*#__PURE__*/_jsx(FromGroup, {\n                    label: f({\n                      id: 'count-pro'\n                    }),\n                    bodyClass: \"bg-white\",\n                    error: x.count.error,\n                    children: /*#__PURE__*/_jsx(Input, {\n                      min: 0,\n                      type: \"number\",\n                      name: \"count\",\n                      \"data-id\": i,\n                      value: x.count.value,\n                      Ref: register({\n                        required: true\n                      }),\n                      onChange: handleInput\n                    })\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"w-100\",\n                    style: {\n                      display: 'flex',\n                      justifyContent: 'space-between'\n                    },\n                    children: [/*#__PURE__*/_jsx(FromGroup, {\n                      label: f({\n                        id: 'price'\n                      }),\n                      className: \" w-50 mr-xs\",\n                      bodyClass: \"bg-white\",\n                      error: x.price.error,\n                      children: /*#__PURE__*/_jsx(Input, {\n                        type: \"number\",\n                        name: \"price\",\n                        \"data-id\": i,\n                        min: 0,\n                        value: x.price.value,\n                        Ref: register({\n                          required: true\n                        }),\n                        onChange: handleInput\n                      })\n                    }), /*#__PURE__*/_jsx(FromGroup, {\n                      label: f({\n                        id: \"total\"\n                      }),\n                      className: \" w-50\",\n                      bodyClass: \"bg-white\",\n                      children: /*#__PURE__*/_jsx(Input, {\n                        type: \"number\",\n                        name: \"total\",\n                        \"data-id\": i,\n                        value: x.total,\n                        Ref: register({\n                          required: true\n                        }),\n                        disabled: true\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    style: {\n                      display: 'flex'\n                    },\n                    children: [/*#__PURE__*/_jsx(FromGroup, {\n                      label: f({\n                        id: \"color\"\n                      }),\n                      className: \"w-50 mr-xs\",\n                      bodyClass: \"bg-white\",\n                      error: x.color.error,\n                      children: /*#__PURE__*/_jsx(Input, {\n                        type: \"text\",\n                        name: \"color\",\n                        \"data-id\": i,\n                        value: x.color.value,\n                        Ref: register({\n                          required: true\n                        }),\n                        onChange: handleInput\n                      })\n                    }), /*#__PURE__*/_jsx(FromGroup, {\n                      label: f({\n                        id: 'size'\n                      }),\n                      className: \"w-50\",\n                      bodyClass: \"bg-white\",\n                      error: x.size.error,\n                      children: /*#__PURE__*/_jsx(Input, {\n                        min: 0,\n                        type: \"text\",\n                        name: \"size\",\n                        \"data-id\": i,\n                        value: x.size.value,\n                        Ref: register({\n                          required: true\n                        }),\n                        onChange: handleInput\n                      })\n                    })]\n                  })]\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  children: /*#__PURE__*/_jsx(FromGroup, {\n                    label: f({\n                      id: \"note\"\n                    }),\n                    className: \"w-100\",\n                    bodyClass: \"bg-white\",\n                    error: x.notes.error,\n                    children: /*#__PURE__*/_jsx(Input, {\n                      type: \"text\",\n                      name: \"notes\",\n                      \"data-id\": i,\n                      value: x.notes.value,\n                      Ref: register({\n                        required: true\n                      }),\n                      onChange: handleInput\n                    })\n                  })\n                })]\n              })]\n            }, i);\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"mt-sm\",\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              children: /*#__PURE__*/_jsx(Button, {\n                onClick: addCard,\n                className: \"w-100 p-sm bg-white border-success color-success\",\n                startElement: /*#__PURE__*/_jsx(\"span\", {\n                  className: \"mr-xs color-success\",\n                  children: \"+\"\n                }),\n                label: f({\n                  id: 'addnewproduct'\n                })\n              })\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                margin: '10px 0'\n              },\n              children: [/*#__PURE__*/_jsx(Checkbox, {\n                text: f({\n                  id: \"isfast\"\n                }),\n                name: \"is_fast\",\n                value: cardData.is_fast,\n                onClick: ev => {\n                  setCardData(_objectSpread(_objectSpread({}, cardData), {}, {\n                    is_fast: +ev.target.checked\n                  }));\n                  addFastPrize(ev.target.checked, props.fastOrderPrice);\n                }\n              }), /*#__PURE__*/_jsx(Checkbox, {\n                onClick: ev => {\n                  setCardData(_objectSpread(_objectSpread({}, cardData), {}, {\n                    ruleAccepted: ev.target.checked\n                  }));\n                },\n                children: /*#__PURE__*/_jsx(Link, {\n                  href: \"/\",\n                  children: /*#__PURE__*/_jsxs(_Fragment, {\n                    children: [/*#__PURE__*/_jsx(\"a\", {\n                      className: \"mr-xs\",\n                      style: {\n                        width: '-webkit-max-content'\n                      }\n                    }), f({\n                      id: \"agreement\"\n                    })]\n                  })\n                })\n              })]\n            }), /*#__PURE__*/_jsx(Button, {\n              style: {\n                padding: '0 5px'\n              },\n              label: f({\n                id: \"ord-pay\"\n              }),\n              endElement: /*#__PURE__*/_jsx(\"span\", {\n                className: \"ml-xs\",\n                children: \"\\u203A\"\n              }),\n              className: \" w-100\",\n              disabled: !cardData.ruleAccepted\n            })]\n          })]\n        })]\n      })]\n    })]\n  });\n}\n\nconst mapStateToProps = state => ({\n  entry: state.entry,\n  fastOrderPrice: state.settings.data.fast_order_fixed_price,\n  serviceFeePersentage: state.settings.data.service_fee_percent\n});\n\nexport default connect(mapStateToProps)( /*#__PURE__*/memo(NewOrder));","map":null,"metadata":{},"sourceType":"module"}