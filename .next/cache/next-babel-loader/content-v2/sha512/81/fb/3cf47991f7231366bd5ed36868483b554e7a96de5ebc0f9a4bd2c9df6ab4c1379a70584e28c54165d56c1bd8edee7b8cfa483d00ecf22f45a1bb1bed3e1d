{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/naibtahmazli/Documents/166kargo/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/naibtahmazli/Documents/166kargo/pages/register.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { connect } from \"react-redux\";\nimport Button from '../components/button';\nimport Card from '../components/card/card';\nimport FromGroup from '../components/form-group/form-group';\nimport Input from '../components/input/input';\nimport Page from '../components/page/page';\nimport RadioButton from '../components/radio-button/radio-button';\nimport Selectbox from '../components/selectbox/selectbox';\nimport Switch from \"../components/switch/switch\";\nimport { UserRegister } from \"../redux/entry/entryActions\";\nvar telData = [{\n  id: '+994',\n  name: '+994'\n}];\n\nfunction Register(props) {\n  _s();\n\n  var _errors$firstname, _errors$lastname, _errors$email, _errors$phone, _errors$birthday, _errors$serial, _errors$fin, _errors$nationality, _errors$address, _errors$tin, _errors$password, _errors$password_conf;\n\n  console.log(props.Entry.errorMessages);\n  useEffect(function () {\n    for (var key in props.Entry.errorMessages.errors) {\n      setValue(key, props.Entry.errorMessages.errors[key].join('\\n'));\n    }\n\n    console.log(errors);\n  });\n\n  var _useState = useState(false),\n      isKorporative = _useState[0],\n      setisKorporative = _useState[1];\n\n  var _useState2 = useState('AA'),\n      checkSerial = _useState2[0],\n      setCheckSerial = _useState2[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      reset = _useForm.reset,\n      watch = _useForm.watch,\n      setValue = _useForm.setValue;\n\n  var password = useRef({});\n  var phone = useRef({});\n  phone.current = watch(\"phone_typ\", '');\n  password.current = watch(\"password\", '');\n\n  var submit = function submit(data) {\n    var newData = _objectSpread(_objectSpread({}, data), {}, {\n      phone: phone.current + data.phone,\n      birthday: data.birthday.split('-').reverse().join('-')\n    });\n\n    console.log(newData);\n    props.UserRegister('auth/register', newData, {\n      'content-type': 'application/json'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    className: \"bg-bg register-page\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"mt-lg\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"bg-white br-sm mr-sm p-sm w-50\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          text: \"Qeydiyyat\",\n          endElelment: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"cardHeaderText pr-xs\",\n              children: \"Korporativ\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Switch, {\n              value: isKorporative,\n              onClick: function onClick(e) {\n                setisKorporative(e.target.checked);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"p-none\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"Adiniz\",\n              bodyClass: \"bg-bg p-xs\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$firstname = errors.firstname) === null || _errors$firstname === void 0 ? void 0 : _errors$firstname.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"firstname\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'ad məcburidir'\n                  },\n                  pattern: {\n                    value: '',\n                    message: 'ad yalnız hərflər ola bilər'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"Soyadiniz\",\n              bodyClass: \"bg-bg p-xs\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$lastname = errors.lastname) === null || _errors$lastname === void 0 ? void 0 : _errors$lastname.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"lastname\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'soyad məcburidir'\n                  },\n                  pattern: {\n                    value: '',\n                    message: 'soyad yalnız hərflər ola bilər'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"E-mail\",\n              bodyClass: \"bg-bg p-xs\",\n              className: \"w-50 pr-xs\",\n              error: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\",\n                name: \"email\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'email məcburidir'\n                  },\n                  pattern: {\n                    value: /^(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){255,})(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){65,}@)(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22))(?:\\.(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22)))*@(?:(?:(?!.*[^.]{64,})(?:(?:(?:xn--)?[a-z0-9]+(?:-[a-z0-9]+)*\\.){1,126}){1,}(?:(?:[a-z][a-z0-9]*)|(?:(?:xn--)[a-z0-9]+))(?:-[a-z0-9]+)*)|(?:\\[(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){7})|(?:(?!(?:.*[a-f0-9][:\\]]){7,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?)))|(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){5}:)|(?:(?!(?:.*[a-f0-9]:){5,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3}:)?)))?(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))(?:\\.(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))){3}))\\]))$/,\n                    message: 'email düzgün formatda deyil'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"Telefon\",\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$phone = errors.phone) === null || _errors$phone === void 0 ? void 0 : _errors$phone.message,\n              children: [/*#__PURE__*/_jsxDEV(Selectbox, {\n                className: \"bg-white\",\n                data: telData,\n                name: \"phone_typ\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'telefon məcburidir'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"tel\",\n                name: \"phone\",\n                maxLength: \"9\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'telefon məcburidir'\n                  },\n                  pattern: {\n                    value: /^\\(?(51|60|70|77|50|55)\\)?(\\s+)?[0-9]{3}-?[0-9]{2}-?[0-9]{2}$/,\n                    message: 'telefon düzgün format deyil'\n                  },\n                  maxLength: {\n                    value: 9,\n                    message: 'telefon 9 simvoldan ibarət ola bilər'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"Cins\",\n              bodyClass: \"\",\n              className: \"w-50 pr-xs mb-xs\",\n              children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n                text: \"Ki\\u015Fi\",\n                name: \"gender\",\n                id: \"male\",\n                value: \"M\",\n                Ref: register()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n                text: \"Qad\\u0131n\",\n                name: \"gender\",\n                id: \"female\",\n                value: \"F\",\n                Ref: register()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 12\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"Do\\u011Fum tarixi\",\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$birthday = errors.birthday) === null || _errors$birthday === void 0 ? void 0 : _errors$birthday.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                className: \"\",\n                name: \"birthday\",\n                type: \"date\",\n                format: \"dd/mm/yyyy\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'tarix məcburidir'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"S/v seriya n\\xF6mr\\u0259si\",\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$serial = errors.serial) === null || _errors$serial === void 0 ? void 0 : _errors$serial.message,\n              children: [/*#__PURE__*/_jsxDEV(Selectbox, {\n                onChange: function onChange(ev) {\n                  setCheckSerial(ev.target.value);\n                },\n                className: \"bg-white\",\n                data: [{\n                  id: 'AA',\n                  name: 'AA'\n                }, {\n                  id: 'AZE',\n                  name: 'AZE'\n                }]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"serial\",\n                maxLength: checkSerial === 'AA' ? '7' : '8',\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'seriya nömrəsi məcburidir'\n                  },\n                  maxLength: {\n                    value: checkSerial === 'AA' ? 7 : 8,\n                    message: 'seriya nömrə 7-8 simvol aralığında olmalıdır'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"S/V Fin kodu\",\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$fin = errors.fin) === null || _errors$fin === void 0 ? void 0 : _errors$fin.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"fin\",\n                maxLength: \"7\",\n                minLength: \"7\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'fin kod məcburidir'\n                  },\n                  maxLength: {\n                    value: 7,\n                    message: 'maximum 7 simvol olmalıdır'\n                  },\n                  minLength: {\n                    value: 7,\n                    message: 'minimum 7 simvol olmalıdır'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"Milliy\\u0259t\",\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$nationality = errors.nationality) === null || _errors$nationality === void 0 ? void 0 : _errors$nationality.message,\n              children: /*#__PURE__*/_jsxDEV(Selectbox, {\n                className: \"w-100 m-none\",\n                name: \"nationality\",\n                data: [{\n                  id: 'Azerbaijan',\n                  name: 'Azerbaijan'\n                }, {\n                  id: 'Foreign',\n                  name: 'Foreign'\n                }],\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'milliyət məcburidir'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"\\xDCnvan\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$address = errors.address) === null || _errors$address === void 0 ? void 0 : _errors$address.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                name: \"address\",\n                type: \"text\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'ünvan məcburidir'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 10\n            }, this), isKorporative && /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"V\\xF6en\",\n              bodyClass: \"bg-bg\",\n              className: \"w-100 mb-xs\",\n              error: (_errors$tin = errors.tin) === null || _errors$tin === void 0 ? void 0 : _errors$tin.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"tin\",\n                Ref: isKorporative && register({\n                  required: {\n                    value: true,\n                    message: 'vöen məcburidir'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"\\u015Eifr\\u0259\",\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs\",\n              error: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                name: \"password\",\n                type: \"password\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'şifrə məcburidir'\n                  },\n                  pattern: {\n                    value: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n                    message: 'şifrə min 1 hərf, 1rəqəm və 8 simvol olmalıdır'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"T\\u0259krar \\u015Fifr\\u0259\",\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$password_conf = errors.password_confirmation) === null || _errors$password_conf === void 0 ? void 0 : _errors$password_conf.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                name: \"password_confirmation\",\n                type: \"password\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'təkrar şifrə məcburidir'\n                  },\n                  validate: function validate(value) {\n                    return value === password.current || 'təkrar şifrə uyğun deyil';\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            className: \"mt-sm\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              label: \"Qeydiyyat\\u0131 tamamla\",\n              endElement: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-xs\",\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 31\n              }, this),\n              className: \"w-100\",\n              onClick: handleSubmit(submit)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-50\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"w-100 h-100 p-none\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pb-sm\",\n            children: \"Qeydiyyatdan ke\\xE7mekd\\u0259 \\xE7\\u0259ntinlik \\xE7\\u0259kirsizs\\u0259 videonu izl\\u0259yin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"w-100\",\n            src: \"./assets/images/img1.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Register, \"r3G8kkOcWYEv1s6SKh0WXHolKVM=\", false, function () {\n  return [useForm];\n});\n\n_c = Register;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    Entry: state.entry\n  };\n};\n\nvar mapDispatchToProps = {\n  UserRegister: UserRegister\n};\nexport default connect(mapStateToProps, mapDispatchToProps)( /*#__PURE__*/memo(Register));\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/naibtahmazli/Documents/166kargo/pages/register.js"],"names":["React","memo","useEffect","useRef","useState","useForm","connect","Button","Card","FromGroup","Input","Page","RadioButton","Selectbox","Switch","UserRegister","telData","id","name","Register","props","console","log","Entry","errorMessages","key","errors","setValue","join","isKorporative","setisKorporative","checkSerial","setCheckSerial","register","handleSubmit","reset","watch","password","phone","current","submit","data","newData","birthday","split","reverse","display","justifyContent","alignItems","e","target","checked","flexWrap","firstname","message","required","value","pattern","lastname","email","maxLength","serial","ev","fin","minLength","nationality","address","tin","password_confirmation","validate","mapStateToProps","state","entry","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useRef, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { connect } from \"react-redux\"\nimport Button from '../components/button'\nimport Card from '../components/card/card'\nimport FromGroup from '../components/form-group/form-group'\nimport Input from '../components/input/input'\nimport Page from '../components/page/page'\nimport RadioButton from '../components/radio-button/radio-button'\nimport Selectbox from '../components/selectbox/selectbox'\nimport Switch from \"../components/switch/switch\"\nimport { UserRegister } from \"../redux/entry/entryActions\"\n\n\n\n\nconst telData = [\n  {id:'+994',name:'+994'}\n ]\n\nfunction Register(props) {\n  console.log(props.Entry.errorMessages)\n  useEffect(() => {\n    for(let key in props.Entry.errorMessages.errors){\n      setValue(key,props.Entry.errorMessages.errors[key].join('\\n'))\n    }\n\n    console.log(errors)\n  })\n const [isKorporative, setisKorporative] = useState(false);\n const [checkSerial, setCheckSerial] = useState('AA');\n\n const {register,handleSubmit,errors,reset,watch,setValue} = useForm();\n\n const password = useRef({});\n const phone = useRef({});\n\n phone.current = watch(\"phone_typ\",'');\n password.current = watch(\"password\",'');\n\n const submit = (data) => {\n   let newData = {\n     ...data,\n     phone:phone.current + data.phone,\n     birthday: data.birthday.split('-').reverse().join('-')\n   }\n   console.log(newData)\n   props.UserRegister('auth/register',newData,{'content-type':'application/json'});\n }\n\n \n return (\n  <Page className='bg-bg register-page'>\n    <main className='mt-lg'>\n      <Card className='bg-white br-sm mr-sm p-sm w-50'>\n       <Card.Header text='Qeydiyyat' endElelment={\n       <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\n         <h3 className='cardHeaderText pr-xs'>Korporativ</h3>\n         <Switch value={isKorporative} onClick={(e)=>{\n          setisKorporative(e.target.checked)\n       }}/></div>}/>\n       <Card.Body className='p-none'>\n        <form style={{display:'flex',flexWrap:'wrap'}} >\n         <FromGroup label='Adiniz' bodyClass='bg-bg p-xs' className='w-50 pr-xs mb-xs'\n           error={errors.firstname?.message}\n         >\n          <Input type='text' name='firstname'\n             Ref={register({\n               required:{value:true, message:'ad məcburidir'},\n               pattern:{value:'',message:'ad yalnız hərflər ola bilər'}\n             })} \n           />\n         </FromGroup>\n         <FromGroup label='Soyadiniz' bodyClass='bg-bg p-xs' className='w-50 pr-xs mb-xs'\n           error={errors.lastname?.message}\n         >\n          <Input type='text' name='lastname'\n             Ref={register({\n              required:{value:true, message:'soyad məcburidir'},\n              pattern:{value:'',message:'soyad yalnız hərflər ola bilər'}\n            })} \n          />\n         </FromGroup>\n         <FromGroup label='E-mail' bodyClass='bg-bg p-xs' className='w-50 pr-xs'\n           error={errors.email?.message}\n         >\n          <Input type='email' name='email' \n             Ref={register({\n              required:{value:true, message:'email məcburidir'},\n              pattern:{value:/^(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){255,})(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){65,}@)(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22))(?:\\.(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22)))*@(?:(?:(?!.*[^.]{64,})(?:(?:(?:xn--)?[a-z0-9]+(?:-[a-z0-9]+)*\\.){1,126}){1,}(?:(?:[a-z][a-z0-9]*)|(?:(?:xn--)[a-z0-9]+))(?:-[a-z0-9]+)*)|(?:\\[(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){7})|(?:(?!(?:.*[a-f0-9][:\\]]){7,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?)))|(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){5}:)|(?:(?!(?:.*[a-f0-9]:){5,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3}:)?)))?(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))(?:\\.(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))){3}))\\]))$/,message:'email düzgün formatda deyil'}\n            })} \n          />\n         </FromGroup>\n         <FromGroup label='Telefon' bodyClass='bg-bg' className='w-50 pr-xs mb-xs'\n           error={errors.phone?.message}\n         >\n           <Selectbox className='bg-white' data={telData}\n               name='phone_typ'\n               Ref={register({\n                required:{value:true, message:'telefon məcburidir'},\n              })} \n           />\n          <Input type='tel' name='phone'\n              maxLength='9'\n             Ref={register({\n               required:{value:true, message:'telefon məcburidir'},\n               pattern:{value:/^\\(?(51|60|70|77|50|55)\\)?(\\s+)?[0-9]{3}-?[0-9]{2}-?[0-9]{2}$/,message:'telefon düzgün format deyil'},\n               maxLength:{value:9, message:'telefon 9 simvoldan ibarət ola bilər'}\n             })} \n          />\n         </FromGroup>\n         <FromGroup label='Cins' bodyClass=''  className='w-50 pr-xs mb-xs'>\n           <RadioButton text='Kişi' name='gender' id='male' value='M' \n              Ref={register()} \n           />\n           <RadioButton text='Qadın' name='gender' id='female' value='F' \n              Ref={register()} \n           />\n         </FromGroup>\n         <FromGroup label='Doğum tarixi' bodyClass='bg-bg' className='w-50 pr-xs mb-xs'\n           error={errors.birthday?.message}\n         >\n           <Input className='' name='birthday' type='date' format='dd/mm/yyyy'\n               Ref={register({\n                required:{value:true, message:'tarix məcburidir'},\n              })} \n           />\n         </FromGroup>\n         <FromGroup label='S/v seriya nömrəsi' bodyClass='bg-bg' className='w-50 pr-xs mb-xs' \n           error={errors.serial?.message}\n         >\n           <Selectbox onChange={(ev)=>{\n              setCheckSerial(ev.target.value)\n           }} className='bg-white' data={[{id:'AA',name:'AA'},{id:'AZE',name:'AZE'}]}/>\n          <Input type='text' name='serial'\n            maxLength={checkSerial==='AA' ? '7' : '8'}\n            Ref={register({\n              required:{value:true, message:'seriya nömrəsi məcburidir'},\n              maxLength:{value: checkSerial==='AA' ? 7 : 8, message:'seriya nömrə 7-8 simvol aralığında olmalıdır'}\n            })} \n          />\n         </FromGroup>\n         <FromGroup label='S/V Fin kodu' bodyClass='bg-bg' className='w-50 pr-xs mb-xs' \n           error={errors.fin?.message}\n         >\n          <Input type='text' name='fin'\n            maxLength='7'\n            minLength='7'\n            Ref={register({\n              required:{value:true, message:'fin kod məcburidir'},\n              maxLength:{value:7,message:'maximum 7 simvol olmalıdır'},\n              minLength:{value:7,message:'minimum 7 simvol olmalıdır'}\n            })} \n          />\n         </FromGroup>\n         <FromGroup label='Milliyət' bodyClass='bg-bg' className='w-50 pr-xs mb-xs' \n           error={errors.nationality?.message}\n         >\n           <Selectbox className='w-100 m-none' name='nationality' data={[{id:'Azerbaijan',name:'Azerbaijan'},{id:'Foreign',name:'Foreign'}]}\n               Ref={register({\n                required:{value:true, message:'milliyət məcburidir'},\n              })} \n           />\n         </FromGroup>\n         <FromGroup label='Ünvan' className='w-50 pr-xs mb-xs'\n           error={errors.address?.message}\n         >\n           <Input name='address' type='text'\n              Ref={register({\n                required:{value:true, message:'ünvan məcburidir'},\n              })} \n           />\n         </FromGroup>\n         {\n          isKorporative && \n         <FromGroup label='Vöen' bodyClass='bg-bg' className='w-100 mb-xs'\n           error={errors.tin?.message}\n         >\n           <Input type='text' name='tin'\n              Ref={\n                isKorporative && \n                register({\n                  required:{value:true, message:'vöen məcburidir'},\n                })\n              }\n            />\n         </FromGroup>\n         }\n         <FromGroup label='Şifrə' bodyClass='bg-bg' className='w-50 pr-xs'\n           error={errors.password?.message}\n         >\n           <Input name='password' type='password' \n             Ref={register({\n               required:{value:true,message:'şifrə məcburidir'},\n               pattern:{value:/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, message:'şifrə min 1 hərf, 1rəqəm və 8 simvol olmalıdır'}\n             })}\n           />\n         </FromGroup>\n         <FromGroup label='Təkrar şifrə' bodyClass='bg-bg' className='w-50 pr-xs mb-xs'\n           error={errors.password_confirmation?.message} \n         >\n           <Input name='password_confirmation' type='password'\n              Ref={register({\n                required:{value:true,message:'təkrar şifrə məcburidir'},\n                validate: value => \n                  value === password.current || 'təkrar şifrə uyğun deyil'\n              })}\n           />\n         </FromGroup>\n        </form>\n        <Card.Footer className='mt-sm'>\n          <Button label='Qeydiyyatı tamamla' \n                  endElement={<span className='ml-xs'>&rarr;</span>} \n                  className='w-100'\n                  onClick={handleSubmit(submit)} \n          />\n        </Card.Footer>\n       </Card.Body>\n      </Card>\n      <Card className='w-50'>\n       <Card.Body className='w-100 h-100 p-none'>\n         <p className='pb-sm'>Qeydiyyatdan keçmekdə çəntinlik çəkirsizsə videonu izləyin</p>\n         {/* <video  poster='./assets/images/img1.png'>\n            </video> */}\n         <img className='w-100' src='./assets/images/img1.png'/>\n       </Card.Body>\n      </Card>\n    </main>\n  </Page>\n )\n}\n\nconst mapStateToProps = state => ({\n  Entry: state.entry\n});\n\nconst mapDispatchToProps = {\n  UserRegister\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(memo(Register))\n"]},"metadata":{},"sourceType":"module"}