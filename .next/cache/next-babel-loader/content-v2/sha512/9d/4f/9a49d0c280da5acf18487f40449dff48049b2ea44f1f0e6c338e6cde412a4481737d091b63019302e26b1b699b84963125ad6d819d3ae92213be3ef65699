{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/naibtahmazli/Documents/166kargo/pages/decleration.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport { useRouter } from \"next/router\";\nimport React, { memo, useState } from 'react';\nimport 'react-day-picker/lib/style.css';\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport AsideMenu from \"../components/aside-menu/index\";\nimport Aside from '../components/aside/aside';\nimport ButtonComponent from \"../components/button/index\";\nimport Card from \"../components/card/card\";\nimport FromGroup from \"../components/form-group/form-group\";\nimport Input from \"../components/input/input\";\nimport Main from '../components/main/main';\nimport Page from \"../components/page/page\";\nimport Redirect from \"../components/redirect/redirect\";\nimport Selectbox from \"../components/selectbox/selectbox\";\nconst telData = [{\n  id: 15,\n  name: 'Türkiyə'\n}, {\n  id: 16,\n  name: 'Türkiyə'\n}, {\n  id: 17,\n  name: 'Türkiyə'\n}];\nconst curData = [{\n  id: 'try',\n  name: 'Türkiyə Lirəsi'\n}, {\n  id: 'azn',\n  name: 'Azərbaycan Manatı'\n}, {\n  id: 'eur',\n  name: 'Avro'\n}, {\n  id: 'usd',\n  name: 'ABŞ dolları'\n}, {\n  id: 'bla',\n  name: 'bla dolları'\n}];\n\nfunction Decleration(props) {\n  var _errors$country, _errors$track_number, _errors$shop_name, _errors$main_group, _errors$sub_category, _props$mainCategories, _errors$price, _errors$invoice, _errors$note;\n\n  if (!props.entry.isLoged) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n\n  const {\n    0: checkSerial,\n    1: setCheckSerial\n  } = useState('AA');\n  const {\n    locale\n  } = useRouter();\n  const {\n    register,\n    errors,\n    handleSubmit,\n    watch,\n    setError\n  } = useForm();\n  const {\n    0: subCategories,\n    1: setSubCategories\n  } = useState('AA');\n  const {\n    0: fileName,\n    1: setFileName\n  } = useState('');\n\n  const handleChange = ev => {\n    let {\n      name,\n      value\n    } = ev.target;\n    setUser(_objectSpread(_objectSpread({}, user), {}, {\n      [name]: value\n    }));\n  };\n\n  const submit = data => {\n    let newFormData = new FormData();\n\n    for (let key in data) {\n      if (key === 'invoice') newFormData.append(key, data[key][0]);else newFormData.append(key, data[key]);\n    }\n\n    newFormData.append('_method', 'POST');\n    axios.post(`${process.env.NEXT_PUBLIC_API_URL}batches?lan=${locale}`, newFormData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Accepts': 'application/json',\n        'Authorization': `Bearer ${props.entry.user.accessToken}`\n      }\n    }).then(res => {\n      Swal.fire({\n        title: res.message,\n        icon: 'success'\n      });\n    }).catch(err => {\n      for (let key in err.response.data.errors) {\n        setError(key, {\n          message: err.response.data.errors[key].join('\\n')\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    className: \"user-profile-page bg-bg pt-lg\",\n    children: [/*#__PURE__*/_jsxDEV(Aside, {\n      className: \"mr-sm\",\n      children: /*#__PURE__*/_jsxDEV(AsideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"bg-white p-sm br-lg\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          text: \"Yeni B\\u0259y\\u0259nnam\\u0259\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(submit),\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"bg-bg\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"declaration__flex\",\n              children: [/*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"\\xD6lk\\u0259 se\\xE7\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$country = errors.country) === null || _errors$country === void 0 ? void 0 : _errors$country.message,\n                children: /*#__PURE__*/_jsxDEV(Selectbox, {\n                  className: \"bg-white w-100\",\n                  data: telData,\n                  name: \"country\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'country type is required'\n                    }\n                  }) //  onChange={handleChange}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Track \\u0130D\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$track_number = errors.track_number) === null || _errors$track_number === void 0 ? void 0 : _errors$track_number.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"track_number\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'track number is required'\n                    }\n                  }) //  onChange={handleChange}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Magaza ad\\u0131\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$shop_name = errors.shop_name) === null || _errors$shop_name === void 0 ? void 0 : _errors$shop_name.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"shop_name\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'shop name is required'\n                    }\n                  }) //  onChange={handleChange}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"\\u018Fsas qrup\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$main_group = errors.main_group) === null || _errors$main_group === void 0 ? void 0 : _errors$main_group.message,\n                children: /*#__PURE__*/_jsxDEV(Selectbox, {\n                  className: \"bg-white w-100 \",\n                  data: props.mainCategories,\n                  name: \"main_group\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'main_group type is required'\n                    }\n                  }),\n                  onChange: ev => {\n                    setSubCategories(ev.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Alt qrup\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$sub_category = errors.sub_category) === null || _errors$sub_category === void 0 ? void 0 : _errors$sub_category.message,\n                children: /*#__PURE__*/_jsxDEV(Selectbox, {\n                  className: \"bg-white w-100\",\n                  data: subCategories && ((_props$mainCategories = props.mainCategories.find(x => x.id === +subCategories)) === null || _props$mainCategories === void 0 ? void 0 : _props$mainCategories.sub_categories),\n                  name: \"sub_category\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'sub category type is required'\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"\\u0130nvoys qiym\\u0259ti\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$price = errors.price) === null || _errors$price === void 0 ? void 0 : _errors$price.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"number\",\n                  name: \"price\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'price is required'\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"\\u0130nvoys y\\xFCkl\\u0259\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                bodyStyle: {\n                  height: '150px'\n                },\n                error: (_errors$invoice = errors.invoice) === null || _errors$invoice === void 0 ? void 0 : _errors$invoice.message,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-uploade\",\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    className: \"w-100\",\n                    type: \"file\",\n                    name: \"invoice\",\n                    Ref: register({\n                      required: {\n                        value: true,\n                        message: 'invoice is required'\n                      }\n                    }),\n                    onChange: e => {\n                      console.log(e.target.files[0]); // setFileName(e.target.files[0].)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"over-layer\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"/assets/icons/upload.png\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"S\\xFCr\\xFCkl\\u0259yib bura at\\u0131n \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 49\n                      }, this), \"v\\u0259 ya \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"fayl\\u0131 se\\xE7in\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 195,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Qeyd\",\n                bodyClass: \"bg-white\",\n                bodyStyle: {\n                  height: '150px'\n                },\n                className: \"w-50 pr-xs\",\n                error: (_errors$note = errors.note) === null || _errors$note === void 0 ? void 0 : _errors$note.message,\n                children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"p-xs w-100 h-100\",\n                  style: {\n                    outline: 'none',\n                    border: 'none'\n                  },\n                  placeholder: \"qeydiniz varsa daxil edin\",\n                  name: \"note\",\n                  ref: register({\n                    required: {\n                      value: true,\n                      message: 'note is required'\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            className: \"mt-sm\",\n            style: {\n              justifyContent: 'flex-end'\n            },\n            children: /*#__PURE__*/_jsxDEV(ButtonComponent, {\n              className: \"w-25\",\n              label: \"B\\u0259yan et\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\nconst mapStateToProps = state => ({\n  entry: state.entry\n});\n\nconst mapDispatchToProps = {};\nexport async function getStaticProps({\n  locale\n}) {\n  let categories = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}categories/main?lan=${locale}`);\n  return {\n    props: {\n      mainCategories: categories.data\n    }\n  };\n}\nexport default connect(mapStateToProps)( /*#__PURE__*/memo(Decleration));","map":{"version":3,"sources":["/Users/naibtahmazli/Documents/166kargo/pages/decleration.js"],"names":["axios","useRouter","React","memo","useState","useForm","connect","Swal","AsideMenu","Aside","ButtonComponent","Card","FromGroup","Input","Main","Page","Redirect","Selectbox","telData","id","name","curData","Decleration","props","entry","isLoged","checkSerial","setCheckSerial","locale","register","errors","handleSubmit","watch","setError","subCategories","setSubCategories","fileName","setFileName","handleChange","ev","value","target","setUser","user","submit","data","newFormData","FormData","key","append","post","process","env","NEXT_PUBLIC_API_URL","headers","accessToken","then","res","fire","title","message","icon","catch","err","response","join","country","required","track_number","shop_name","main_group","mainCategories","sub_category","find","x","sub_categories","price","height","invoice","e","console","log","files","note","outline","border","justifyContent","mapStateToProps","state","mapDispatchToProps","getStaticProps","categories","get"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { useRouter } from \"next/router\";\nimport React, { memo, useState } from 'react';\nimport 'react-day-picker/lib/style.css';\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport AsideMenu from \"../components/aside-menu/index\";\nimport Aside from '../components/aside/aside';\nimport ButtonComponent from \"../components/button/index\";\nimport Card from \"../components/card/card\";\nimport FromGroup from \"../components/form-group/form-group\";\nimport Input from \"../components/input/input\";\nimport Main from '../components/main/main';\nimport Page from \"../components/page/page\";\nimport Redirect from \"../components/redirect/redirect\";\nimport Selectbox from \"../components/selectbox/selectbox\";\n\nconst telData = [\n  {id:15,name:'Türkiyə'},\n  {id:16,name:'Türkiyə'},\n  {id:17,name:'Türkiyə'}\n ]\n\n const curData = [\n  {id:'try',name:'Türkiyə Lirəsi'},\n  {id:'azn',name:'Azərbaycan Manatı'},\n  {id:'eur',name:'Avro'},\n  {id:'usd',name:'ABŞ dolları'},\n  {id:'bla',name:'bla dolları'}\n\n\n ]\n \nfunction Decleration(props) {\n\n  if(!props.entry.isLoged){\n    return <Redirect/>\n  }\n\n  const [checkSerial, setCheckSerial] = useState('AA');\n  const { locale } = useRouter();\n  const {register,errors,handleSubmit,watch,setError} = useForm();\n  const [subCategories, setSubCategories] = useState('AA');\n  const [fileName, setFileName] = useState('');\n\n\n  const handleChange = (ev) => {\n     let {name, value} = ev.target;\n     setUser({\n       ...user,\n       [name]: value\n     })\n  }\n\n  const submit = (data) => {\n      \n     let newFormData = new FormData();\n     for(let key in data){\n       if(key === 'invoice')\n         newFormData.append(key,data[key][0]);\n       else\n       newFormData.append(key,data[key]);\n     }\n\n     newFormData.append('_method','POST')\n\n     axios.post(`${process.env.NEXT_PUBLIC_API_URL}batches?lan=${locale}`,newFormData,{\n       headers: {\n        'Content-Type':'multipart/form-data',\n         'Accepts':'application/json',\n         'Authorization':`Bearer ${props.entry.user.accessToken}`\n      }\n     }).then(res => {\n       Swal.fire({\n         title:res.message,\n         icon:'success',\n       })\n     }).catch(err => {\n      for(let key in err.response.data.errors){\n        setError(key,{message: err.response.data.errors[key].join('\\n')})\n      }\n     })\n  }\n\n\n\n    return (\n        <Page className='user-profile-page bg-bg pt-lg'>\n            <Aside className='mr-sm'>\n              <AsideMenu/>\n            </Aside>\n         <Main>\n         <Card className='bg-white p-sm br-lg'>\n          <Card.Header text='Yeni Bəyənnamə'/>\n          <form onSubmit={handleSubmit(submit)}>\n          <Card.Body className='bg-bg'>\n            <div className='declaration__flex'>\n                <FromGroup label='Ölkə seç' bodyClass='bg-white' className='w-50 pr-xs'\n                 error={errors.country?.message}\n                >\n                  <Selectbox className='bg-white w-100' data={telData}\n                   name='country'\n                   Ref={register({\n                    required:{value:true, message:'country type is required'},\n                  })}\n                    //  onChange={handleChange}\n                  />\n                </FromGroup>\n\n                <FromGroup label='Track İD' bodyClass='bg-white' className='w-50 pr-xs'\n                error={errors.track_number?.message}\n                >\n                  <Input type='text' name='track_number'\n                     Ref={register({\n                      required:{value:true, message:'track number is required'},\n                    })}\n                    //  onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n\n                <FromGroup label='Magaza adı' bodyClass='bg-white' className='w-50 pr-xs'\n                error={errors.shop_name?.message}\n                >\n                  <Input type='text' name='shop_name'\n                     Ref={register({\n                       required:{value:true, message:'shop name is required'},\n                     })}\n                    //  onChange={handleChange}\n                  />\n                </FromGroup>\n\n                <FromGroup label='Əsas qrup' bodyClass='bg-white' className='w-50 pr-xs'\n                 error={errors.main_group?.message}\n                >\n                  <Selectbox className='bg-white w-100 ' data={props.mainCategories}\n                   name='main_group'\n                   Ref={register({\n                    required:{value:true, message:'main_group type is required'},\n                  })}\n                     onChange={(ev) => {\n                       setSubCategories(ev.target.value)\n                     }}\n                  />\n                </FromGroup>\n\n\n                <FromGroup label='Alt qrup' bodyClass='bg-white' className='w-50 pr-xs'\n                 error={errors.sub_category?.message}\n                >\n                  <Selectbox className='bg-white w-100' data={subCategories && props.mainCategories.find(x => x.id=== +subCategories)?.sub_categories}\n                   name='sub_category'\n                   Ref={register({\n                    required:{value:true, message:'sub category type is required'},\n                  })}\n                  />\n                </FromGroup>\n\n\n                <FromGroup label='İnvoys qiyməti' bodyClass='bg-white' className='w-50 pr-xs'\n                error={errors.price?.message}\n                >\n                  <Input type='number' name='price'\n                     Ref={register({\n                       required:{value:true, message:'price is required'}\n                     })} \n                  />\n                  \n                </FromGroup>\n\n\n                <FromGroup \n                  label='İnvoys yüklə' \n                  bodyClass='bg-white' \n                  className='w-50 pr-xs'\n                  bodyStyle={{height:'150px'}}\n                error={errors.invoice?.message}\n                >\n                  <div className='file-uploade'>\n                  <Input className='w-100' type='file' name='invoice'\n                     Ref={register({\n                       required:{value:true, message:'invoice is required'}\n                     })} \n                     onChange={(e) => {\n                       console.log(e.target.files[0])\n                      // setFileName(e.target.files[0].)\n                     }}\n                  />\n                    <div className='over-layer'>\n                        <img src='/assets/icons/upload.png'/>\n                        <p>\n                           Sürükləyib bura atın <br/>\n                            və ya <br/>\n                            <span>faylı seçin</span>\n                        </p>\n                    </div>\n                  </div>\n                </FromGroup>\n\n                <FromGroup label='Qeyd' bodyClass='bg-white' bodyStyle={{height:'150px'}} className='w-50 pr-xs'\n                   error={errors.note?.message}\n                   >\n                      <textarea className='p-xs w-100 h-100' style={{outline:'none',border:'none'}} placeholder='qeydiniz varsa daxil edin' name='note'\n                        ref={register({\n                          required:{value:true,message:'note is required'}    \n                        })} \n                      />\n                   </FromGroup>\n            </div>\n          </Card.Body>\n            <Card.Footer className='mt-sm' style={{justifyContent:'flex-end'}}>\n              <ButtonComponent className='w-25'  label='Bəyan et'/>\n            </Card.Footer>\n            </form>\n         </Card>\n            </Main>\n        </Page>\n    )\n}\n\nconst mapStateToProps = state => ({\n  entry: state.entry\n});\n\nconst mapDispatchToProps = {\n\n}\n\n\nexport async function getStaticProps({locale}) {\n\n  let categories = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}categories/main?lan=${locale}`);\n\n  return {\n    props: {\n      mainCategories: categories.data,\n    },\n  }\n\n}\n\nexport default connect(mapStateToProps)(memo(Decleration))\n"]},"metadata":{},"sourceType":"module"}