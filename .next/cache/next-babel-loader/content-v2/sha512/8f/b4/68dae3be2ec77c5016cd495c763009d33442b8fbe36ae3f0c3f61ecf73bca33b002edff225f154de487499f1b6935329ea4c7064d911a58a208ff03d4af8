{"ast":null,"code":"import axios from \"axios\";\nimport router from \"next/router\";\nimport Swal from \"sweetalert2\";\nimport { IncreaseBalance, login, logout, PayByBalance, register, updateUser } from \"./actions\";\nexport const Login = (url, data, headers = {}) => dispatch => {\n  axios.post(`${process.env.NEXT_PUBLIC_API_URL}${url}`, data, {\n    headers: headers\n  }).then(async res => {\n    let data = await res.data;\n    dispatch(login(data));\n    router.push('/packages');\n  }).catch(errors => {\n    dispatch(login({\n      isError: true,\n      errors: errors.response.data\n    }));\n  });\n};\nexport const UserRegister = (url, data, headers = {}) => dispatch => {\n  axios.post(`${process.env.NEXT_PUBLIC_API_URL}${url}`, data, {\n    headers: headers\n  }).then(async res => {\n    Swal.fire({\n      text: 'Əməliyyat uğurla tamamlandı',\n      icon: 'success',\n      confirmButtonText: 'OK'\n    }).then(res => {\n      if (res.isConfirmed) {\n        router.push('/myaddresses');\n      }\n    });\n    let data = await res.data;\n    dispatch(register(data));\n  }).catch(err => {\n    dispatch(register({\n      isError: true,\n      errors: err.response.data\n    }));\n  });\n};\nexport const LogOut = () => dispatch => {\n  dispatch(logout());\n};\nexport const UpdateUser = (url, data, headers = {}) => dispatch => {\n  axios.put(`${process.env.NEXT_PUBLIC_API_URL}${url}`, data, {\n    headers: headers\n  }).then(res => {\n    dispatch(updateUser(res.data));\n    Swal.fire({\n      text: 'Əməliyyat uğurla yerinə yetirildi',\n      icon: 'success',\n      confirmButtonText: 'OK'\n    });\n  }).catch(err => {\n    dispatch(updateUser({\n      isError: true,\n      errors: err.response.data\n    }));\n  });\n};\nexport const PayByBalanceAction = (url, data, headers) => dispatch => {\n  axios.post(`${process.env.NEXT_PUBLIC_API_URL}${url}`, data, {\n    headers: headers\n  }).then(res => {\n    console.log('req', res.data.balance);\n    Swal.fire({\n      text: res.data.message,\n      icon: 'success',\n      confirmButtonText: 'OK'\n    });\n    dispatch(PayByBalance(res.data.balance));\n    router.push(`/success?message=${res.data.message}`);\n  }).catch(err => console.log(err));\n};\nexport const IncreaseBalanceAction = balance => dispatch => {\n  dispatch(IncreaseBalance(balance));\n};","map":null,"metadata":{},"sourceType":"module"}