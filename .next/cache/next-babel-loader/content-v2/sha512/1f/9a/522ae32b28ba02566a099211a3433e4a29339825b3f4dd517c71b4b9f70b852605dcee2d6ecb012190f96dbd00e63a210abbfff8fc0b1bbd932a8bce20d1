{"ast":null,"code":"import _regeneratorRuntime from \"/Users/naibtahmazli/Documents/166kargo/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/naibtahmazli/Documents/166kargo/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/naibtahmazli/Documents/166kargo/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/naibtahmazli/Documents/166kargo/pages/user-info.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\nimport router, { useRouter } from \"next/router\";\nimport React, { memo, useRef, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport AsideMenu from \"../components/aside-menu/index\";\nimport Aside from '../components/aside/aside';\nimport ButtonComponent from \"../components/button/index\";\nimport Card from \"../components/card/card\";\nimport FromGroup from \"../components/form-group/form-group\";\nimport Input from \"../components/input/input\";\nimport Main from '../components/main/main';\nimport Page from \"../components/page/page\";\nimport RadioButton from \"../components/radio-button/radio-button\";\nimport Selectbox from \"../components/selectbox/selectbox\";\nimport { UpdateUser } from \"../redux/entry/entryActions\";\nvar telData = [{\n  id: '+994',\n  name: '+994'\n}];\n\nfunction UserInfo(props) {\n  _s();\n\n  var _uErrors$firstname, _uErrors$lastname, _uErrors$email, _uErrors$phone, _uErrors$serial, _uErrors$fin, _uErrors$nationality, _uErrors$birthday, _uErrors$address, _errors$old_password, _errors$new_password, _errors$new_password_;\n\n  if (!props.entry.isLoged) {\n    router.push('/register');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this);\n  }\n\n  var _useState = useState('AA'),\n      checkSerial = _useState[0],\n      setCheckSerial = _useState[1];\n\n  var _useState2 = useState(_objectSpread(_objectSpread({}, props.entry.user.user), {}, {\n    phone: props.entry.user.user.phone.slice(4)\n  })),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useRouter = useRouter(),\n      locale = _useRouter.locale,\n      locales = _useRouter.locales,\n      defaultLocale = _useRouter.defaultLocale;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch;\n\n  var _useForm2 = useForm(),\n      uRegister = _useForm2.register,\n      uErrors = _useForm2.errors,\n      uHandleSubmit = _useForm2.handleSubmit;\n\n  var password = useRef();\n  var phone = useRef();\n  password.current = watch('new_password', '');\n  phone.current = watch(\"phone_typ\", '');\n\n  var resetPassword = function resetPassword(data) {\n    axios.put(\"\".concat(process.env.NEXT_PUBLIC_API_URL, \"user/password?lan=\").concat(locale), data, {\n      headers: {\n        'content-type': 'application/json',\n        'accept': 'application/json',\n        'authorization': \"Bearer \".concat(props.entry.user.accessToken)\n      }\n    }).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(res) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return res;\n\n              case 2:\n                data = _context.sent;\n                Swal.fire({\n                  title: 'Success!',\n                  text: data.message,\n                  icon: 'success',\n                  confirmButtonText: 'OK'\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }())[\"catch\"](function (error) {\n      console.log(error);\n      Swal.fire({\n        title: 'Error!',\n        text: error.message,\n        icon: 'error',\n        confirmButtonText: 'OK'\n      });\n    });\n  };\n\n  var updateUserData = function updateUserData(data) {\n    var newData = _objectSpread(_objectSpread({}, data), {}, {\n      phone: data.phone_typ + data.phone,\n      birthday: data.birthday.split('-').reverse().join('-')\n    });\n\n    props.UpdateUser(\"user?lan=\".concat(locale), newData, {\n      'content-type': 'application/json',\n      'accept': 'application/json',\n      'authorization': \"Bearer \".concat(props.entry.user.accessToken)\n    });\n  };\n\n  var handleChange = function handleChange(ev) {\n    var _ev$target = ev.target,\n        name = _ev$target.name,\n        value = _ev$target.value;\n    setUser(_objectSpread(_objectSpread({}, user), {}, _defineProperty({}, name, value)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    className: \"user-profile-page bg-bg pt-lg\",\n    children: [/*#__PURE__*/_jsxDEV(Aside, {\n      className: \"mr-sm\",\n      children: /*#__PURE__*/_jsxDEV(AsideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"bg-white p-sm br-lg\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          text: \"Sexsi melumatlar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: uHandleSubmit(updateUserData),\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"bg-bg\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexWrap: 'wrap'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Ad\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_uErrors$firstname = uErrors.firstname) === null || _uErrors$firstname === void 0 ? void 0 : _uErrors$firstname.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"firstname\",\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'name is required'\n                    },\n                    pattern: {\n                      value: '',\n                      message: 'name only takes letters'\n                    }\n                  }),\n                  value: user.firstname,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Soyad\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_uErrors$lastname = uErrors.lastname) === null || _uErrors$lastname === void 0 ? void 0 : _uErrors$lastname.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"lastname\",\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'surname is required'\n                    },\n                    pattern: {\n                      value: '',\n                      message: 'surname only takes letters'\n                    }\n                  }),\n                  value: user.lastname,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"E-mail\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_uErrors$email = uErrors.email) === null || _uErrors$email === void 0 ? void 0 : _uErrors$email.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"email\",\n                  name: \"email\",\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'email is required'\n                    },\n                    pattern: {\n                      value: /^(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){255,})(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){65,}@)(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22))(?:\\.(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22)))*@(?:(?:(?!.*[^.]{64,})(?:(?:(?:xn--)?[a-z0-9]+(?:-[a-z0-9]+)*\\.){1,126}){1,}(?:(?:[a-z][a-z0-9]*)|(?:(?:xn--)[a-z0-9]+))(?:-[a-z0-9]+)*)|(?:\\[(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){7})|(?:(?!(?:.*[a-f0-9][:\\]]){7,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?)))|(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){5}:)|(?:(?!(?:.*[a-f0-9]:){5,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3}:)?)))?(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))(?:\\.(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))){3}))\\]))$/,\n                      message: 'email only takes letters'\n                    }\n                  }),\n                  value: user.email,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Telefon\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_uErrors$phone = uErrors.phone) === null || _uErrors$phone === void 0 ? void 0 : _uErrors$phone.message,\n                children: [/*#__PURE__*/_jsxDEV(Selectbox, {\n                  className: \"bg-white\",\n                  data: telData,\n                  name: \"phone_typ\",\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'phone type is required'\n                    }\n                  }),\n                  value: user.phone_typ,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"tel\",\n                  name: \"phone\",\n                  maxLength: \"9\",\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'phone is required'\n                    },\n                    pattern: {\n                      value: /^\\(?(51|60|70|77|50|55)\\)?(\\s+)?[0-9]{3}-?[0-9]{2}-?[0-9]{2}$/,\n                      message: 'phone is not correct format'\n                    },\n                    maxLength: {\n                      value: 9,\n                      message: 'phone must be 9 digits'\n                    }\n                  }),\n                  value: user.phone,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Sexsiyyet vesiqesinin seriya nomresi\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_uErrors$serial = uErrors.serial) === null || _uErrors$serial === void 0 ? void 0 : _uErrors$serial.message,\n                children: [/*#__PURE__*/_jsxDEV(Selectbox, {\n                  onChange: function onChange(ev) {\n                    setCheckSerial(ev.target.value);\n                  },\n                  className: \"bg-white\",\n                  data: [{\n                    id: 'AA',\n                    name: 'AA'\n                  }, {\n                    id: 'AZE',\n                    name: 'AZE'\n                  }]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"serial\",\n                  maxLength: checkSerial === 'AA' ? '7' : '8',\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'serial number is required'\n                    },\n                    maxLength: {\n                      value: checkSerial === 'AA' ? 7 : 8,\n                      message: 'serial number is not correct'\n                    }\n                  }),\n                  value: user.serial,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Cins\",\n                bodyClass: \"\",\n                className: \"w-50 pr-xs\",\n                children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n                  text: \"Kisi\",\n                  name: \"gender\",\n                  id: \"male\",\n                  value: \"M\",\n                  Ref: uRegister(),\n                  checked: user.gender === 'M' ? true : false,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n                  text: \"Qadin\",\n                  name: \"gender\",\n                  id: \"female\",\n                  value: \"F\",\n                  Ref: uRegister(),\n                  checked: user.gender === 'F' ? true : false,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"FIN\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_uErrors$fin = uErrors.fin) === null || _uErrors$fin === void 0 ? void 0 : _uErrors$fin.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"fin\",\n                  maxLength: \"7\",\n                  minLength: \"7\",\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'fin number is required'\n                    },\n                    maxLength: {\n                      value: 7,\n                      message: 'maximum 7 digits is required'\n                    },\n                    minLength: {\n                      value: 7,\n                      message: 'minimum 7 digits is required'\n                    }\n                  }),\n                  value: user.fin,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Milliy\\u0259t\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_uErrors$nationality = uErrors.nationality) === null || _uErrors$nationality === void 0 ? void 0 : _uErrors$nationality.message,\n                children: /*#__PURE__*/_jsxDEV(Selectbox, {\n                  data: [{\n                    id: 'Azerbaijan',\n                    name: 'Azerbaijan'\n                  }, {\n                    id: 'Foreign',\n                    name: 'Foreign'\n                  }],\n                  name: \"nationality\",\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'nationality is required'\n                    }\n                  }),\n                  value: user.nationality,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Do\\u011Fum tarixi\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_uErrors$birthday = uErrors.birthday) === null || _uErrors$birthday === void 0 ? void 0 : _uErrors$birthday.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"date\",\n                  name: \"birthday\",\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'birthday is required'\n                    }\n                  }),\n                  value: user.birthday,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"\\xDCnvan\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_uErrors$address = uErrors.address) === null || _uErrors$address === void 0 ? void 0 : _uErrors$address.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"address\",\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'address  is required'\n                    }\n                  }),\n                  value: user.address,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            className: \"mt-sm\",\n            style: {\n              justifyContent: 'flex-end'\n            },\n            children: /*#__PURE__*/_jsxDEV(ButtonComponent, {\n              className: \"w-25\",\n              label: \"Melumati yenile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"bg-white p-sm\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          text: \"Sifreni yenile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(resetPassword),\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"bg-bg\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexWrap: 'wrap'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"K\\xF6hn\\u0259 \\u015Fifr\\u0259\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$old_password = errors.old_password) === null || _errors$old_password === void 0 ? void 0 : _errors$old_password.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"password\",\n                  name: \"old_password\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'password is required'\n                    },\n                    pattern: {\n                      value: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n                      message: 'password is not valid'\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Yeni sifre\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$new_password = errors.new_password) === null || _errors$new_password === void 0 ? void 0 : _errors$new_password.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"password\",\n                  name: \"new_password\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'password is required'\n                    },\n                    pattern: {\n                      value: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n                      message: 'password is not valid'\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Yeni sifreni terkrar\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$new_password_ = errors.new_password_confirmation) === null || _errors$new_password_ === void 0 ? void 0 : _errors$new_password_.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"password\",\n                  name: \"new_password_confirmation\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'password is required'\n                    },\n                    validate: function validate(value) {\n                      return value === password.current || 'password is not match';\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            className: \"mt-sm\",\n            style: {\n              justifyContent: 'flex-end'\n            },\n            children: /*#__PURE__*/_jsxDEV(ButtonComponent, {\n              className: \"w-25\",\n              label: \"Sifreni deyis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserInfo, \"po84kFvCBg1fqkCHx0jycJgeMdA=\", false, function () {\n  return [useRouter, useForm, useForm];\n});\n\n_c = UserInfo;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    entry: state.entry\n  };\n};\n\nvar mapDispatchToProps = {\n  UpdateUser: UpdateUser\n};\nexport default connect(mapStateToProps)( /*#__PURE__*/memo(UserInfo));\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"sources":["/Users/naibtahmazli/Documents/166kargo/pages/user-info.js"],"names":["axios","router","useRouter","React","memo","useRef","useState","useForm","connect","Swal","AsideMenu","Aside","ButtonComponent","Card","FromGroup","Input","Main","Page","RadioButton","Selectbox","UpdateUser","telData","id","name","UserInfo","props","entry","isLoged","push","height","checkSerial","setCheckSerial","user","phone","slice","setUser","locale","locales","defaultLocale","register","errors","handleSubmit","watch","uRegister","uErrors","uHandleSubmit","password","current","resetPassword","data","put","process","env","NEXT_PUBLIC_API_URL","headers","accessToken","then","res","fire","title","text","message","icon","confirmButtonText","error","console","log","updateUserData","newData","phone_typ","birthday","split","reverse","join","handleChange","ev","target","value","display","flexWrap","firstname","required","pattern","lastname","email","maxLength","serial","gender","fin","minLength","nationality","address","justifyContent","old_password","new_password","new_password_confirmation","validate","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport router, { useRouter } from \"next/router\";\nimport React, { memo, useRef, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport AsideMenu from \"../components/aside-menu/index\";\nimport Aside from '../components/aside/aside';\nimport ButtonComponent from \"../components/button/index\";\nimport Card from \"../components/card/card\";\nimport FromGroup from \"../components/form-group/form-group\";\nimport Input from \"../components/input/input\";\nimport Main from '../components/main/main';\nimport Page from \"../components/page/page\";\nimport RadioButton from \"../components/radio-button/radio-button\";\nimport Selectbox from \"../components/selectbox/selectbox\";\nimport { UpdateUser } from \"../redux/entry/entryActions\";\n\n\nconst telData = [\n  {id:'+994',name:'+994'}\n ]\n \nfunction UserInfo(props) {\n\n  if(!props.entry.isLoged){\n    router.push('/register');\n    return (\n        <div style={{height:'100vh'}}></div>\n    )\n  }\n  const [checkSerial, setCheckSerial] = useState('AA');\n  const [user, setUser] = useState({\n    ...props.entry.user.user,\n    phone: props.entry.user.user.phone.slice(4)\n  });\n\n  const { locale, locales, defaultLocale } = useRouter();\n  const {register,errors,handleSubmit,watch} = useForm();\n  const {register:uRegister,errors:uErrors,handleSubmit:uHandleSubmit} = useForm();\n\n  \n  const password = useRef();\n  const phone = useRef();\n\n  password.current = watch('new_password','');\n  phone.current = watch(\"phone_typ\",'');\n\n  const resetPassword = (data) => {\n    axios.put(`${process.env.NEXT_PUBLIC_API_URL}user/password?lan=${locale}`,data,{\n      headers: {\n          'content-type': 'application/json',\n          'accept':'application/json',\n          'authorization': `Bearer ${props.entry.user.accessToken}`\n        }\n    })\n    .then(async res => {\n       let data = await res;\n       Swal.fire({\n         title: 'Success!',\n         text: data.message,\n         icon: 'success',\n         confirmButtonText: 'OK',\n       })\n    })\n    .catch(error => {\n      console.log(error)\n     Swal.fire({\n       title: 'Error!',\n       text: error.message,\n       icon: 'error',\n       confirmButtonText: 'OK',\n     })\n    })\n  }\n\n  const updateUserData = (data) => {\n    let newData = {\n      ...data,\n      phone:data.phone_typ + data.phone,\n      birthday: data.birthday.split('-').reverse().join('-')\n    }\n\n     props.UpdateUser(`user?lan=${locale}`,newData,{\n      'content-type': 'application/json',\n      'accept':'application/json',\n      'authorization': `Bearer ${props.entry.user.accessToken}`\n    })\n\n  }\n\n  const handleChange = (ev) => {\n     let {name, value} = ev.target;\n     setUser({\n       ...user,\n       [name]: value\n     })\n  }\n\n\n\n    return (\n        <Page className='user-profile-page bg-bg pt-lg'>\n            <Aside className='mr-sm'>\n              <AsideMenu/>\n            </Aside>\n         <Main>\n         <Card className='bg-white p-sm br-lg'>\n          <Card.Header text='Sexsi melumatlar'/>\n          <form onSubmit={uHandleSubmit(updateUserData)}>\n          <Card.Body className='bg-bg'>\n            <div style={{display:'flex',flexWrap:'wrap'}}>\n                <FromGroup label='Ad' bodyClass='bg-white' className='w-50 pr-xs'\n                 error={uErrors.firstname?.message}\n                >\n                  <Input type='text' name='firstname'\n                    Ref={uRegister({\n                     required:{value:true, message:'name is required'},\n                     pattern:{value:'',message:'name only takes letters'}\n                   })}\n                     value={user.firstname}\n                     onChange={handleChange}\n                  />\n                </FromGroup>\n                <FromGroup label='Soyad' bodyClass='bg-white' className='w-50 pr-xs'\n                error={uErrors.lastname?.message}\n                >\n                  <Input type='text' name='lastname'\n                    Ref={uRegister({\n                      required:{value:true, message:'surname is required'},\n                      pattern:{value:'',message:'surname only takes letters'}\n                    })}  \n                    value={user.lastname}                \n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n                <FromGroup label='E-mail' bodyClass='bg-white' className='w-50 pr-xs'\n                error={uErrors.email?.message}\n                >\n                  <Input type='email' name='email'\n                     Ref={uRegister({\n                      required:{value:true, message:'email is required'},\n                      pattern:{value:/^(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){255,})(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){65,}@)(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22))(?:\\.(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22)))*@(?:(?:(?!.*[^.]{64,})(?:(?:(?:xn--)?[a-z0-9]+(?:-[a-z0-9]+)*\\.){1,126}){1,}(?:(?:[a-z][a-z0-9]*)|(?:(?:xn--)[a-z0-9]+))(?:-[a-z0-9]+)*)|(?:\\[(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){7})|(?:(?!(?:.*[a-f0-9][:\\]]){7,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?)))|(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){5}:)|(?:(?!(?:.*[a-f0-9]:){5,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3}:)?)))?(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))(?:\\.(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))){3}))\\]))$/,message:'email only takes letters'}\n                    })}\n                    value={user.email}\n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n                <FromGroup label='Telefon' bodyClass='bg-white' className='w-50 pr-xs'\n                error={uErrors.phone?.message}\n                >\n                  <Selectbox className='bg-white' data={telData}\n                   name='phone_typ'\n                   Ref={uRegister({\n                    required:{value:true, message:'phone type is required'},\n                  })}\n                     value={user.phone_typ} \n                     onChange={handleChange}\n                  />\n                  \n                  <Input type='tel' name='phone'\n                    maxLength='9'\n                     Ref={uRegister({\n                       required:{value:true, message:'phone is required'},\n                       pattern:{value:/^\\(?(51|60|70|77|50|55)\\)?(\\s+)?[0-9]{3}-?[0-9]{2}-?[0-9]{2}$/,message:'phone is not correct format'},\n                       maxLength:{value:9, message:'phone must be 9 digits'}\n                     })}\n                     value={user.phone}\n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n                <FromGroup label='Sexsiyyet vesiqesinin seriya nomresi' bodyClass='bg-white' className='w-50 pr-xs'\n                error={uErrors.serial?.message}\n                >\n                   <Selectbox onChange={(ev)=>{\n                     setCheckSerial(ev.target.value)\n                   }} className='bg-white' data={[{id:'AA',name:'AA'},{id:'AZE',name:'AZE'}]}/>\n                  <Input type='text' name='serial'\n                     maxLength={checkSerial==='AA' ? '7' : '8'}\n                     Ref={uRegister({\n                       required:{value:true, message:'serial number is required'},\n                       maxLength:{value: checkSerial==='AA' ? 7 : 8, message:'serial number is not correct'}\n                     })}\n                     value={user.serial}\n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n                 <FromGroup label='Cins' bodyClass=''  className='w-50 pr-xs'>\n                  <RadioButton text='Kisi' name='gender' id='male' value='M' \n                     Ref={uRegister()} \n                     checked={user.gender === 'M' ? true : false}\n                     onChange={handleChange}\n                  />\n                  \n                  <RadioButton text='Qadin' name='gender' id='female' value='F' \n                     Ref={uRegister()} \n                     checked={user.gender === 'F' ? true : false}\n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n                 <FromGroup label='FIN' bodyClass='bg-white' className='w-50 pr-xs'\n                error={uErrors.fin?.message}\n                >\n                  <Input type='text' name='fin'\n                     maxLength='7'\n                     minLength='7'\n                     Ref={uRegister({\n                       required:{value:true, message:'fin number is required'},\n                       maxLength:{value:7,message:'maximum 7 digits is required'},\n                       minLength:{value:7,message:'minimum 7 digits is required'}\n                     })} \n                     value={user.fin}\n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n\n                <FromGroup label='Milliyət' bodyClass='bg-white' className='w-50 pr-xs'\n                error={uErrors.nationality?.message}\n                >\n                  <Selectbox data={[{id:'Azerbaijan',name:'Azerbaijan'},{id:'Foreign',name:'Foreign'}]} name='nationality'\n                      Ref={uRegister({\n                       required:{value:true, message:'nationality is required'},\n                     })} \n                     value={user.nationality}\n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n\n                <FromGroup label='Doğum tarixi' bodyClass='bg-white' className='w-50 pr-xs'\n                error={uErrors.birthday?.message}\n                >\n                  <Input type='date' name='birthday'\n                     Ref={uRegister({\n                      required:{value:true, message:'birthday is required'},\n                    })} \n                    value={user.birthday}\n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n                <FromGroup label='Ünvan' bodyClass='bg-white' className='w-50 pr-xs'\n                error={uErrors.address?.message}\n                >\n                  <Input type='text' name='address'\n                    Ref={uRegister({\n                      required:{value:true, message:'address  is required'},\n                    })}\n                    value={user.address}\n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n            </div>\n          </Card.Body>\n            <Card.Footer className='mt-sm' style={{justifyContent:'flex-end'}}>\n              <ButtonComponent className='w-25'  label='Melumati yenile'/>\n            </Card.Footer>\n            </form>\n         </Card>\n\n         <Card className='bg-white p-sm'>\n          <Card.Header text='Sifreni yenile'/>\n          <form onSubmit={handleSubmit(resetPassword)}>\n          <Card.Body className='bg-bg'>\n            <div style={{display:'flex',flexWrap:'wrap'}}>\n                <FromGroup label='Köhnə şifrə' bodyClass='bg-white' className='w-50 pr-xs'\n                  error={errors.old_password?.message}\n                >\n                  <Input type='password' name='old_password'\n                     Ref={register({\n                      required:{value:true,message:'password is required'},\n                      pattern:{value:/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, message:'password is not valid'}\n                    })}\n                  />\n                </FromGroup>\n                <FromGroup label='Yeni sifre' bodyClass='bg-white' className='w-50 pr-xs'\n                  error={errors.new_password?.message}\n                >\n                  <Input type='password' name='new_password'\n                     Ref={register({\n                      required:{value:true,message:'password is required'},\n                      pattern:{value:/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, message:'password is not valid'}\n                    })}\n                  />\n                </FromGroup>\n                <FromGroup label='Yeni sifreni terkrar' bodyClass='bg-white' className='w-50 pr-xs'\n                  error={errors.new_password_confirmation?.message}\n\n                >\n                  <Input type='password' name='new_password_confirmation'\n                     Ref={register({\n                      required:{value:true,message:'password is required'},\n                      validate: value =>\n                        value === password.current || 'password is not match'\n                    })}\n                  />\n                </FromGroup>\n            </div>\n          </Card.Body>\n          <Card.Footer className='mt-sm' style={{justifyContent:'flex-end'}}>\n              <ButtonComponent className='w-25' label='Sifreni deyis'/>\n            </Card.Footer>\n          </form>\n         </Card>\n            </Main>\n        </Page>\n    )\n}\n\nconst mapStateToProps = state => ({\n  entry: state.entry\n});\n\nconst mapDispatchToProps = {\n  UpdateUser\n}\nexport default connect(mapStateToProps)(memo(UserInfo))\n"]},"metadata":{},"sourceType":"module"}