{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/naibtahmazli/Documents/166kargo/pages/user-info.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport AsideMenu from \"../components/aside-menu/index\";\nimport Aside from '../components/aside/aside';\nimport ButtonComponent from \"../components/button/index\";\nimport Card from \"../components/card/card\";\nimport FromGroup from \"../components/form-group/form-group\";\nimport Input from \"../components/input/input\";\nimport Main from '../components/main/main';\nimport Page from \"../components/page/page\";\nimport RadioButton from \"../components/radio-button/radio-button\";\nimport Redirect from \"../components/redirect/redirect\";\nimport Selectbox from \"../components/selectbox/selectbox\";\nimport { UpdateUser } from \"../redux/entry/entryActions\";\nconst telData = [{\n  id: '+994',\n  name: '+994'\n}];\n\nfunction UserInfo(props) {\n  var _uErrors$firstname, _uErrors$lastname, _uErrors$email, _uErrors$phone, _uErrors$serial, _uErrors$fin, _uErrors$nationality, _uErrors$birthday, _uErrors$address, _errors$old_password, _errors$new_password, _errors$new_password_;\n\n  if (!props.entry.isLoged) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  const {\n    0: checkSerial,\n    1: setCheckSerial\n  } = useState('AA');\n  const {\n    0: user,\n    1: setUser\n  } = useState(_objectSpread(_objectSpread({}, props.entry.user.user), {}, {\n    phone: props.entry.user.user.phone.slice(4)\n  }));\n  const {\n    locale,\n    locales,\n    defaultLocale\n  } = useRouter();\n  const {\n    register,\n    errors,\n    handleSubmit,\n    watch,\n    setError\n  } = useForm();\n  const {\n    register: uRegister,\n    errors: uErrors,\n    handleSubmit: uHandleSubmit,\n    setError: uSetError\n  } = useForm();\n  useEffect(() => {\n    for (let key in props.entry.errorMessages.errors) {\n      setError(key, {\n        message: props.entry.errorMessages.errors[key].join('\\n')\n      });\n      uSetError(key, {\n        message: props.entry.errorMessages.errors[key].join('\\n')\n      });\n    }\n  }, [props.entry.errorMessages]);\n  const password = useRef();\n  const phone = useRef();\n  password.current = watch('new_password', '');\n  phone.current = watch(\"phone_typ\", '');\n\n  const resetPassword = data => {\n    axios.put(`${process.env.NEXT_PUBLIC_API_URL}user/password?lan=${locale}`, data, {\n      headers: {\n        'content-type': 'application/json',\n        'accept': 'application/json',\n        'authorization': `Bearer ${props.entry.user.accessToken}`\n      }\n    }).then(async res => {\n      let data = await res;\n      Swal.fire({\n        title: 'Success!',\n        text: data.message,\n        icon: 'success',\n        confirmButtonText: 'OK'\n      });\n    }).catch(error => {\n      console.log(error);\n      Swal.fire({\n        title: 'Error!',\n        text: error.message,\n        icon: 'error',\n        confirmButtonText: 'OK'\n      });\n    });\n  };\n\n  const updateUserData = data => {\n    let newData = _objectSpread(_objectSpread({}, data), {}, {\n      phone: data.phone_typ + data.phone,\n      birthday: data.birthday.split('-').reverse().join('-')\n    });\n\n    props.UpdateUser(`user?lan=${locale}`, newData, {\n      'content-type': 'application/json',\n      'accept': 'application/json',\n      'authorization': `Bearer ${props.entry.user.accessToken}`\n    });\n  };\n\n  const handleChange = ev => {\n    let {\n      name,\n      value\n    } = ev.target;\n    setUser(_objectSpread(_objectSpread({}, user), {}, {\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    className: \"user-profile-page bg-bg pt-lg pb-lg\",\n    children: [/*#__PURE__*/_jsxDEV(Aside, {\n      className: \"mr-sm\",\n      children: /*#__PURE__*/_jsxDEV(AsideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      className: \"mobile__color\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"bg-white p-sm br-lg\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          text: \"\\u015E\\u0259xsi melumatlar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: uHandleSubmit(updateUserData),\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"bg-bg\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex__column\",\n              style: {\n                display: 'flex',\n                flexWrap: 'wrap'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Ad\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_uErrors$firstname = uErrors.firstname) === null || _uErrors$firstname === void 0 ? void 0 : _uErrors$firstname.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"firstname\",\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'name is required'\n                    },\n                    pattern: {\n                      value: '',\n                      message: 'name only takes letters'\n                    }\n                  }),\n                  value: user.firstname,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Soyad\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_uErrors$lastname = uErrors.lastname) === null || _uErrors$lastname === void 0 ? void 0 : _uErrors$lastname.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"lastname\",\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'surname is required'\n                    },\n                    pattern: {\n                      value: '',\n                      message: 'surname only takes letters'\n                    }\n                  }),\n                  value: user.lastname,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"E-mail\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_uErrors$email = uErrors.email) === null || _uErrors$email === void 0 ? void 0 : _uErrors$email.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"email\",\n                  name: \"email\",\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'email is required'\n                    },\n                    pattern: {\n                      value: /^(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){255,})(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){65,}@)(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22))(?:\\.(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22)))*@(?:(?:(?!.*[^.]{64,})(?:(?:(?:xn--)?[a-z0-9]+(?:-[a-z0-9]+)*\\.){1,126}){1,}(?:(?:[a-z][a-z0-9]*)|(?:(?:xn--)[a-z0-9]+))(?:-[a-z0-9]+)*)|(?:\\[(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){7})|(?:(?!(?:.*[a-f0-9][:\\]]){7,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?)))|(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){5}:)|(?:(?!(?:.*[a-f0-9]:){5,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3}:)?)))?(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))(?:\\.(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))){3}))\\]))$/,\n                      message: 'email only takes letters'\n                    }\n                  }),\n                  value: user.email,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Telefon\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_uErrors$phone = uErrors.phone) === null || _uErrors$phone === void 0 ? void 0 : _uErrors$phone.message,\n                children: [/*#__PURE__*/_jsxDEV(Selectbox, {\n                  className: \"bg-white\",\n                  data: telData,\n                  name: \"phone_typ\",\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'phone type is required'\n                    }\n                  }),\n                  value: user.phone_typ,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"tel\",\n                  name: \"phone\",\n                  maxLength: \"9\",\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'phone is required'\n                    },\n                    pattern: {\n                      value: /^\\(?(51|60|70|77|50|55)\\)?(\\s+)?[0-9]{3}-?[0-9]{2}-?[0-9]{2}$/,\n                      message: 'phone is not correct format'\n                    },\n                    maxLength: {\n                      value: 9,\n                      message: 'phone must be 9 digits'\n                    }\n                  }),\n                  value: user.phone,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Sexsiyyet vesiqesinin seriya nomresi\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_uErrors$serial = uErrors.serial) === null || _uErrors$serial === void 0 ? void 0 : _uErrors$serial.message,\n                children: [/*#__PURE__*/_jsxDEV(Selectbox, {\n                  onChange: ev => {\n                    //setCheckSerial(ev.target.value)\n                    handleChange(ev);\n                  },\n                  name: \"serial_type\",\n                  className: \"bg-white\",\n                  data: [{\n                    id: 'AA',\n                    name: 'AA'\n                  }, {\n                    id: 'AZE',\n                    name: 'AZE'\n                  }],\n                  value: user.serial_type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"serial\",\n                  maxLength: checkSerial === 'AA' ? '7' : '8',\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'serial number is required'\n                    },\n                    maxLength: {\n                      value: checkSerial === 'AA' ? 7 : 8,\n                      message: 'serial number is not correct'\n                    }\n                  }),\n                  value: user.serial,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Cins\",\n                bodyClass: \"\",\n                className: \"w-50 pr-xs mb-sm\",\n                children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n                  text: \"Kisi\",\n                  name: \"gender\",\n                  id: \"male\",\n                  value: \"M\",\n                  Ref: uRegister(),\n                  checked: user.gender === 'M' ? true : false,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n                  text: \"Qadin\",\n                  name: \"gender\",\n                  id: \"female\",\n                  value: \"F\",\n                  Ref: uRegister(),\n                  checked: user.gender === 'F' ? true : false,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"FIN\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_uErrors$fin = uErrors.fin) === null || _uErrors$fin === void 0 ? void 0 : _uErrors$fin.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"fin\",\n                  maxLength: \"7\",\n                  minLength: \"7\",\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'fin number is required'\n                    },\n                    maxLength: {\n                      value: 7,\n                      message: 'maximum 7 digits is required'\n                    },\n                    minLength: {\n                      value: 7,\n                      message: 'minimum 7 digits is required'\n                    }\n                  }),\n                  value: user.fin,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Milliy\\u0259t\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_uErrors$nationality = uErrors.nationality) === null || _uErrors$nationality === void 0 ? void 0 : _uErrors$nationality.message,\n                children: /*#__PURE__*/_jsxDEV(Selectbox, {\n                  data: [{\n                    id: 'Azerbaijan',\n                    name: 'Azerbaijan'\n                  }, {\n                    id: 'Foreign',\n                    name: 'Foreign'\n                  }],\n                  name: \"nationality\",\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'nationality is required'\n                    }\n                  }),\n                  value: user.nationality,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Do\\u011Fum tarixi\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_uErrors$birthday = uErrors.birthday) === null || _uErrors$birthday === void 0 ? void 0 : _uErrors$birthday.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"date\",\n                  name: \"birthday\",\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'birthday is required'\n                    }\n                  }),\n                  value: user.birthday,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"\\xDCnvan\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_uErrors$address = uErrors.address) === null || _uErrors$address === void 0 ? void 0 : _uErrors$address.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"address\",\n                  Ref: uRegister({\n                    required: {\n                      value: true,\n                      message: 'address  is required'\n                    }\n                  }),\n                  value: user.address,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            className: \"mt-sm\",\n            style: {\n              justifyContent: 'flex-end'\n            },\n            children: /*#__PURE__*/_jsxDEV(ButtonComponent, {\n              className: \"w-25\",\n              label: \"Melumati yenile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"bg-white p-sm\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          text: \"Sifreni yenile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(resetPassword),\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"bg-bg\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexWrap: 'wrap'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"K\\xF6hn\\u0259 \\u015Fifr\\u0259\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_errors$old_password = errors.old_password) === null || _errors$old_password === void 0 ? void 0 : _errors$old_password.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"password\",\n                  name: \"old_password\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'password is required'\n                    },\n                    pattern: {\n                      value: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n                      message: 'password is not valid'\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Yeni sifre\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_errors$new_password = errors.new_password) === null || _errors$new_password === void 0 ? void 0 : _errors$new_password.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"password\",\n                  name: \"new_password\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'password is required'\n                    },\n                    pattern: {\n                      value: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n                      message: 'password is not valid'\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Yeni sifreni terkrar\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs mb-sm\",\n                error: (_errors$new_password_ = errors.new_password_confirmation) === null || _errors$new_password_ === void 0 ? void 0 : _errors$new_password_.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"password\",\n                  name: \"new_password_confirmation\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'password is required'\n                    },\n                    validate: value => value === password.current || 'password is not match'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            className: \"mt-sm\",\n            style: {\n              justifyContent: 'flex-end'\n            },\n            children: /*#__PURE__*/_jsxDEV(ButtonComponent, {\n              className: \"w-25\",\n              label: \"Sifreni deyis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n\nconst mapStateToProps = state => ({\n  entry: state.entry\n});\n\nconst mapDispatchToProps = {\n  UpdateUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)( /*#__PURE__*/memo(UserInfo));","map":{"version":3,"sources":["/Users/naibtahmazli/Documents/166kargo/pages/user-info.js"],"names":["axios","useRouter","React","memo","useEffect","useRef","useState","useForm","connect","Swal","AsideMenu","Aside","ButtonComponent","Card","FromGroup","Input","Main","Page","RadioButton","Redirect","Selectbox","UpdateUser","telData","id","name","UserInfo","props","entry","isLoged","checkSerial","setCheckSerial","user","setUser","phone","slice","locale","locales","defaultLocale","register","errors","handleSubmit","watch","setError","uRegister","uErrors","uHandleSubmit","uSetError","key","errorMessages","message","join","password","current","resetPassword","data","put","process","env","NEXT_PUBLIC_API_URL","headers","accessToken","then","res","fire","title","text","icon","confirmButtonText","catch","error","console","log","updateUserData","newData","phone_typ","birthday","split","reverse","handleChange","ev","value","target","display","flexWrap","firstname","required","pattern","lastname","email","maxLength","serial","serial_type","gender","fin","minLength","nationality","address","justifyContent","old_password","new_password","new_password_confirmation","validate","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport AsideMenu from \"../components/aside-menu/index\";\nimport Aside from '../components/aside/aside';\nimport ButtonComponent from \"../components/button/index\";\nimport Card from \"../components/card/card\";\nimport FromGroup from \"../components/form-group/form-group\";\nimport Input from \"../components/input/input\";\nimport Main from '../components/main/main';\nimport Page from \"../components/page/page\";\nimport RadioButton from \"../components/radio-button/radio-button\";\nimport Redirect from \"../components/redirect/redirect\";\nimport Selectbox from \"../components/selectbox/selectbox\";\nimport { UpdateUser } from \"../redux/entry/entryActions\";\n\n\nconst telData = [\n  {id:'+994',name:'+994'}\n ]\n \nfunction UserInfo(props) {\n\n  if(!props.entry.isLoged){\n    return <Redirect/>\n  }\n  const [checkSerial, setCheckSerial] = useState('AA');\n  const [user, setUser] = useState({\n    ...props.entry.user.user,\n    phone: props.entry.user.user.phone.slice(4)\n  });\n\n  const { locale, locales, defaultLocale } = useRouter();\n  const {register,errors,handleSubmit,watch,setError} = useForm();\n  const {register:uRegister,errors:uErrors,handleSubmit:uHandleSubmit,setError:uSetError} = useForm();\n\n  useEffect(() => {\n    for(let key in props.entry.errorMessages.errors){\n      setError(key,{message: props.entry.errorMessages.errors[key].join('\\n')})\n      uSetError(key,{message: props.entry.errorMessages.errors[key].join('\\n')})\n    }\n  },[props.entry.errorMessages])\n\n  const password = useRef();\n  const phone = useRef();\n\n  password.current = watch('new_password','');\n  phone.current = watch(\"phone_typ\",'');\n\n  const resetPassword = (data) => {\n    axios.put(`${process.env.NEXT_PUBLIC_API_URL}user/password?lan=${locale}`,data,{\n      headers: {\n          'content-type': 'application/json',\n          'accept':'application/json',\n          'authorization': `Bearer ${props.entry.user.accessToken}`\n        }\n    })\n    .then(async res => {\n       let data = await res;\n       Swal.fire({\n         title: 'Success!',\n         text: data.message,\n         icon: 'success',\n         confirmButtonText: 'OK',\n       })\n    })\n    .catch(error => {\n      console.log(error)\n     Swal.fire({\n       title: 'Error!',\n       text: error.message,\n       icon: 'error',\n       confirmButtonText: 'OK',\n     })\n    })\n  }\n\n  const updateUserData = (data) => {\n    let newData = {\n      ...data,\n      phone:data.phone_typ + data.phone,\n      birthday: data.birthday.split('-').reverse().join('-')\n    }\n\n     props.UpdateUser(`user?lan=${locale}`,newData,{\n      'content-type': 'application/json',\n      'accept':'application/json',\n      'authorization': `Bearer ${props.entry.user.accessToken}`\n    })\n\n  }\n\n  const handleChange = (ev) => {\n     let {name, value} = ev.target;\n     setUser({\n       ...user,\n       [name]: value\n     })\n  }\n\n\n\n    return (\n        <Page className='user-profile-page bg-bg pt-lg pb-lg'>\n            <Aside className='mr-sm'>\n              <AsideMenu/>\n            </Aside>\n         <Main className='mobile__color'>\n         <Card className='bg-white p-sm br-lg'>\n          <Card.Header text='Şəxsi melumatlar'/>\n          <form onSubmit={uHandleSubmit(updateUserData)}>\n          <Card.Body className='bg-bg'>\n            <div className='flex__column' style={{display:'flex',flexWrap:'wrap'}}>\n                <FromGroup label='Ad' bodyClass='bg-white' className='w-50 pr-xs mb-sm'\n                 error={uErrors.firstname?.message}\n                >\n                  <Input type='text' name='firstname'\n                    Ref={uRegister({\n                     required:{value:true, message:'name is required'},\n                     pattern:{value:'',message:'name only takes letters'}\n                   })}\n                     value={user.firstname}\n                     onChange={handleChange}\n                  />\n                </FromGroup>\n                <FromGroup label='Soyad' bodyClass='bg-white' className='w-50 pr-xs mb-sm'\n                error={uErrors.lastname?.message}\n                >\n                  <Input type='text' name='lastname'\n                    Ref={uRegister({\n                      required:{value:true, message:'surname is required'},\n                      pattern:{value:'',message:'surname only takes letters'}\n                    })}  \n                    value={user.lastname}                \n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n                <FromGroup label='E-mail' bodyClass='bg-white' className='w-50 pr-xs mb-sm'\n                error={uErrors.email?.message}\n                >\n                  <Input type='email' name='email'\n                     Ref={uRegister({\n                      required:{value:true, message:'email is required'},\n                      pattern:{value:/^(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){255,})(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){65,}@)(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22))(?:\\.(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22)))*@(?:(?:(?!.*[^.]{64,})(?:(?:(?:xn--)?[a-z0-9]+(?:-[a-z0-9]+)*\\.){1,126}){1,}(?:(?:[a-z][a-z0-9]*)|(?:(?:xn--)[a-z0-9]+))(?:-[a-z0-9]+)*)|(?:\\[(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){7})|(?:(?!(?:.*[a-f0-9][:\\]]){7,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?)))|(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){5}:)|(?:(?!(?:.*[a-f0-9]:){5,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3}:)?)))?(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))(?:\\.(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))){3}))\\]))$/,message:'email only takes letters'}\n                    })}\n                    value={user.email}\n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n                <FromGroup label='Telefon' bodyClass='bg-white' className='w-50 pr-xs mb-sm'\n                error={uErrors.phone?.message}\n                >\n                  <Selectbox \n                   className='bg-white' \n                   data={telData}\n                   name='phone_typ'\n                   Ref={uRegister({\n                    required:{value:true, message:'phone type is required'},\n                  })}\n                     value={user.phone_typ} \n                     onChange={handleChange}\n                  />\n                  \n                  <Input type='tel' name='phone'\n                    maxLength='9'\n                     Ref={uRegister({\n                       required:{value:true, message:'phone is required'},\n                       pattern:{value:/^\\(?(51|60|70|77|50|55)\\)?(\\s+)?[0-9]{3}-?[0-9]{2}-?[0-9]{2}$/,message:'phone is not correct format'},\n                       maxLength:{value:9, message:'phone must be 9 digits'}\n                     })}\n                     value={user.phone}\n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n                <FromGroup label='Sexsiyyet vesiqesinin seriya nomresi' bodyClass='bg-white' className='w-50 pr-xs mb-sm'\n                error={uErrors.serial?.message}\n                >\n                   <Selectbox \n                     onChange={(ev)=>{\n                     //setCheckSerial(ev.target.value)\n                     handleChange(ev)\n                     }}\n                     name='serial_type' \n                     className='bg-white' \n                     data={[{id:'AA',name:'AA'},{id:'AZE',name:'AZE'}]}\n                     value={user.serial_type}  \n                     />\n                  <Input type='text' name='serial'\n                     maxLength={checkSerial==='AA' ? '7' : '8'}\n                     Ref={uRegister({\n                       required:{value:true, message:'serial number is required'},\n                       maxLength:{value: checkSerial==='AA' ? 7 : 8, message:'serial number is not correct'}\n                     })}\n                     value={user.serial}\n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n                 <FromGroup label='Cins' bodyClass=''  className='w-50 pr-xs mb-sm'>\n                  <RadioButton text='Kisi' name='gender' id='male' value='M' \n                     Ref={uRegister()} \n                     checked={user.gender === 'M' ? true : false}\n                     onChange={handleChange}\n                  />\n                  \n                  <RadioButton text='Qadin' name='gender' id='female' value='F' \n                     Ref={uRegister()} \n                     checked={user.gender === 'F' ? true : false}\n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n                 <FromGroup label='FIN' bodyClass='bg-white' className='w-50 pr-xs mb-sm'\n                error={uErrors.fin?.message}\n                >\n                  <Input type='text' name='fin'\n                     maxLength='7'\n                     minLength='7'\n                     Ref={uRegister({\n                       required:{value:true, message:'fin number is required'},\n                       maxLength:{value:7,message:'maximum 7 digits is required'},\n                       minLength:{value:7,message:'minimum 7 digits is required'}\n                     })} \n                     value={user.fin}\n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n\n                <FromGroup label='Milliyət' bodyClass='bg-white' className='w-50 pr-xs mb-sm'\n                error={uErrors.nationality?.message}\n                >\n                  <Selectbox data={[{id:'Azerbaijan',name:'Azerbaijan'},{id:'Foreign',name:'Foreign'}]} name='nationality'\n                      Ref={uRegister({\n                       required:{value:true, message:'nationality is required'},\n                     })} \n                     value={user.nationality}\n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n\n                <FromGroup label='Doğum tarixi' bodyClass='bg-white' className='w-50 pr-xs mb-sm'\n                error={uErrors.birthday?.message}\n                >\n                  <Input type='date' name='birthday'\n                     Ref={uRegister({\n                      required:{value:true, message:'birthday is required'},\n                    })} \n                    value={user.birthday}\n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n                <FromGroup label='Ünvan' bodyClass='bg-white' className='w-50 pr-xs mb-sm'\n                error={uErrors.address?.message}\n                >\n                  <Input type='text' name='address'\n                    Ref={uRegister({\n                      required:{value:true, message:'address  is required'},\n                    })}\n                    value={user.address}\n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n            </div>\n          </Card.Body>\n            <Card.Footer className='mt-sm' style={{justifyContent:'flex-end'}}>\n              <ButtonComponent className='w-25'  label='Melumati yenile'/>\n            </Card.Footer>\n            </form>\n         </Card>\n\n         <Card className='bg-white p-sm'>\n          <Card.Header text='Sifreni yenile'/>\n          <form onSubmit={handleSubmit(resetPassword)}>\n          <Card.Body className='bg-bg'>\n            <div style={{display:'flex',flexWrap:'wrap'}}>\n                <FromGroup label='Köhnə şifrə' bodyClass='bg-white' className='w-50 pr-xs mb-sm'\n                  error={errors.old_password?.message}\n                >\n                  <Input type='password' name='old_password'\n                     Ref={register({\n                      required:{value:true,message:'password is required'},\n                      pattern:{value:/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, message:'password is not valid'}\n                    })}\n                  />\n                </FromGroup>\n                <div className=\"w-50\"></div>\n\n                <FromGroup label='Yeni sifre' bodyClass='bg-white' className='w-50 pr-xs mb-sm'\n                  error={errors.new_password?.message}\n                >\n                  <Input type='password' name='new_password'\n                     Ref={register({\n                      required:{value:true,message:'password is required'},\n                      pattern:{value:/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, message:'password is not valid'}\n                    })}\n                  />\n                </FromGroup>\n\n                <FromGroup label='Yeni sifreni terkrar' bodyClass='bg-white' className='w-50 pr-xs mb-sm'\n                  error={errors.new_password_confirmation?.message}\n\n                >\n                  <Input type='password' name='new_password_confirmation'\n                     Ref={register({\n                      required:{value:true,message:'password is required'},\n                      validate: value =>\n                        value === password.current || 'password is not match'\n                    })}\n                  />\n                </FromGroup>\n\n            </div>\n          </Card.Body>\n          <Card.Footer className='mt-sm' style={{justifyContent:'flex-end'}}>\n              <ButtonComponent className='w-25' label='Sifreni deyis'/>\n            </Card.Footer>\n          </form>\n         </Card>\n            </Main>\n        </Page>\n    )\n}\n\nconst mapStateToProps = state => ({\n  entry: state.entry\n});\n\nconst mapDispatchToProps = {\n  UpdateUser\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(memo(UserInfo))\n"]},"metadata":{},"sourceType":"module"}