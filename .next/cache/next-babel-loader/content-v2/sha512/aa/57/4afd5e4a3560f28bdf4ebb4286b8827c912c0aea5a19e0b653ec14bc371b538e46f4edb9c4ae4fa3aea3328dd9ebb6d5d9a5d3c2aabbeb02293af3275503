{"ast":null,"code":"import _regeneratorRuntime from \"/Users/naibtahmazli/Documents/166kargo/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/naibtahmazli/Documents/166kargo/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport router from \"next/router\";\nimport Swal from \"sweetalert2\";\nimport { login, logout, register, updateUser } from \"./actions\";\nexport var Login = function Login(url, data) {\n  var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return function (dispatch) {\n    console.log(url);\n    axios.post(\"\".concat(process.env.NEXT_PUBLIC_API_URL).concat(url), data, {\n      headers: headers\n    }).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(res) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return res.data;\n\n              case 2:\n                data = _context.sent;\n                dispatch(login(data));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }())[\"catch\"](function (errors) {\n      dispatch(login({\n        isError: true,\n        errors: errors.response.data\n      }));\n    });\n  };\n};\nexport var UserRegister = function UserRegister(url, data) {\n  var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return function (dispatch) {\n    console.log(url);\n    axios.post(\"\".concat(process.env.NEXT_PUBLIC_API_URL).concat(url), data, {\n      headers: headers\n    }).then( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(res) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                Swal.fire({\n                  text: 'Əməliyyat uğurla tamamlandı',\n                  icon: 'success',\n                  confirmButtonText: 'OK'\n                }).then(function (res) {\n                  if (res.isConfirmed) {\n                    router.push('/');\n                  }\n                });\n                _context2.next = 3;\n                return res.data;\n\n              case 3:\n                data = _context2.sent;\n                dispatch(register(data));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }())[\"catch\"](function (err) {\n      dispatch(register({\n        isError: true,\n        errors: err.response.data\n      }));\n    });\n  };\n};\nexport var LogOut = function LogOut() {\n  return function (dispatch) {\n    dispatch(logout());\n  };\n};\nexport var UpdateUser = function UpdateUser(data) {\n  return function (dispatch) {\n    dispatch(updateUser(data));\n  };\n};","map":{"version":3,"sources":["/Users/naibtahmazli/Documents/166kargo/redux/entry/EntryActions.js"],"names":["axios","router","Swal","login","logout","register","updateUser","Login","url","data","headers","dispatch","console","log","post","process","env","NEXT_PUBLIC_API_URL","then","res","errors","isError","response","UserRegister","fire","text","icon","confirmButtonText","isConfirmed","push","err","LogOut","UpdateUser"],"mappings":"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","sourcesContent":["\nimport axios from \"axios\";\nimport router from \"next/router\";\nimport Swal from \"sweetalert2\";\nimport { login, logout, register, updateUser } from \"./actions\";\n\nexport const Login = (url,data,headers = {}) => dispatch => {\n    console.log(url)\n    axios.post(`${process.env.NEXT_PUBLIC_API_URL}${url}`,data,{\n        headers:headers,\n      })\n      .then(async res => {\n        let data = await res.data;\n        dispatch(login(data))\n      }).catch(errors => {\n        dispatch(login({isError:true,errors:errors.response.data}))\n      })\n}\n\n\nexport const UserRegister = (url,data,headers = {}) => dispatch => {\n  console.log(url)\n  axios.post(`${process.env.NEXT_PUBLIC_API_URL}${url}`,data,{\n      headers:headers,\n    })\n    .then(async res => {\n      Swal.fire({\n        text: 'Əməliyyat uğurla tamamlandı',\n        icon: 'success',\n        confirmButtonText: 'OK',\n      }).then(res => {\n        if(res.isConfirmed){\n          router.push('/')\n        }\n      })\n      let data = await res.data;\n      dispatch(register(data))\n    }).catch(err => {\n      dispatch(register({isError:true,errors:err.response.data}))\n    })\n}\n\nexport const LogOut = () => dispatch => {\n    dispatch(logout())\n}\n\nexport const UpdateUser = (data) => dispatch => {\n  dispatch(updateUser(data))\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}