{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { LOGIN, LOGOUT, REGISTER } from './actionTypes';\nconst initialState = {\n  user: {},\n  errorMessages: [],\n  isLoged: false\n};\n\nconst entryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      state = {\n        user: _objectSpread({}, action.payload),\n        isLoged: action.payload.err ? false : true\n      };\n      break;\n\n    case LOGOUT:\n      break;\n\n    case REGISTER:\n      break;\n\n    default:\n      state = _objectSpread({}, state);\n      break;\n  }\n\n  return state;\n};\n\nexport default entryReducer;","map":{"version":3,"sources":["/Users/naibtahmazli/Documents/166kargo/redux/entry/reducer.js"],"names":["LOGIN","LOGOUT","REGISTER","initialState","user","errorMessages","isLoged","entryReducer","state","action","type","payload","err"],"mappings":";;;;;;AAAA,SAEIA,KAFJ,EAGIC,MAHJ,EAIIC,QAJJ,QAKS,eALT;AAOA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAC,EADe;AAEpBC,EAAAA,aAAa,EAAC,EAFM;AAGpBC,EAAAA,OAAO,EAAC;AAHY,CAArB;;AAMA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKV,KAAL;AACGQ,MAAAA,KAAK,GAAG;AACNJ,QAAAA,IAAI,oBACCK,MAAM,CAACE,OADR,CADE;AAINL,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAAP,CAAeC,GAAf,GAAqB,KAArB,GAA6B;AAJhC,OAAR;AAMF;;AACD,SAAKX,MAAL;AACC;;AACD,SAAKC,QAAL;AACC;;AACD;AACCM,MAAAA,KAAK,qBAAQA,KAAR,CAAL;AACA;AAfF;;AAkBA,SAAOA,KAAP;AACD,CApBD;;AAsBA,eAAeD,YAAf","sourcesContent":["import\n  {\n    LOGIN,\n    LOGOUT,\n    REGISTER\n  } from './actionTypes';\n\nconst initialState = {\n user:{},\n errorMessages:[],\n isLoged:false\n}\n\nconst entryReducer = (state = initialState, action) => {\n  switch (action.type) {\n   case LOGIN:\n      state = {\n        user:{\n          ...action.payload,\n        },\n        isLoged: action.payload.err ? false : true ,\n      } \n    break;\n   case LOGOUT:\n    break; \n   case REGISTER:\n    break; \n   default:\n    state = { ...state }\n    break;\n  }\n\n  return state;\n}\n\nexport default entryReducer;"]},"metadata":{},"sourceType":"module"}