{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/naibtahmazli/Documents/166kargo/pages/register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Button from '../components/button';\nimport Card from '../components/card/card';\nimport FromGroup from '../components/form-group/form-group';\nimport Input from '../components/input/input';\nimport Page from '../components/page/page';\nimport RadioButton from '../components/radio-button/radio-button';\nimport Selectbox from '../components/selectbox/selectbox';\nimport Switch from \"../components/switch/switch\";\nvar telData = ['+994', '+992', '+995'];\n\nfunction Register() {\n  _s();\n\n  var _errors$name, _errors$surname, _errors$email, _errors$phone, _errors$birthday, _errors$serial, _errors$fin, _errors$nationality, _errors$address, _errors$tin, _errors$password, _errors$password_conf;\n\n  var _useState = useState(false),\n      isKorporative = _useState[0],\n      setisKorporative = _useState[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      reset = _useForm.reset;\n\n  var submit = function submit(data) {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    className: \"bg-bg register-page\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"mt-lg\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"bg-white br-sm mr-sm p-sm w-50\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          text: \"Qeydiyyat\",\n          endElelment: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"cardHeaderText pr-xs\",\n              children: \"Korporativ\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Switch, {\n              value: isKorporative,\n              onClick: function onClick(e) {\n                setisKorporative(e.target.checked);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"p-none\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap'\n            },\n            onSubmit: handleSubmit(submit),\n            children: [/*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"Adiniz\",\n              bodyClass: \"bg-bg p-xs\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"name\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'name is required'\n                  },\n                  pattern: {\n                    value: '',\n                    message: 'name only takes letters'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"Soyadiniz\",\n              bodyClass: \"bg-bg p-xs\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$surname = errors.surname) === null || _errors$surname === void 0 ? void 0 : _errors$surname.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"surname\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'surname is required'\n                  },\n                  pattern: {\n                    value: '',\n                    message: 'surname only takes letters'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"E-mail\",\n              bodyClass: \"bg-bg p-xs\",\n              className: \"w-50 pr-xs\",\n              error: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\",\n                name: \"email\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'email is required'\n                  },\n                  pattern: {\n                    value: '',\n                    message: 'email only takes letters'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"Telefon\",\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$phone = errors.phone) === null || _errors$phone === void 0 ? void 0 : _errors$phone.message,\n              children: [/*#__PURE__*/_jsxDEV(Selectbox, {\n                className: \"bg-white\",\n                data: telData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"tel\",\n                name: \"phone\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'phone is required'\n                  },\n                  pattern: {\n                    value: '',\n                    message: 'phone only takes letters'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"Cins\",\n              bodyClass: \"\",\n              className: \"w-50 pr-xs mb-xs\",\n              children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n                text: \"Kisi\",\n                name: \"gender\",\n                id: \"male\",\n                value: \"male\",\n                Ref: register()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n                text: \"Qadin\",\n                name: \"gender\",\n                id: \"female\",\n                value: \"female\",\n                Ref: register()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 12\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"Dogum tarixi\",\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$birthday = errors.birthday) === null || _errors$birthday === void 0 ? void 0 : _errors$birthday.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                className: \"\",\n                name: \"birthday\",\n                type: \"date\",\n                format: \"dd/mm/yyyy\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'birthday is required'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"S/v seriya nomresi\",\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$serial = errors.serial) === null || _errors$serial === void 0 ? void 0 : _errors$serial.message,\n              children: [/*#__PURE__*/_jsxDEV(Selectbox, {\n                onChange: function onChange() {},\n                className: \"bg-white\",\n                data: ['AA', 'AZE']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"number\",\n                name: \"serial\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'serial number is required'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"S/V Fin kodu\",\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$fin = errors.fin) === null || _errors$fin === void 0 ? void 0 : _errors$fin.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"fin\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'fin number is required'\n                  },\n                  maxLength: {\n                    value: 7,\n                    message: 'minimum 7 digits is required'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"Milliyet\",\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$nationality = errors.nationality) === null || _errors$nationality === void 0 ? void 0 : _errors$nationality.message,\n              children: /*#__PURE__*/_jsxDEV(Selectbox, {\n                className: \"w-100 m-none\",\n                name: \"nationality\",\n                data: ['Azerbaijan', 'Foreign'],\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'nationality is required'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"\\xDCnvan\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$address = errors.address) === null || _errors$address === void 0 ? void 0 : _errors$address.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                name: \"address\",\n                type: \"text\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'address  is required'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 10\n            }, this), isKorporative && /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"Voen\",\n              bodyClass: \"bg-bg\",\n              className: \"w-100 mb-xs\",\n              error: (_errors$tin = errors.tin) === null || _errors$tin === void 0 ? void 0 : _errors$tin.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"tin\",\n                Ref: isKorporative && register({\n                  required: {\n                    value: true,\n                    message: 'tin is required'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"\\u015Eifr\\u0259\",\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs\",\n              error: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                name: \"password\",\n                type: \"password\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'password is required'\n                  },\n                  pattern: {\n                    value: '',\n                    message: 'password is not valid'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: \"Sifrenin tekrari\",\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$password_conf = errors.password_confirmation) === null || _errors$password_conf === void 0 ? void 0 : _errors$password_conf.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                name: \"password_confirmation\",\n                type: \"password\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: 'password is required'\n                  },\n                  validate: function validate(value) {\n                    return value === password.current || 'password is not match';\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            className: \"mt-sm\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              label: \"Qeydiyyati tamamla\",\n              endElement: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-xs\",\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 31\n              }, this),\n              className: \"w-100\",\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-50\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"w-100 h-100 p-none\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pb-sm\",\n            children: \"Qeydiyyatda kecmekde centinlik cekirsizse videonu izleyin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"w-100\",\n            src: \"./assets/images/img1.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Register, \"czvmSWk4cPJbyN7E5LC+6rknwV0=\", false, function () {\n  return [useForm];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/naibtahmazli/Documents/166kargo/pages/register.js"],"names":["React","useState","useForm","Button","Card","FromGroup","Input","Page","RadioButton","Selectbox","Switch","telData","Register","isKorporative","setisKorporative","register","handleSubmit","errors","reset","submit","data","console","log","display","justifyContent","alignItems","e","target","checked","flexWrap","name","message","required","value","pattern","surname","email","phone","birthday","serial","fin","maxLength","nationality","address","tin","password","password_confirmation","validate","current"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport Button from '../components/button'\nimport Card from '../components/card/card'\nimport FromGroup from '../components/form-group/form-group'\nimport Input from '../components/input/input'\nimport Page from '../components/page/page'\nimport RadioButton from '../components/radio-button/radio-button'\nimport Selectbox from '../components/selectbox/selectbox'\nimport Switch from \"../components/switch/switch\"\n\n\n\nconst telData = [\n  '+994',\n  '+992',\n  '+995'\n ]\n\nfunction Register() {\n const [isKorporative, setisKorporative] = useState(false)\n const {register,handleSubmit,errors,reset} = useForm();\n\n const submit = (data) => {\n   console.log(data)\n }\n \n return (\n  <Page className='bg-bg register-page'>\n    <main className='mt-lg'>\n      <Card className='bg-white br-sm mr-sm p-sm w-50'>\n       <Card.Header text='Qeydiyyat' endElelment={\n       <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\n         <h3 className='cardHeaderText pr-xs'>Korporativ</h3>\n         <Switch value={isKorporative} onClick={(e)=>{\n          setisKorporative(e.target.checked)\n       }}/></div>}/>\n       <Card.Body className='p-none'>\n        <form style={{display:'flex',flexWrap:'wrap'}} onSubmit={handleSubmit(submit)} >\n         <FromGroup label='Adiniz' bodyClass='bg-bg p-xs' className='w-50 pr-xs mb-xs'\n           error={errors.name?.message}\n         >\n          <Input type='text' name='name'\n             Ref={register({\n               required:{value:true, message:'name is required'},\n               pattern:{value:'',message:'name only takes letters'}\n             })} \n           />\n         </FromGroup>\n         <FromGroup label='Soyadiniz' bodyClass='bg-bg p-xs' className='w-50 pr-xs mb-xs'\n           error={errors.surname?.message}\n         >\n          <Input type='text' name='surname'\n             Ref={register({\n              required:{value:true, message:'surname is required'},\n              pattern:{value:'',message:'surname only takes letters'}\n            })} \n          />\n         </FromGroup>\n         <FromGroup label='E-mail' bodyClass='bg-bg p-xs' className='w-50 pr-xs'\n           error={errors.email?.message}\n         >\n          <Input type='email' name='email' \n             Ref={register({\n              required:{value:true, message:'email is required'},\n              pattern:{value:'',message:'email only takes letters'}\n            })} \n          />\n         </FromGroup>\n         <FromGroup label='Telefon' bodyClass='bg-bg' className='w-50 pr-xs mb-xs'\n           error={errors.phone?.message}\n         >\n           <Selectbox className='bg-white' data={telData}/>\n          <Input type='tel' name='phone'\n             Ref={register({\n               required:{value:true, message:'phone is required'},\n               pattern:{value:'',message:'phone only takes letters'}\n             })} \n          />\n         </FromGroup>\n         <FromGroup label='Cins' bodyClass=''  className='w-50 pr-xs mb-xs'>\n           <RadioButton text='Kisi' name='gender' id='male' value='male' \n              Ref={register()} \n           />\n           <RadioButton text='Qadin' name='gender' id='female' value='female' \n              Ref={register()} \n           />\n         </FromGroup>\n         <FromGroup label='Dogum tarixi' bodyClass='bg-bg' className='w-50 pr-xs mb-xs'\n           error={errors.birthday?.message}\n         >\n           <Input className='' name='birthday' type='date' format='dd/mm/yyyy'\n               Ref={register({\n                required:{value:true, message:'birthday is required'},\n              })} \n           />\n         </FromGroup>\n         <FromGroup label='S/v seriya nomresi' bodyClass='bg-bg' className='w-50 pr-xs mb-xs' \n           error={errors.serial?.message}\n         >\n           <Selectbox onChange={()=>{}} className='bg-white' data={['AA','AZE']}/>\n          <Input type='number' name='serial'\n            Ref={register({\n              required:{value:true, message:'serial number is required'},\n            })} \n          />\n         </FromGroup>\n         <FromGroup label='S/V Fin kodu' bodyClass='bg-bg' className='w-50 pr-xs mb-xs' \n           error={errors.fin?.message}\n         >\n          <Input type='text' name='fin'\n            Ref={register({\n              required:{value:true, message:'fin number is required'},\n              maxLength:{value:7,message:'minimum 7 digits is required'}\n            })} \n          />\n         </FromGroup>\n         <FromGroup label='Milliyet' bodyClass='bg-bg' className='w-50 pr-xs mb-xs' \n           error={errors.nationality?.message}\n         >\n           <Selectbox className='w-100 m-none' name='nationality' data={['Azerbaijan','Foreign']}\n               Ref={register({\n                required:{value:true, message:'nationality is required'},\n              })} \n           />\n         </FromGroup>\n         <FromGroup label='Ünvan' className='w-50 pr-xs mb-xs'\n           error={errors.address?.message}\n         >\n           <Input name='address' type='text'\n              Ref={register({\n                required:{value:true, message:'address  is required'},\n              })} \n           />\n         </FromGroup>\n         {\n          isKorporative && \n         <FromGroup label='Voen' bodyClass='bg-bg' className='w-100 mb-xs'\n           error={errors.tin?.message}\n         >\n           <Input type='text' name='tin'\n              Ref={\n                isKorporative && \n                register({\n                  required:{value:true, message:'tin is required'},\n                })\n              }\n            />\n         </FromGroup>\n         }\n         <FromGroup label='Şifrə' bodyClass='bg-bg' className='w-50 pr-xs'\n           error={errors.password?.message}\n           \n         >\n           <Input name='password' type='password' \n             Ref={register({\n               required:{value:true,message:'password is required'},\n               pattern:{value:'', message:'password is not valid'}\n             })}\n           />\n         </FromGroup>\n         <FromGroup label='Sifrenin tekrari' bodyClass='bg-bg' className='w-50 pr-xs mb-xs'\n           error={errors.password_confirmation?.message} \n         >\n           <Input name='password_confirmation' type='password'\n              Ref={register({\n                required:{value:true,message:'password is required'},\n                validate: value => \n                  value === password.current || 'password is not match'\n              })}\n           />\n         </FromGroup>\n        </form>\n        <Card.Footer className='mt-sm'>\n          <Button label='Qeydiyyati tamamla' \n                  endElement={<span className='ml-xs'>&rarr;</span>} \n                  className='w-100'\n                  type='submit' \n          />\n        </Card.Footer>\n       </Card.Body>\n      </Card>\n      <Card className='w-50'>\n       <Card.Body className='w-100 h-100 p-none'>\n         <p className='pb-sm'>Qeydiyyatda kecmekde centinlik cekirsizse videonu izleyin</p>\n         {/* <video  poster='./assets/images/img1.png'>\n            </video> */}\n         <img className='w-100' src='./assets/images/img1.png'/>\n       </Card.Body>\n      </Card>\n    </main>\n  </Page>\n )\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}