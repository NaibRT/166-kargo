{"ast":null,"code":"import _defineProperty from \"/Users/naibtahmazli/Documents/166kargo/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/naibtahmazli/Documents/166kargo/pages/decleration.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport router, { useRouter } from \"next/router\";\nimport React, { memo, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport AsideMenu from \"../components/aside-menu/index\";\nimport Aside from '../components/aside/aside';\nimport ButtonComponent from \"../components/button/index\";\nimport Card from \"../components/card/card\";\nimport FromGroup from \"../components/form-group/form-group\";\nimport Input from \"../components/input/input\";\nimport Main from '../components/main/main';\nimport Page from \"../components/page/page\";\nimport Selectbox from \"../components/selectbox/selectbox\";\nvar telData = [{\n  id: 'Türkiyə',\n  name: 'Türkiyə'\n}];\n\nfunction Decleration(props) {\n  _s();\n\n  var _errors$country, _errors$count, _errors$tracking_ID, _errors$date, _errors$shop_name, _errors$product_name, _errors$main_group, _errors$sub_group, _errors$price, _errors$currency, _errors$invoice, _errors$note;\n\n  if (!props.entry.isLoged) {\n    router.push('/register');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  }\n\n  var _useState = useState('AA'),\n      checkSerial = _useState[0],\n      setCheckSerial = _useState[1];\n\n  var _useRouter = useRouter(),\n      locale = _useRouter.locale,\n      locales = _useRouter.locales,\n      defaultLocale = _useRouter.defaultLocale;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch;\n\n  var _useState2 = useState('AA'),\n      subCategories = _useState2[0],\n      setSubCategories = _useState2[1];\n\n  var handleChange = function handleChange(ev) {\n    var _ev$target = ev.target,\n        name = _ev$target.name,\n        value = _ev$target.value;\n    setUser(_objectSpread(_objectSpread({}, user), {}, _defineProperty({}, name, value)));\n  };\n\n  var submit = function submit(data) {};\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    className: \"user-profile-page bg-bg pt-lg\",\n    children: [/*#__PURE__*/_jsxDEV(Aside, {\n      className: \"mr-sm\",\n      children: /*#__PURE__*/_jsxDEV(AsideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"bg-white p-sm br-lg\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          text: \"Yeni B\\u0259y\\u0259nnam\\u0259\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(submit),\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"bg-bg\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexWrap: 'wrap'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"\\xD6lk\\u0259 se\\xE7\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$country = errors.country) === null || _errors$country === void 0 ? void 0 : _errors$country.message,\n                children: /*#__PURE__*/_jsxDEV(Selectbox, {\n                  className: \"bg-white w-100\",\n                  data: telData,\n                  name: \"country\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'country type is required'\n                    }\n                  }) //  onChange={handleChange}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Ba\\u011Flamadak\\u0131 m\\u0259hsul say\\u0131\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$count = errors.count) === null || _errors$count === void 0 ? void 0 : _errors$count.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"number\",\n                  name: \"count\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'count is required'\n                    }\n                  }) //  onChange={handleChange}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Track \\u0130D\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$tracking_ID = errors.tracking_ID) === null || _errors$tracking_ID === void 0 ? void 0 : _errors$tracking_ID.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"tracking_ID\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'tracking_ID is required'\n                    }\n                  }) //  onChange={handleChange}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Tarix\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$date = errors.date) === null || _errors$date === void 0 ? void 0 : _errors$date.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"date\",\n                  name: \"date\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'date is required'\n                    }\n                  }) //  onChange={handleChange}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Magaza ad\\u0131\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$shop_name = errors.shop_name) === null || _errors$shop_name === void 0 ? void 0 : _errors$shop_name.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"shop_name\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'shop_name is required'\n                    }\n                  }) //  onChange={handleChange}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"M\\u0259hsul ad\\u0131\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$product_name = errors.product_name) === null || _errors$product_name === void 0 ? void 0 : _errors$product_name.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"product_name\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'product_name is required'\n                    }\n                  }) //  onChange={handleChange}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"\\u018Fsas qrup\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$main_group = errors.main_group) === null || _errors$main_group === void 0 ? void 0 : _errors$main_group.message,\n                children: /*#__PURE__*/_jsxDEV(Selectbox, {\n                  className: \"bg-white w-100 \",\n                  data: props.mainCategories,\n                  name: \"main_group\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'main_group type is required'\n                    }\n                  }),\n                  onChange: function onChange(ev) {\n                    setSubCategories(ev.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Alt qrup\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$sub_group = errors.sub_group) === null || _errors$sub_group === void 0 ? void 0 : _errors$sub_group.message,\n                children: /*#__PURE__*/_jsxDEV(Selectbox, {\n                  className: \"bg-white w-100\",\n                  data: subCategories && props.mainCategories.find(function (x) {\n                    return x.id === subCategories;\n                  }).sub_categories,\n                  name: \"sub_group\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'sub_group type is required'\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Qiym\\u0259t\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$price = errors.price) === null || _errors$price === void 0 ? void 0 : _errors$price.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"number\",\n                  name: \"fin\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'price is required'\n                    }\n                  }),\n                  value: '',\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Valyuta\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$currency = errors.currency) === null || _errors$currency === void 0 ? void 0 : _errors$currency.message,\n                children: /*#__PURE__*/_jsxDEV(Selectbox, {\n                  className: \"bg-white\",\n                  data: telData,\n                  name: \"currency\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'currency type is required'\n                    }\n                  }),\n                  value: '',\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"\\u0130nvoys y\\xFCkl\\u0259\",\n                bodyClass: \"bg-white\",\n                className: \"w-50 pr-xs\",\n                error: (_errors$invoice = errors.invoice) === null || _errors$invoice === void 0 ? void 0 : _errors$invoice.message,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"file\",\n                  name: \"invoice\",\n                  Ref: register({\n                    required: {\n                      value: true,\n                      message: 'invoice is required'\n                    }\n                  }),\n                  value: '',\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n                label: \"Qeyd\",\n                bodyClass: \"bg-white\",\n                bodyStyle: {\n                  height: '150px'\n                },\n                className: \"w-50 pr-xs\",\n                error: (_errors$note = errors.note) === null || _errors$note === void 0 ? void 0 : _errors$note.message,\n                children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"p-xs border-menu w-100 h-100 br-xxs\",\n                  style: {\n                    outline: 'none'\n                  },\n                  placeholder: \"qeydiniz varsa daxil edin\",\n                  name: \"note\",\n                  ref: register({\n                    required: {\n                      value: true,\n                      message: 'note is required'\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            className: \"mt-sm\",\n            style: {\n              justifyContent: 'flex-end'\n            },\n            children: /*#__PURE__*/_jsxDEV(ButtonComponent, {\n              className: \"w-25\",\n              label: \"B\\u0259yan et\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Decleration, \"RgVmGyraJ/UQq8tk4EPz+4Sne6s=\", false, function () {\n  return [useRouter, useForm];\n});\n\n_c = Decleration;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    entry: state.entry\n  };\n};\n\nvar mapDispatchToProps = {};\nexport var __N_SSG = true;\nexport default connect(mapStateToProps)( /*#__PURE__*/memo(Decleration));\n\nvar _c;\n\n$RefreshReg$(_c, \"Decleration\");","map":{"version":3,"sources":["/Users/naibtahmazli/Documents/166kargo/pages/decleration.js"],"names":["router","useRouter","React","memo","useState","useForm","connect","AsideMenu","Aside","ButtonComponent","Card","FromGroup","Input","Main","Page","Selectbox","telData","id","name","Decleration","props","entry","isLoged","push","height","checkSerial","setCheckSerial","locale","locales","defaultLocale","register","errors","handleSubmit","watch","subCategories","setSubCategories","handleChange","ev","target","value","setUser","user","submit","data","display","flexWrap","country","message","required","count","tracking_ID","date","shop_name","product_name","main_group","mainCategories","sub_group","find","x","sub_categories","price","currency","invoice","note","outline","justifyContent","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport router, { useRouter } from \"next/router\";\nimport React, { memo, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport AsideMenu from \"../components/aside-menu/index\";\nimport Aside from '../components/aside/aside';\nimport ButtonComponent from \"../components/button/index\";\nimport Card from \"../components/card/card\";\nimport FromGroup from \"../components/form-group/form-group\";\nimport Input from \"../components/input/input\";\nimport Main from '../components/main/main';\nimport Page from \"../components/page/page\";\nimport Selectbox from \"../components/selectbox/selectbox\";\n\nconst telData = [\n  {id:'Türkiyə',name:'Türkiyə'}\n ]\n \nfunction Decleration(props) {\n\n  if(!props.entry.isLoged){\n    router.push('/register');\n    return (\n        <div style={{height:'100vh'}}></div>\n    )\n  }\n\n  const [checkSerial, setCheckSerial] = useState('AA');\n  const { locale, locales, defaultLocale } = useRouter();\n  const {register,errors,handleSubmit,watch} = useForm();\n  const [subCategories, setSubCategories] = useState('AA');\n\n\n\n  const handleChange = (ev) => {\n     let {name, value} = ev.target;\n     setUser({\n       ...user,\n       [name]: value\n     })\n  }\n\n  const submit = (data) => {\n\n  }\n\n\n\n    return (\n        <Page className='user-profile-page bg-bg pt-lg'>\n            <Aside className='mr-sm'>\n              <AsideMenu/>\n            </Aside>\n         <Main>\n         <Card className='bg-white p-sm br-lg'>\n          <Card.Header text='Yeni Bəyənnamə'/>\n          <form onSubmit={handleSubmit(submit)}>\n          <Card.Body className='bg-bg'>\n            <div style={{display:'flex',flexWrap:'wrap'}}>\n                <FromGroup label='Ölkə seç' bodyClass='bg-white' className='w-50 pr-xs'\n                 error={errors.country?.message}\n                >\n                  <Selectbox className='bg-white w-100' data={telData}\n                   name='country'\n                   Ref={register({\n                    required:{value:true, message:'country type is required'},\n                  })}\n                    //  onChange={handleChange}\n                  />\n                </FromGroup>\n\n                <FromGroup label='Bağlamadakı məhsul sayı' bodyClass='bg-white' className='w-50 pr-xs'\n                error={errors.count?.message}\n                >\n                  <Input type='number' name='count'\n                    Ref={register({\n                      required:{value:true, message:'count is required'},\n                    })}  \n                    //  onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n                <FromGroup label='Track İD' bodyClass='bg-white' className='w-50 pr-xs'\n                error={errors.tracking_ID?.message}\n                >\n                  <Input type='text' name='tracking_ID'\n                     Ref={register({\n                      required:{value:true, message:'tracking_ID is required'},\n                    })}\n                    //  onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n\n                <FromGroup label='Tarix' bodyClass='bg-white' className='w-50 pr-xs'\n                error={errors.date?.message}\n                >\n                  <Input type='date' name='date'\n                     Ref={register({\n                      required:{value:true, message:'date is required'},\n                    })} \n                    //  onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n\n\n                <FromGroup label='Magaza adı' bodyClass='bg-white' className='w-50 pr-xs'\n                error={errors.shop_name?.message}\n                >\n                  <Input type='text' name='shop_name'\n                     Ref={register({\n                       required:{value:true, message:'shop_name is required'},\n                     })}\n                    //  onChange={handleChange}\n                  />\n                </FromGroup>\n\n                <FromGroup label='Məhsul adı' bodyClass='bg-white' className='w-50 pr-xs'\n                error={errors.product_name?.message}\n                >\n                  <Input type='text' name='product_name'\n                     Ref={register({\n                       required:{value:true, message:'product_name is required'},\n                     })}\n                    //  onChange={handleChange}\n                  />\n                </FromGroup>\n\n                <FromGroup label='Əsas qrup' bodyClass='bg-white' className='w-50 pr-xs'\n                 error={errors.main_group?.message}\n                >\n                  <Selectbox className='bg-white w-100 ' data={props.mainCategories}\n                   name='main_group'\n                   Ref={register({\n                    required:{value:true, message:'main_group type is required'},\n                  })}\n                     onChange={(ev) => {\n                       setSubCategories(ev.target.value)\n                     }}\n                  />\n                </FromGroup>\n\n\n                <FromGroup label='Alt qrup' bodyClass='bg-white' className='w-50 pr-xs'\n                 error={errors.sub_group?.message}\n                >\n                  <Selectbox className='bg-white w-100' data={subCategories&& props.mainCategories.find(x => x.id===subCategories).sub_categories}\n                   name='sub_group'\n                   Ref={register({\n                    required:{value:true, message:'sub_group type is required'},\n                  })}\n                  />\n                </FromGroup>\n\n\n                <FromGroup label='Qiymət' bodyClass='bg-white' className='w-50 pr-xs'\n                error={errors.price?.message}\n                >\n                  <Input type='number' name='fin'\n                     Ref={register({\n                       required:{value:true, message:'price is required'}\n                     })} \n                     value={''}\n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n\n\n                <FromGroup label='Valyuta' bodyClass='bg-white' className='w-50 pr-xs'\n                 error={errors.currency?.message}\n                >\n                  <Selectbox className='bg-white' data={telData}\n                   name='currency'\n                   Ref={register({\n                    required:{value:true, message:'currency type is required'},\n                  })}\n                     value={''} \n                     onChange={handleChange}\n                  />\n                </FromGroup>\n\n                <FromGroup label='İnvoys yüklə' bodyClass='bg-white' className='w-50 pr-xs'\n                error={errors.invoice?.message}\n                >\n                  <Input type='file' name='invoice'\n                     Ref={register({\n                       required:{value:true, message:'invoice is required'}\n                     })} \n                     value={''}\n                     onChange={handleChange}\n                  />\n                  \n                </FromGroup>\n\n                <FromGroup label='Qeyd' bodyClass='bg-white' bodyStyle={{height:'150px'}} className='w-50 pr-xs'\n                   error={errors.note?.message}\n                   >\n                      <textarea className='p-xs border-menu w-100 h-100 br-xxs' style={{outline:'none',}} placeholder='qeydiniz varsa daxil edin' name='note'\n                        ref={register({\n                          required:{value:true,message:'note is required'}    \n                        })} \n                      />\n                   </FromGroup>\n            </div>\n          </Card.Body>\n            <Card.Footer className='mt-sm' style={{justifyContent:'flex-end'}}>\n              <ButtonComponent className='w-25'  label='Bəyan et'/>\n            </Card.Footer>\n            </form>\n         </Card>\n            </Main>\n        </Page>\n    )\n}\n\nconst mapStateToProps = state => ({\n  entry: state.entry\n});\n\nconst mapDispatchToProps = {\n\n}\n\n\nexport async function getStaticProps({locale}) {\n\n  let categories = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}categories?lan=${locale}`);\n  let mainCategories = categories.data.map(x => {\n    return {\n      id:x.id,\n      name:x['name'],\n      sub_categories: (x.sub_categories>0 ? x.sub_categories.map(i => ({id:i['id'], name:i[`name_${locale.toLowerCase()}`]})) : [])\n    }\n  })\n  return {\n    props: {\n      mainCategories: mainCategories,\n    },\n  }\n\n}\n\nexport default connect(mapStateToProps)(memo(Decleration))\n"]},"metadata":{},"sourceType":"module"}