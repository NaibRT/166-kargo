{"ast":null,"code":"import axios from \"axios\";\nimport router from \"next/router\";\nimport Swal from \"sweetalert2\";\nimport { IncreaseBalance, login, logout, register, updateUser } from \"./actions\";\nexport const Login = (url, data, headers = {}) => dispatch => {\n  axios.post(`${process.env.NEXT_PUBLIC_API_URL}${url}`, data, {\n    headers: headers\n  }).then(async res => {\n    let data = await res.data;\n    dispatch(login(data));\n    router.push('/packages');\n  }).catch(errors => {\n    dispatch(login({\n      isError: true,\n      errors: errors.response.data\n    }));\n  });\n};\nexport const UserRegister = (url, data, headers = {}) => dispatch => {\n  axios.post(`${process.env.NEXT_PUBLIC_API_URL}${url}`, data, {\n    headers: headers\n  }).then(async res => {\n    Swal.fire({\n      text: 'Əməliyyat uğurla tamamlandı',\n      icon: 'success',\n      confirmButtonText: 'OK'\n    }).then(res => {\n      if (res.isConfirmed) {\n        router.push('/myaddresses');\n      }\n    });\n    let data = await res.data;\n    dispatch(register(data));\n  }).catch(err => {\n    dispatch(register({\n      isError: true,\n      errors: err.response.data\n    }));\n  });\n};\nexport const LogOut = () => dispatch => {\n  console.log('wordek logout');\n  dispatch(logout());\n};\nexport const UpdateUser = (url, data, headers = {}) => dispatch => {\n  axios.put(`${process.env.NEXT_PUBLIC_API_URL}${url}`, data, {\n    headers: headers\n  }).then(res => {\n    dispatch(updateUser(res.data));\n    Swal.fire({\n      text: 'Əməliyyat uğurla yerinə yetirildi',\n      icon: 'success',\n      confirmButtonText: 'OK'\n    });\n  }).catch(err => {\n    dispatch(updateUser({\n      isError: true,\n      errors: err.response.data\n    }));\n  });\n};\nexport const PayByBalanceAction = (url, data, headers) => dispatch => {\n  axios.post(`${process.env.NEXT_PUBLIC_API_URL}${url}`, data, {\n    headers: headers\n  }).then(res => {\n    console.log('req', res);\n    Swal.fire({\n      text: res.data.message,\n      icon: 'success',\n      confirmButtonText: 'OK'\n    });\n    dispatch(PayByBalance(data.balance));\n  }).catch(err => console.log(err));\n};\nexport const IncreaseBalanceAction = balance => dispatch => {\n  dispatch(IncreaseBalance(balance));\n};","map":{"version":3,"sources":["/Users/naibtahmazli/Documents/166kargo/redux/entry/entryActions.js"],"names":["axios","router","Swal","IncreaseBalance","login","logout","register","updateUser","Login","url","data","headers","dispatch","post","process","env","NEXT_PUBLIC_API_URL","then","res","push","catch","errors","isError","response","UserRegister","fire","text","icon","confirmButtonText","isConfirmed","err","LogOut","console","log","UpdateUser","put","PayByBalanceAction","message","PayByBalance","balance","IncreaseBalanceAction"],"mappings":"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","sourcesContent":["\nimport axios from \"axios\";\nimport router from \"next/router\";\nimport Swal from \"sweetalert2\";\nimport { IncreaseBalance, login, logout, register, updateUser } from \"./actions\";\n\nexport const Login = (url,data,headers = {}) => dispatch => {\n    axios.post(`${process.env.NEXT_PUBLIC_API_URL}${url}`,data,{\n        headers:headers,\n      })\n      .then(async res => {\n        let data = await res.data;\n        dispatch(login(data))\n        router.push('/packages')\n      }).catch(errors => {\n        dispatch(login({isError:true,errors:errors.response.data}))\n      })\n}\n\n\nexport const UserRegister = (url,data,headers = {}) => dispatch => {\n  axios.post(`${process.env.NEXT_PUBLIC_API_URL}${url}`,data,{\n      headers:headers,\n    })\n    .then(async res => {\n      Swal.fire({\n        text: 'Əməliyyat uğurla tamamlandı',\n        icon: 'success',\n        confirmButtonText: 'OK',\n      }).then(res => {\n        if(res.isConfirmed){\n          router.push('/myaddresses');\n        }\n      })\n      let data = await res.data;\n      dispatch(register(data))\n    }).catch(err => {\n      dispatch(register({isError:true,errors:err.response.data}))\n    })\n}\n\nexport const LogOut = () => dispatch => {\n   console.log('wordek logout')\n    dispatch(logout())\n}\n\nexport const UpdateUser = (url,data,headers = {}) => dispatch => {\n\n    axios.put(`${process.env.NEXT_PUBLIC_API_URL}${url}`,data,{\n        headers: headers\n      })\n      .then( res => {\n        dispatch(updateUser(res.data))\n         Swal.fire({\n           text: 'Əməliyyat uğurla yerinə yetirildi',\n           icon: 'success',\n           confirmButtonText: 'OK',\n         })\n      })\n      .catch(err => {\n        dispatch(updateUser({isError:true,errors:err.response.data}))\n      })\n  \n}\n\n  export const PayByBalanceAction = (url,data,headers) => dispatch => {\n    axios.post(`${process.env.NEXT_PUBLIC_API_URL}${url}`,data,{\n      headers:headers,\n    }).then(res => {\n      console.log('req',res) \n        Swal.fire({\n          text: res.data.message,\n          icon: 'success',\n          confirmButtonText: 'OK',\n        });\n        dispatch(PayByBalance(data.balance))\n    }).catch(err => console.log(err));\n  }\n\nexport const IncreaseBalanceAction = (balance) => dispatch => {\n    dispatch(IncreaseBalance(balance))\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}