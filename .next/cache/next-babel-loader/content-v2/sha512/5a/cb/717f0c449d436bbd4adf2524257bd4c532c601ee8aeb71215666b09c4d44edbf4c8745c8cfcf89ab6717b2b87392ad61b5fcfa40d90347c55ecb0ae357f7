{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/naibtahmazli/Documents/166kargo/pages/register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useIntl } from 'react-intl';\nimport { connect } from \"react-redux\";\nimport Button from '../components/button';\nimport Card from '../components/card/card';\nimport FromGroup from '../components/form-group/form-group';\nimport Input from '../components/input/input';\nimport Page from '../components/page/page';\nimport RadioButton from '../components/radio-button/radio-button';\nimport Selectbox from '../components/selectbox/selectbox';\nimport Switch from \"../components/switch/switch\";\nimport { UserRegister } from \"../redux/entry/entryActions\";\nconst telData = [{\n  id: '050',\n  name: '050'\n}, {\n  id: '051',\n  name: '051'\n}, {\n  id: '055',\n  name: '055'\n}, {\n  id: '070',\n  name: '070'\n}, {\n  id: '077',\n  name: '077'\n}];\n\nfunction Register(props) {\n  var _errors$firstname, _errors$lastname, _errors$email, _errors$phone, _errors$birthday, _errors$serial, _errors$fin, _errors$nationality, _errors$address, _errors$tin, _errors$password, _errors$password_conf;\n\n  useEffect(() => {\n    clearErrors();\n\n    for (let key in props.Entry.errorMessages.errors) {\n      setError(key, {\n        message: props.Entry.errorMessages.errors[key].join('\\n')\n      });\n    }\n  }, [props.Entry.errorMessages]);\n  const {\n    formatMessage: f\n  } = useIntl();\n  const {\n    0: isKorporative,\n    1: setisKorporative\n  } = useState(false);\n  const {\n    0: checkSerial,\n    1: setCheckSerial\n  } = useState('AA');\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset,\n    watch,\n    setError,\n    clearErrors\n  } = useForm();\n  const password = useRef({});\n  const phone = useRef({});\n  phone.current = watch(\"phone_typ\", '');\n  password.current = watch(\"password\", '');\n\n  const submit = data => {\n    clearErrors();\n\n    let newData = _objectSpread(_objectSpread({}, data), {}, {\n      phone: phone.current + data.phone,\n      birthday: data.birthday.split('-').reverse().join('-')\n    });\n\n    props.UserRegister('auth/register', newData, {\n      'content-type': 'application/json'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    className: \"bg-bg register-page fh\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"mt-lg mb-lg\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"bg-white br-sm mr-sm p-sm w-50\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          text: f({\n            id: 'register'\n          }),\n          endElelment: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"cardHeaderText pr-xs\",\n              style: {\n                fontSize: '1.5rem'\n              },\n              children: f({\n                id: 'corporative'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Switch, {\n              value: isKorporative,\n              onClick: e => {\n                setisKorporative(e.target.checked);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"p-none\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FromGroup, {\n              label: f({\n                id: 'name'\n              }),\n              bodyClass: \"bg-bg p-xs\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$firstname = errors.firstname) === null || _errors$firstname === void 0 ? void 0 : _errors$firstname.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"firstname\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'name-requir'\n                    })\n                  },\n                  pattern: {\n                    value: '',\n                    message: f({\n                      id: 'name-patter'\n                    })\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: f({\n                id: 'surname'\n              }),\n              bodyClass: \"bg-bg p-xs\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$lastname = errors.lastname) === null || _errors$lastname === void 0 ? void 0 : _errors$lastname.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"lastname\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'surname-requir'\n                    })\n                  },\n                  pattern: {\n                    value: '',\n                    message: f({\n                      id: 'surname-patter'\n                    })\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: f({\n                id: 'email'\n              }),\n              bodyClass: \"bg-bg p-xs\",\n              className: \"w-50 pr-xs\",\n              error: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\",\n                name: \"email\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'email-requir'\n                    })\n                  },\n                  pattern: {\n                    value: /^(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){255,})(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){65,}@)(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22))(?:\\.(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22)))*@(?:(?:(?!.*[^.]{64,})(?:(?:(?:xn--)?[a-z0-9]+(?:-[a-z0-9]+)*\\.){1,126}){1,}(?:(?:[a-z][a-z0-9]*)|(?:(?:xn--)[a-z0-9]+))(?:-[a-z0-9]+)*)|(?:\\[(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){7})|(?:(?!(?:.*[a-f0-9][:\\]]){7,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?)))|(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){5}:)|(?:(?!(?:.*[a-f0-9]:){5,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3}:)?)))?(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))(?:\\.(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))){3}))\\]))$/,\n                    message: f({\n                      id: 'email-patter'\n                    })\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: f({\n                id: 'phone'\n              }),\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$phone = errors.phone) === null || _errors$phone === void 0 ? void 0 : _errors$phone.message,\n              children: [/*#__PURE__*/_jsxDEV(Selectbox, {\n                className: \"bg-white\",\n                data: telData,\n                name: \"phone_typ\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'phone-requir'\n                    })\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"tel\",\n                name: \"phone\",\n                maxLength: \"9\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'phone-requir'\n                    })\n                  },\n                  pattern: {\n                    value: /^\\?(\\s+)?[0-9]{3}-?[0-9]{2}-?[0-9]{2}$/,\n                    message: f({\n                      id: 'phone-patter'\n                    })\n                  },\n                  maxLength: {\n                    value: 9,\n                    message: f({\n                      id: 'phone-len'\n                    })\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: f({\n                id: 'gender'\n              }),\n              bodyClass: \"\",\n              className: \"w-50 pr-xs mb-xs\",\n              children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n                text: f({\n                  id: 'men'\n                }),\n                name: \"gender\",\n                id: \"male\",\n                value: \"M\",\n                Ref: register()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n                text: f({\n                  id: 'women'\n                }),\n                name: \"gender\",\n                id: \"female\",\n                value: \"F\",\n                Ref: register()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 12\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: f({\n                id: 'gender'\n              }),\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$birthday = errors.birthday) === null || _errors$birthday === void 0 ? void 0 : _errors$birthday.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                className: \"\",\n                name: \"birthday\",\n                type: \"date\",\n                format: \"dd/mm/yyyy\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'date-requir'\n                    })\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: f({\n                id: 'serial'\n              }),\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$serial = errors.serial) === null || _errors$serial === void 0 ? void 0 : _errors$serial.message,\n              children: [/*#__PURE__*/_jsxDEV(Selectbox, {\n                onChange: ev => {\n                  setCheckSerial(ev.target.value);\n                },\n                className: \"bg-white\",\n                data: [{\n                  id: 'AA',\n                  name: 'AA'\n                }, {\n                  id: 'AZE',\n                  name: 'AZE'\n                }]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"serial\",\n                maxLength: checkSerial === 'AA' ? '7' : '8',\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'serial-requir'\n                    })\n                  },\n                  maxLength: {\n                    value: checkSerial === 'AA' ? 7 : 8,\n                    message: f({\n                      id: 'serial-len'\n                    })\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: f({\n                id: 'fin'\n              }),\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$fin = errors.fin) === null || _errors$fin === void 0 ? void 0 : _errors$fin.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"fin\",\n                maxLength: \"7\",\n                minLength: \"7\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'fin-requir'\n                    })\n                  },\n                  maxLength: {\n                    value: 7,\n                    message: f({\n                      id: 'fin-min-max'\n                    })\n                  },\n                  minLength: {\n                    value: 7,\n                    message: f({\n                      id: 'fin-min-max'\n                    })\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: f({\n                id: 'nationality'\n              }),\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$nationality = errors.nationality) === null || _errors$nationality === void 0 ? void 0 : _errors$nationality.message,\n              children: /*#__PURE__*/_jsxDEV(Selectbox, {\n                className: \"w-100 m-none\",\n                name: \"nationality\",\n                data: [{\n                  id: 'Azerbaijan',\n                  name: 'Azerbaijan'\n                }, {\n                  id: 'Foreign',\n                  name: 'Foreign'\n                }],\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'nationality-requir'\n                    })\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: f({\n                id: 'address'\n              }),\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$address = errors.address) === null || _errors$address === void 0 ? void 0 : _errors$address.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                name: \"address\",\n                type: \"text\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'address-requir'\n                    })\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 10\n            }, this), isKorporative && /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: f({\n                id: 'tin'\n              }),\n              bodyClass: \"bg-bg\",\n              className: \"w-100 mb-xs\",\n              error: (_errors$tin = errors.tin) === null || _errors$tin === void 0 ? void 0 : _errors$tin.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"tin\",\n                Ref: isKorporative && register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'tin-requir'\n                    })\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: f({\n                id: 'password'\n              }),\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs\",\n              error: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                name: \"password\",\n                type: \"password\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'password-requir'\n                    })\n                  },\n                  pattern: {\n                    value: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n                    message: f({\n                      id: 'password-pattern'\n                    })\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FromGroup, {\n              label: f({\n                id: 'repeat-pass'\n              }),\n              bodyClass: \"bg-bg\",\n              className: \"w-50 pr-xs mb-xs\",\n              error: (_errors$password_conf = errors.password_confirmation) === null || _errors$password_conf === void 0 ? void 0 : _errors$password_conf.message,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                name: \"password_confirmation\",\n                type: \"password\",\n                Ref: register({\n                  required: {\n                    value: true,\n                    message: f({\n                      id: 'repeatpas-requir'\n                    })\n                  },\n                  validate: value => value === password.current || f({\n                    id: 'repeatpas-valid'\n                  })\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            className: \"mt-sm\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              label: f({\n                id: 'complate-register'\n              }),\n              endElement: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-xs\",\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 31\n              }, this),\n              className: \"w-100\",\n              onClick: handleSubmit(submit)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-50  mobile\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"w-100 h-100 p-none\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pb-sm\",\n            children: f({\n              id: 'register-hard'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"w-100\",\n            src: \"./assets/images/img1.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n}\n\nconst mapStateToProps = state => ({\n  Entry: state.entry\n});\n\nconst mapDispatchToProps = {\n  UserRegister\n};\nexport default connect(mapStateToProps, mapDispatchToProps)( /*#__PURE__*/memo(Register));","map":{"version":3,"sources":["/Users/naibtahmazli/Documents/166kargo/pages/register.js"],"names":["React","memo","useEffect","useRef","useState","useForm","useIntl","connect","Button","Card","FromGroup","Input","Page","RadioButton","Selectbox","Switch","UserRegister","telData","id","name","Register","props","clearErrors","key","Entry","errorMessages","errors","setError","message","join","formatMessage","f","isKorporative","setisKorporative","checkSerial","setCheckSerial","register","handleSubmit","reset","watch","password","phone","current","submit","data","newData","birthday","split","reverse","display","justifyContent","alignItems","fontSize","e","target","checked","flexWrap","firstname","required","value","pattern","lastname","email","maxLength","serial","ev","fin","minLength","nationality","address","tin","password_confirmation","validate","mapStateToProps","state","entry","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useRef, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useIntl } from 'react-intl'\nimport { connect } from \"react-redux\"\nimport Button from '../components/button'\nimport Card from '../components/card/card'\nimport FromGroup from '../components/form-group/form-group'\nimport Input from '../components/input/input'\nimport Page from '../components/page/page'\nimport RadioButton from '../components/radio-button/radio-button'\nimport Selectbox from '../components/selectbox/selectbox'\nimport Switch from \"../components/switch/switch\"\nimport { UserRegister } from \"../redux/entry/entryActions\"\n\n\n\n\nconst telData = [\n  {id:'050',name:'050'},\n  {id:'051',name:'051'},\n  {id:'055',name:'055'},\n  {id:'070',name:'070'},\n  {id:'077',name:'077'},\n ]\n\nfunction Register(props) {\n\n  useEffect(() => {\n    clearErrors();\n    for(let key in props.Entry.errorMessages.errors){\n      setError(key,{message: props.Entry.errorMessages.errors[key].join('\\n')})\n    }\n  },[props.Entry.errorMessages])\n\n const { formatMessage: f } = useIntl(); \n const [isKorporative, setisKorporative] = useState(false);\n const [checkSerial, setCheckSerial] = useState('AA');\n\n const {register,handleSubmit,errors,reset,watch,setError,clearErrors} = useForm();\n\n const password = useRef({});\n const phone = useRef({});\n\n phone.current = watch(\"phone_typ\",'');\n password.current = watch(\"password\",'');\n\n const submit = (data) => {\n  clearErrors();\n  \n   let newData = {\n     ...data,\n     phone:phone.current + data.phone,\n     birthday: data.birthday.split('-').reverse().join('-')\n   }\n   props.UserRegister('auth/register',newData,{'content-type':'application/json'});\n }\n\n \n return (\n  <Page className='bg-bg register-page fh'>\n    <main className='mt-lg mb-lg'>\n      <Card className='bg-white br-sm mr-sm p-sm w-50'>\n       <Card.Header text={f({id:'register'})} endElelment={\n       <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\n         <h3 className='cardHeaderText pr-xs' style={{fontSize:'1.5rem'}}>{f({id:'corporative'})}</h3>\n         <Switch value={isKorporative} onClick={(e)=>{\n          setisKorporative(e.target.checked)\n       }}/></div>}/>\n       <Card.Body className='p-none'>\n        <form style={{display:'flex',flexWrap:'wrap'}} >\n         <FromGroup label={f({id:'name'})} bodyClass='bg-bg p-xs' className='w-50 pr-xs mb-xs'\n           error={errors.firstname?.message}\n         >\n          <Input type='text' name='firstname'\n             Ref={register({\n               required:{value:true, message:f({id:'name-requir'})},\n               pattern:{value:'',message:f({id:'name-patter'})}\n             })} \n           />\n         </FromGroup>\n         <FromGroup label={f({id:'surname'})} bodyClass='bg-bg p-xs' className='w-50 pr-xs mb-xs'\n           error={errors.lastname?.message}\n           \n         >\n          <Input type='text' name='lastname'\n             Ref={register({\n              required:{value:true, message:f({id:'surname-requir'})},\n              pattern:{value:'',message:f({id:'surname-patter'})}\n            })} \n          />\n         </FromGroup>\n         <FromGroup label={f({id:'email'})} bodyClass='bg-bg p-xs' className='w-50 pr-xs'\n           error={errors.email?.message}\n         >\n          <Input type='email' name='email' \n             Ref={register({\n              required:{value:true, message:f({id:'email-requir'})},\n              pattern:{value:/^(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){255,})(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){65,}@)(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22))(?:\\.(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22)))*@(?:(?:(?!.*[^.]{64,})(?:(?:(?:xn--)?[a-z0-9]+(?:-[a-z0-9]+)*\\.){1,126}){1,}(?:(?:[a-z][a-z0-9]*)|(?:(?:xn--)[a-z0-9]+))(?:-[a-z0-9]+)*)|(?:\\[(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){7})|(?:(?!(?:.*[a-f0-9][:\\]]){7,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?)))|(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){5}:)|(?:(?!(?:.*[a-f0-9]:){5,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3}:)?)))?(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))(?:\\.(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))){3}))\\]))$/,message:f({id:'email-patter'})}\n            })} \n          />\n         </FromGroup>\n         <FromGroup label={f({id:'phone'})} bodyClass='bg-bg' className='w-50 pr-xs mb-xs'\n           error={errors.phone?.message}\n         >\n           <Selectbox className='bg-white' data={telData}\n               name='phone_typ'\n               Ref={register({\n                required:{value:true, message:f({id:'phone-requir'})},\n              })} \n           />\n          <Input type='tel' name='phone'\n              maxLength='9'\n             Ref={register({\n               required:{value:true, message:f({id:'phone-requir'})},\n               pattern:{value:/^\\?(\\s+)?[0-9]{3}-?[0-9]{2}-?[0-9]{2}$/,message:f({id:'phone-patter'})},\n               maxLength:{value:9, message:f({id:'phone-len'})}\n             })} \n          />\n         </FromGroup>\n         <FromGroup label={f({id:'gender'})} bodyClass=''  className='w-50 pr-xs mb-xs'>\n           <RadioButton text={f({id:'men'})}name='gender' id='male' value='M' \n              Ref={register()} \n           />\n           <RadioButton text={f({id:'women'})} name='gender' id='female' value='F' \n              Ref={register()} \n           />\n         </FromGroup>\n         <FromGroup label={f({id:'gender'})} bodyClass='bg-bg' className='w-50 pr-xs mb-xs'\n           error={errors.birthday?.message}\n         >\n           <Input className='' name='birthday' type='date' format='dd/mm/yyyy'\n               Ref={register({\n                required:{value:true, message:f({id:'date-requir'})},\n              })} \n           />\n         </FromGroup>\n         <FromGroup label={f({id:'serial'})} bodyClass='bg-bg' className='w-50 pr-xs mb-xs' \n           error={errors.serial?.message}\n         >\n           <Selectbox onChange={(ev)=>{\n              setCheckSerial(ev.target.value)\n           }} className='bg-white' data={[{id:'AA',name:'AA'},{id:'AZE',name:'AZE'}]}/>\n          <Input type='text' name='serial'\n            maxLength={checkSerial==='AA' ? '7' : '8'}\n            Ref={register({\n              required:{value:true, message:f({id:'serial-requir'})},\n              maxLength:{value: checkSerial==='AA' ? 7 : 8, message:f({id:'serial-len'})}\n            })} \n          />\n         </FromGroup>\n         <FromGroup label={f({id:'fin'})} bodyClass='bg-bg' className='w-50 pr-xs mb-xs' \n           error={errors.fin?.message}\n         >\n          <Input type='text' name='fin'\n            maxLength='7'\n            minLength='7'\n            Ref={register({\n              required:{value:true, message:f({id:'fin-requir'})},\n              maxLength:{value:7,message:f({id:'fin-min-max'})},\n              minLength:{value:7,message:f({id:'fin-min-max'})}\n            })} \n          />\n         </FromGroup>\n         <FromGroup label={f({id:'nationality'})} bodyClass='bg-bg' className='w-50 pr-xs mb-xs' \n           error={errors.nationality?.message}\n         >\n           <Selectbox className='w-100 m-none' name='nationality' data={[{id:'Azerbaijan',name:'Azerbaijan'},{id:'Foreign',name:'Foreign'}]}\n               Ref={register({\n                required:{value:true, message:f({id:'nationality-requir'})},\n              })} \n           />\n         </FromGroup>\n         <FromGroup label={f({id:'address'})} bodyClass='bg-bg' className='w-50 pr-xs mb-xs'\n           error={errors.address?.message}\n         >\n           <Input name='address' type='text'\n              Ref={register({\n                required:{value:true, message:f({id:'address-requir'})},\n              })} \n           />\n         </FromGroup>\n         {\n          isKorporative && \n         <FromGroup label={f({id:'tin'})} bodyClass='bg-bg' className='w-100 mb-xs'\n           error={errors.tin?.message}\n         >\n           <Input type='text' name='tin'\n              Ref={\n                isKorporative && \n                register({\n                  required:{value:true, message:f({id:'tin-requir'})},\n                })\n              }\n            />\n         </FromGroup>\n         }\n         <FromGroup label={f({id:'password'})} bodyClass='bg-bg' className='w-50 pr-xs'\n           error={errors.password?.message}\n         >\n           <Input name='password' type='password' \n             Ref={register({\n               required:{value:true,message:f({id:'password-requir'})},\n               pattern:{value:/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, message:f({id:'password-pattern'})}\n             })}\n           />\n         </FromGroup>\n         <FromGroup label={f({id:'repeat-pass'})} bodyClass='bg-bg' className='w-50 pr-xs mb-xs'\n           error={errors.password_confirmation?.message} \n         >\n           <Input name='password_confirmation' type='password'\n              Ref={register({\n                required:{value:true,message:f({id:'repeatpas-requir'})},\n                validate: value => \n                  value === password.current || f({id:'repeatpas-valid'})\n              })}\n           />\n         </FromGroup>\n        </form>\n        <Card.Footer className='mt-sm'>\n          <Button label={f({id:'complate-register'})} \n                  endElement={<span className='ml-xs'>&rarr;</span>} \n                  className='w-100'\n                  onClick={handleSubmit(submit)} \n          />\n        </Card.Footer>\n       </Card.Body>\n      </Card>\n      <Card className='w-50  mobile'>\n       <Card.Body className='w-100 h-100 p-none'>\n         <p className='pb-sm'>{f({id:'register-hard'})}</p>\n         {/* <video  poster='./assets/images/img1.png'>\n            </video> */}\n         <img className='w-100' src='./assets/images/img1.png'/>\n       </Card.Body>\n      </Card>\n    </main>\n  </Page>\n )\n}\n\nconst mapStateToProps = state => ({\n  Entry: state.entry\n});\n\nconst mapDispatchToProps = {\n  UserRegister\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(memo(Register))\n"]},"metadata":{},"sourceType":"module"}