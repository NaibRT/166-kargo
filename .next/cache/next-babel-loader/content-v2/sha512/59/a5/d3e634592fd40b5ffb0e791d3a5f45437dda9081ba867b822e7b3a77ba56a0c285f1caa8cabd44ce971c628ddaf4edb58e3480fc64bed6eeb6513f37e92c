{"ast":null,"code":"import _regeneratorRuntime from \"/Users/naibtahmazli/Documents/166kargo/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/naibtahmazli/Documents/166kargo/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport router from \"next/router\";\nimport Swal from \"sweetalert2\";\nimport { IncreaseBalance, login, logout, PayByBalance, register, updateUser } from \"./actions\";\nexport var Login = function Login(url, data) {\n  var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return function (dispatch) {\n    axios.post(\"\".concat(process.env.NEXT_PUBLIC_API_URL).concat(url), data, {\n      headers: headers\n    }).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(res) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return res.data;\n\n              case 2:\n                data = _context.sent;\n                dispatch(login(data));\n                router.push('/packages');\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }())[\"catch\"](function (errors) {\n      dispatch(login({\n        isError: true,\n        errors: errors.response.data\n      }));\n    });\n  };\n};\nexport var UserRegister = function UserRegister(url, data) {\n  var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return function (dispatch) {\n    axios.post(\"\".concat(process.env.NEXT_PUBLIC_API_URL).concat(url), data, {\n      headers: headers\n    }).then( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(res) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                Swal.fire({\n                  text: 'Əməliyyat uğurla tamamlandı',\n                  icon: 'success',\n                  confirmButtonText: 'OK'\n                }).then(function (res) {\n                  if (res.isConfirmed) {\n                    router.push('/myaddresses');\n                  }\n                });\n                _context2.next = 3;\n                return res.data;\n\n              case 3:\n                data = _context2.sent;\n                dispatch(register(data));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }())[\"catch\"](function (err) {\n      dispatch(register({\n        isError: true,\n        errors: err.response.data\n      }));\n    });\n  };\n};\nexport var LogOut = function LogOut() {\n  return function (dispatch) {\n    dispatch(logout());\n  };\n};\nexport var UpdateUser = function UpdateUser(url, data) {\n  var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return function (dispatch) {\n    axios.put(\"\".concat(process.env.NEXT_PUBLIC_API_URL).concat(url), data, {\n      headers: headers\n    }).then(function (res) {\n      dispatch(updateUser(res.data));\n      Swal.fire({\n        text: 'Əməliyyat uğurla yerinə yetirildi',\n        icon: 'success',\n        confirmButtonText: 'OK'\n      });\n    })[\"catch\"](function (err) {\n      dispatch(updateUser({\n        isError: true,\n        errors: err.response.data\n      }));\n    });\n  };\n};\nexport var PayByBalanceAction = function PayByBalanceAction(url, data, headers) {\n  return function (dispatch) {\n    axios.post(\"\".concat(process.env.NEXT_PUBLIC_API_URL).concat(url), data, {\n      headers: headers\n    }).then(function (res) {\n      console.log('req', res.data.balance);\n      Swal.fire({\n        text: res.data.message,\n        icon: 'success',\n        confirmButtonText: 'OK'\n      });\n      dispatch(PayByBalance(res.data.balance));\n      router.push(\"/success?message=\".concat(res.data.message));\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var IncreaseBalanceAction = function IncreaseBalanceAction(balance) {\n  return function (dispatch) {\n    dispatch(IncreaseBalance(balance));\n  };\n};","map":null,"metadata":{},"sourceType":"module"}