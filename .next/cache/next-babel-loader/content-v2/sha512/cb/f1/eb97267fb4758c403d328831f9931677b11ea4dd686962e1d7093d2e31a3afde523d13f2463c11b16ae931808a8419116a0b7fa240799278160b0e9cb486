{"ast":null,"code":"import _defineProperty from \"/Users/naibtahmazli/Documents/166kargo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GETDATA } from './actionTypes';\nvar initialState = {\n  data: [],\n  isLoaded: false\n};\n\nvar getDataReducer = function getDataReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GETDATA:\n      state = {\n        data: action.payload,\n        isLoaded: true\n      };\n      break;\n\n    default:\n      state = _objectSpread({}, state);\n      break;\n  }\n\n  return state;\n};\n\nexport default getDataReducer;","map":{"version":3,"sources":["/Users/naibtahmazli/Documents/166kargo/redux/getData/reducer.js"],"names":["GETDATA","initialState","data","isLoaded","getDataReducer","state","action","type","payload"],"mappings":";;;;;;AACA,SACCA,OADD,QAEO,eAFP;AAIA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,QAAQ,EAAE;AAFU,CAArB;;AAKA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKP,OAAL;AACGK,MAAAA,KAAK,GAAG;AACPH,QAAAA,IAAI,EAAEI,MAAM,CAACE,OADN;AAEPL,QAAAA,QAAQ,EAAE;AAFH,OAAR;AAIF;;AACD;AACCE,MAAAA,KAAK,qBAAQA,KAAR,CAAL;AACA;AATF;;AAWA,SAAOA,KAAP;AACD,CAbD;;AAeA,eAAeD,cAAf","sourcesContent":["\nimport {\n GETDATA\n} from './actionTypes'\n\nconst initialState = {\n data: [],\n isLoaded: false\n}\n\nconst getDataReducer = (state = initialState, action) => {\n  switch (action.type) {\n   case GETDATA:\n      state = {\n       data: action.payload,\n       isLoaded: true\n      }\n    break;\n   default:\n    state = { ...state }\n    break;\n  }\n  return state;\n}\n\nexport default getDataReducer;"]},"metadata":{},"sourceType":"module"}